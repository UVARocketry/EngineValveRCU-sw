

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Aug 05 08:32:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=4,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=4,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=4,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=4,class=CODE,delta=1
    47                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	text31,global,reloc=4,class=CODE,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 05/05/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F26K83 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	idataBANK0
    90  001732                     __pidataBANK0:
    91                           	callstack 0
    92                           
    93                           ;initializer for _count_delta_matrix
    94  001732  00                 	db	0
    95  001733  01                 	db	1
    96  001734  FF                 	db	255
    97  001735  02                 	db	2
    98  001736  FF                 	db	255
    99  001737  00                 	db	0
   100  001738  02                 	db	2
   101  001739  01                 	db	1
   102  00173A  01                 	db	1
   103  00173B  02                 	db	2
   104  00173C  00                 	db	0
   105  00173D  FF                 	db	255
   106  00173E  02                 	db	2
   107  00173F  FF                 	db	255
   108  001740  01                 	db	1
   109  001741  00                 	db	0
   110                           
   111                           ;initializer for _fuel_press
   112  001742  02                 	db	2
   113  001743  00                 	db	0
   114  001744  00                 	db	0
   115  001745  00                 	db	0
   116  001746  00                 	db	0
   117  001747  00                 	db	0
   118  001748  00                 	db	0
   119  001749  00                 	db	0
   120  00174A  00                 	db	0
   121                           
   122                           ;initializer for _ox_main
   123  00174B  01                 	db	1
   124  00174C  00                 	db	0
   125  00174D  00                 	db	0
   126  00174E  00                 	db	0
   127  00174F  00                 	db	0
   128  001750  00                 	db	0
   129  001751  00                 	db	0
   130  001752  00                 	db	0
   131  001753  00                 	db	0
   132                           
   133                           	psect	idataBANK1
   134  0016F2                     __pidataBANK1:
   135                           	callstack 0
   136                           
   137                           ;initializer for _msg
   138  0016F2  48                 	db	72
   139  0016F3  65                 	db	101
   140  0016F4  6C                 	db	108
   141  0016F5  6C                 	db	108
   142  0016F6  6F                 	db	111
   143  0016F7  20                 	db	32
   144  0016F8  77                 	db	119
   145  0016F9  6F                 	db	111
   146  0016FA  72                 	db	114
   147  0016FB  6C                 	db	108
   148  0016FC  64                 	db	100
   149  0016FD  21                 	db	33
   150  0016FE  20                 	db	32
   151  0016FF  31                 	db	49
   152  001700  32                 	db	50
   153  001701  33                 	db	51
   154  001702  34                 	db	52
   155  001703  35                 	db	53
   156  001704  36                 	db	54
   157  001705  37                 	db	55
   158  001706  38                 	db	56
   159  001707  39                 	db	57
   160  001708  30                 	db	48
   161  001709  0A                 	db	10
   162  00170A  00                 	db	0
   163  00170B  00                 	db	0
   164  00170C  00                 	db	0
   165  00170D  00                 	db	0
   166  00170E  00                 	db	0
   167  00170F  00                 	db	0
   168  001710  00                 	db	0
   169  001711  00                 	db	0
   170  001712  00                 	db	0
   171  001713  00                 	db	0
   172  001714  00                 	db	0
   173  001715  00                 	db	0
   174  001716  00                 	db	0
   175  001717  00                 	db	0
   176  001718  00                 	db	0
   177  001719  00                 	db	0
   178  00171A  00                 	db	0
   179  00171B  00                 	db	0
   180  00171C  00                 	db	0
   181  00171D  00                 	db	0
   182  00171E  00                 	db	0
   183  00171F  00                 	db	0
   184  001720  00                 	db	0
   185  001721  00                 	db	0
   186  001722  00                 	db	0
   187  001723  00                 	db	0
   188  001724  00                 	db	0
   189  001725  00                 	db	0
   190  001726  00                 	db	0
   191  001727  00                 	db	0
   192  001728  00                 	db	0
   193  001729  00                 	db	0
   194  00172A  00                 	db	0
   195  00172B  00                 	db	0
   196  00172C  00                 	db	0
   197  00172D  00                 	db	0
   198  00172E  00                 	db	0
   199  00172F  00                 	db	0
   200  001730  00                 	db	0
   201  001731  00                 	db	0
   202                           
   203                           	psect	nvCOMRAM
   204  00003D                     __pnvCOMRAM:
   205                           	callstack 0
   206  00003D                     _can_rx_callback:
   207                           	callstack 0
   208  00003D                     	ds	2
   209  00003F                     _one_kHz_callback:
   210                           	callstack 0
   211  00003F                     	ds	2
   212  0000                     _TXB0DLCbits	set	14309
   213  0000                     _TXB0SIDLbits	set	14306
   214  0000                     _TXB0SIDL	set	14306
   215  0000                     _TXB0SIDH	set	14305
   216  0000                     _TXB0CONbits	set	14304
   217  0000                     _BRGCON2bits	set	14084
   218  0000                     _BRGCON1bits	set	14083
   219  0000                     _BRGCON3bits	set	14085
   220  0000                     _TXB0D0	set	14310
   221  0000                     _PIR3bits	set	14755
   222  0000                     _PIE3bits	set	14739
   223  0000                     _PIR5bits	set	14757
   224  0000                     _PIE5bits	set	14741
   225  0000                     _RC0PPS	set	14864
   226  0000                     _RC7PPS	set	14871
   227  0000                     _CANRXPPS	set	15085
   228  0000                     _ANSELAbits	set	14912
   229  0000                     _ANSELBbits	set	14928
   230  0000                     _RB2PPS	set	14858
   231  0000                     _RB0PPS	set	14856
   232  0000                     _ANSELB	set	14928
   233  0000                     _WPUA	set	14913
   234  0000                     _ANSELA	set	14912
   235  0000                     _ANSELCbits	set	14944
   236  0000                     _U1TXB	set	15850
   237  0000                     _U1CON1bits	set	15859
   238  0000                     _U1BRGL	set	15861
   239  0000                     _U1BRGH	set	15862
   240  0000                     _U1CON0bits	set	15858
   241  0000                     _T0CON0bits	set	16312
   242  0000                     _T0CON1bits	set	16313
   243  0000                     _RXB0DLCbits	set	16261
   244  0000                     _RXB0SIDL	set	16258
   245  0000                     _RXB0SIDH	set	16257
   246  0000                     _RXB0CONbits	set	16256
   247  0000                     _CANSTATbits	set	16270
   248  0000                     _CANCONbits	set	16271
   249  0000                     _TRISAbits	set	16322
   250  0000                     _TRISBbits	set	16323
   251  0000                     _LATBbits	set	16315
   252  0000                     _TRISB	set	16323
   253  0000                     _CCPR2L	set	16248
   254  0000                     _CCPR2H	set	16249
   255  0000                     _CCP2CONbits	set	16250
   256  0000                     _CCPR1L	set	16252
   257  0000                     _CCPR1H	set	16253
   258  0000                     _CCP1CONbits	set	16254
   259  0000                     _T2CONbits	set	16300
   260  0000                     _T2CLK	set	16302
   261  0000                     _PORTAbits	set	16330
   262  0000                     _LATCbits	set	16316
   263  0000                     _INTCON0bits	set	16338
   264  0000                     _TRISCbits	set	16324
   265  0000                     _RXB0D0	set	16262
   266                           
   267                           ; #config settings
   268                           
   269                           	psect	cinit
   270  00124E                     __pcinit:
   271                           	callstack 0
   272  00124E                     start_initialization:
   273                           	callstack 0
   274  00124E                     __initialization:
   275                           	callstack 0
   276                           
   277                           ; Initialize objects allocated to BANK1 (64 bytes)
   278                           ; load TBLPTR registers with __pidataBANK1
   279  00124E  0EF2               	movlw	low __pidataBANK1
   280  001250  6EF6               	movwf	tblptrl,c
   281  001252  0E16               	movlw	high __pidataBANK1
   282  001254  6EF7               	movwf	tblptrh,c
   283  001256  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   284  001258  6EF8               	movwf	tblptru,c
   285  00125A  EE00  F198         	lfsr	0,__pdataBANK1
   286  00125E  EE10 F040          	lfsr	1,64
   287  001262                     copy_data0:
   288  001262  0009               	tblrd		*+
   289  001264  006F FFD7 FFEE     	movff	tablat,postinc0
   290  00126A  50E5               	movf	postdec1,w,c
   291  00126C  50E1               	movf	fsr1l,w,c
   292  00126E  E1F9               	bnz	copy_data0
   293                           
   294                           ; Initialize objects allocated to BANK0 (34 bytes)
   295                           ; load TBLPTR registers with __pidataBANK0
   296  001270  0E32               	movlw	low __pidataBANK0
   297  001272  6EF6               	movwf	tblptrl,c
   298  001274  0E17               	movlw	high __pidataBANK0
   299  001276  6EF7               	movwf	tblptrh,c
   300  001278  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   301  00127A  6EF8               	movwf	tblptru,c
   302  00127C  EE00  F0A9         	lfsr	0,__pdataBANK0
   303  001280  EE10 F022          	lfsr	1,34
   304  001284                     copy_data1:
   305  001284  0009               	tblrd		*+
   306  001286  006F FFD7 FFEE     	movff	tablat,postinc0
   307  00128C  50E5               	movf	postdec1,w,c
   308  00128E  50E1               	movf	fsr1l,w,c
   309  001290  E1F9               	bnz	copy_data1
   310                           
   311                           ; Clear objects allocated to BANK1 (152 bytes)
   312  001292  EE00  F100         	lfsr	0,__pbssBANK1
   313  001296  0E98               	movlw	152
   314  001298                     clear_0:
   315  001298  6AEE               	clrf	postinc0,c
   316  00129A  06E8               	decf	wreg,f,c
   317  00129C  E1FD               	bnz	clear_0
   318                           
   319                           ; Clear objects allocated to BANK0 (14 bytes)
   320  00129E  EE00  F0CB         	lfsr	0,__pbssBANK0
   321  0012A2  0E0E               	movlw	14
   322  0012A4                     clear_1:
   323  0012A4  6AEE               	clrf	postinc0,c
   324  0012A6  06E8               	decf	wreg,f,c
   325  0012A8  E1FD               	bnz	clear_1
   326                           
   327                           ; Clear objects allocated to COMRAM (29 bytes)
   328  0012AA  EE00  F020         	lfsr	0,__pbssCOMRAM
   329  0012AE  0E1D               	movlw	29
   330  0012B0                     clear_2:
   331  0012B0  6AEE               	clrf	postinc0,c
   332  0012B2  06E8               	decf	wreg,f,c
   333  0012B4  E1FD               	bnz	clear_2
   334                           
   335                           ;
   336                           ; Setup IVTBASE
   337                           ;
   338  0012B6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   339  0012B8  6ED5               	movwf	213,c
   340  0012BA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   341  0012BC  6ED6               	movwf	214,c
   342  0012BE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   343  0012C0  6ED7               	movwf	215,c
   344  0012C2                     end_of_initialization:
   345                           	callstack 0
   346  0012C2                     __end_of__initialization:
   347                           	callstack 0
   348  0012C2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   349  0012C4  6EF8               	movwf	tblptru,c
   350  0012C6  0100               	movlb	0
   351  0012C8  EFF4  F004         	goto	_main	;jump to C main() function
   352                           
   353                           	psect	bssCOMRAM
   354  000020                     __pbssCOMRAM:
   355                           	callstack 0
   356  000020                     _secs:
   357                           	callstack 0
   358  000020                     	ds	2
   359  000022                     _last_second_ms:
   360                           	callstack 0
   361  000022                     	ds	2
   362  000024                     _ms:
   363                           	callstack 0
   364  000024                     	ds	2
   365  000026                     _last_hb_rx_time:
   366                           	callstack 0
   367  000026                     	ds	2
   368  000028                     _last_2Hz_time:
   369                           	callstack 0
   370  000028                     	ds	2
   371  00002A                     _last_10Hz_time:
   372                           	callstack 0
   373  00002A                     	ds	2
   374  00002C                     _last_200Hz_time:
   375                           	callstack 0
   376  00002C                     	ds	2
   377  00002E                     _enc_2_count:
   378                           	callstack 0
   379  00002E                     	ds	2
   380  000030                     _enc_1_count:
   381                           	callstack 0
   382  000030                     	ds	2
   383  000032                     _tail:
   384                           	callstack 0
   385  000032                     	ds	1
   386  000033                     _head:
   387                           	callstack 0
   388  000033                     	ds	1
   389  000034                     _enc_2_prev_state:
   390                           	callstack 0
   391  000034                     	ds	1
   392  000035                     _enc_1_prev_state:
   393                           	callstack 0
   394  000035                     	ds	1
   395  000036                     _hb_rx_flag:
   396                           	callstack 0
   397  000036                     	ds	1
   398  000037                     _hb:
   399                           	callstack 0
   400  000037                     	ds	3
   401  00003A                     _valve_cmd:
   402                           	callstack 0
   403  00003A                     	ds	3
   404                           
   405                           	psect	bssBANK0
   406  0000CB                     __pbssBANK0:
   407                           	callstack 0
   408  0000CB                     _txq_tail:
   409                           	callstack 0
   410  0000CB                     	ds	1
   411  0000CC                     _txq_head:
   412                           	callstack 0
   413  0000CC                     	ds	1
   414  0000CD                     _encoders_errors:
   415                           	callstack 0
   416  0000CD                     	ds	1
   417  0000CE                     _rx_msg:
   418                           	callstack 0
   419  0000CE                     	ds	11
   420                           
   421                           	psect	dataBANK0
   422  0000A9                     __pdataBANK0:
   423                           	callstack 0
   424  0000A9                     _count_delta_matrix:
   425                           	callstack 0
   426  0000A9                     	ds	16
   427  0000B9                     _fuel_press:
   428                           	callstack 0
   429  0000B9                     	ds	9
   430  0000C2                     _ox_main:
   431                           	callstack 0
   432  0000C2                     	ds	9
   433                           
   434                           	psect	bssBANK1
   435  000100                     __pbssBANK1:
   436                           	callstack 0
   437  000100                     _tx_ring_buf:
   438                           	callstack 0
   439  000100                     	ds	64
   440  000140                     _txq:
   441                           	callstack 0
   442  000140                     	ds	88
   443                           
   444                           	psect	dataBANK1
   445  000198                     __pdataBANK1:
   446                           	callstack 0
   447  000198                     _msg:
   448                           	callstack 0
   449  000198                     	ds	64
   450                           
   451                           	psect	cstackBANK0
   452  000060                     __pcstackBANK0:
   453                           	callstack 0
   454  000060                     ??_count_delta:
   455                           
   456                           ; 1 bytes @ 0x0
   457  000060                     	ds	2
   458  000062                     count_delta@state:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x2
   462  000062                     	ds	1
   463  000063                     count_delta@res:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x3
   467  000063                     	ds	1
   468  000064                     ??_encoders_update:
   469                           
   470                           ; 1 bytes @ 0x4
   471  000064                     	ds	2
   472  000066                     encoders_update@enc_1_state:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x6
   476  000066                     	ds	1
   477  000067                     encoders_update@enc_2_state:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x7
   481  000067                     	ds	1
   482  000068                     ??_TMR0_int:
   483                           
   484                           ; 1 bytes @ 0x8
   485  000068                     	ds	2
   486  00006A                     ?_time_millis:
   487                           	callstack 0
   488  00006A                     ?_time_secs:
   489                           	callstack 0
   490  00006A                     ?_abs:
   491                           	callstack 0
   492  00006A                     ?___xxtofl:
   493                           	callstack 0
   494  00006A                     encoders_is_limit@which:
   495                           	callstack 0
   496  00006A                     calc_speed@goal_pos:
   497                           	callstack 0
   498  00006A                     solenoids_set@cmd:
   499                           	callstack 0
   500  00006A                     uart_tx@bytes:
   501                           	callstack 0
   502  00006A                     abs@a:
   503                           	callstack 0
   504  00006A                     memcpy@d1:
   505                           	callstack 0
   506  00006A                     ___xxtofl@val:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0xA
   510  00006A                     	ds	1
   511  00006B                     calc_speed@pos:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0xB
   515  00006B                     	ds	1
   516  00006C                     ??_abs:
   517  00006C                     calc_speed@err:
   518                           	callstack 0
   519  00006C                     time_millis@result:
   520                           	callstack 0
   521  00006C                     time_secs@result:
   522                           	callstack 0
   523  00006C                     uart_tx@n_bytes:
   524                           	callstack 0
   525  00006C                     memcpy@s1:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0xC
   529  00006C                     	ds	1
   530  00006D                     motor_set@speed:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0xD
   534  00006D                     	ds	1
   535  00006E                     ??_uart_tx:
   536  00006E                     ??_motor_set:
   537  00006E                     ??___xxtofl:
   538  00006E                     memcpy@n:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0xE
   542  00006E                     	ds	2
   543  000070                     memcpy@tmp:
   544                           	callstack 0
   545  000070                     motor_set@pwm:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x10
   549  000070                     	ds	1
   550  000071                     memcpy@d:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x11
   554  000071                     	ds	1
   555  000072                     motor_set@which:
   556                           	callstack 0
   557  000072                     ___xxtofl@sign:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x12
   561  000072                     	ds	1
   562  000073                     ___xxtofl@exp:
   563                           	callstack 0
   564  000073                     memcpy@s:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x13
   568  000073                     	ds	1
   569  000074                     uart_tx@i:
   570                           	callstack 0
   571  000074                     ___xxtofl@arg:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x14
   575  000074                     	ds	1
   576  000075                     can_txq_push@id:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x15
   580  000075                     	ds	2
   581  000077                     can_txq_push@len:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x17
   585  000077                     	ds	1
   586  000078                     ?___flmul:
   587                           	callstack 0
   588  000078                     can_txq_push@data:
   589                           	callstack 0
   590  000078                     ___flmul@b:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x18
   594  000078                     	ds	2
   595  00007A                     ??_can_txq_push:
   596                           
   597                           ; 1 bytes @ 0x1A
   598  00007A                     	ds	2
   599  00007C                     ___flmul@a:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0x1C
   603  00007C                     	ds	4
   604  000080                     ??___flmul:
   605                           
   606                           ; 1 bytes @ 0x20
   607  000080                     	ds	4
   608  000084                     ___flmul@sign:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x24
   612  000084                     	ds	1
   613  000085                     ___flmul@aexp:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x25
   617  000085                     	ds	1
   618  000086                     ___flmul@grs:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x26
   622  000086                     	ds	4
   623  00008A                     ___flmul@bexp:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x2A
   627  00008A                     	ds	1
   628  00008B                     ___flmul@prod:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x2B
   632  00008B                     	ds	4
   633  00008F                     ___flmul@temp:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x2F
   637  00008F                     	ds	2
   638  000091                     ?___fltol:
   639                           	callstack 0
   640  000091                     ___fltol@f1:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x31
   644  000091                     	ds	4
   645  000095                     ??___fltol:
   646                           
   647                           ; 1 bytes @ 0x35
   648  000095                     	ds	4
   649  000099                     ___fltol@sign1:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x39
   653  000099                     	ds	1
   654  00009A                     ___fltol@exp1:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x3A
   658  00009A                     	ds	1
   659  00009B                     encoders_get_pos@which:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x3B
   663  00009B                     	ds	1
   664  00009C                     motor_control@motor:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x3C
   668  00009C                     	ds	2
   669  00009E                     ??_motor_control:
   670                           
   671                           ; 1 bytes @ 0x3E
   672  00009E                     	ds	2
   673  0000A0                     _motor_control$713:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x40
   677  0000A0                     	ds	1
   678  0000A1                     _motor_control$714:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x41
   682  0000A1                     	ds	1
   683  0000A2                     _motor_control$716:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x42
   687  0000A2                     	ds	1
   688  0000A3                     _motor_control$717:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x43
   692  0000A3                     	ds	1
   693  0000A4                     motor_control@delta_time:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x44
   697  0000A4                     	ds	2
   698  0000A6                     motor_control@delta_pos:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x46
   702  0000A6                     	ds	2
   703  0000A8                     ??_main:
   704                           
   705                           ; 1 bytes @ 0x48
   706  0000A8                     	ds	1
   707                           
   708                           	psect	cstackCOMRAM
   709  000001                     __pcstackCOMRAM:
   710                           	callstack 0
   711  000001                     on_can_rx@msg:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x0
   715  000001                     	ds	2
   716  000003                     ??_on_can_rx:
   717                           
   718                           ; 1 bytes @ 0x2
   719  000003                     	ds	9
   720  00000C                     ??_RXB0_int:
   721                           
   722                           ; 1 bytes @ 0xB
   723  00000C                     	ds	4
   724  000010                     i2memcpy@d1:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0xF
   728  000010                     	ds	2
   729  000012                     i2memcpy@s1:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x11
   733  000012                     	ds	2
   734  000014                     i2memcpy@n:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x13
   738  000014                     	ds	2
   739  000016                     i2memcpy@d:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x15
   743  000016                     	ds	2
   744  000018                     i2memcpy@s:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x17
   748  000018                     	ds	2
   749  00001A                     i2memcpy@tmp:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x19
   753  00001A                     	ds	1
   754  00001B                     can_tx@msg:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x1A
   758  00001B                     	ds	2
   759  00001D                     ??_can_tx:
   760                           
   761                           ; 1 bytes @ 0x1C
   762  00001D                     	ds	2
   763  00001F                     count_delta@prev_state:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x1E
   767  00001F                     	ds	1
   768  000020                     
   769                           ; 1 bytes @ 0x1F
   770 ;;
   771 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   772 ;;
   773 ;; *************** function _main *****************
   774 ;; Defined at:
   775 ;;		line 54 in file "main.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  2   70[None  ] int 
   782 ;; Registers used:
   783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;Total ram usage:        1 bytes
   794 ;; Hardware stack levels required when called: 6
   795 ;; This function calls:
   796 ;;		_can_init
   797 ;;		_can_txq_push
   798 ;;		_encoders_init
   799 ;;		_motor_control
   800 ;;		_motors_init
   801 ;;		_solenoids_init
   802 ;;		_solenoids_set
   803 ;;		_time_init
   804 ;;		_time_millis
   805 ;;		_time_secs
   806 ;;		_uart_init
   807 ;;		_uart_tx
   808 ;; This function is called by:
   809 ;;		Startup code after reset
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text0
   814  0009E8                     __ptext0:
   815                           	callstack 0
   816  0009E8                     _main:
   817                           	callstack 25
   818  0009E8                     
   819                           ;main.c: 57:     ANSELCbits.ANSELC3 = 0;
   820  0009E8  013A               	movlb	58	; () banked
   821  0009EA  9760               	bcf	96,3,b	;volatile
   822                           
   823                           ;main.c: 58:     TRISCbits.TRISC3 = 0;
   824  0009EC  96C4               	bcf	196,3,c	;volatile
   825                           
   826                           ;main.c: 60:     INTCON0bits.GIE = 1;
   827  0009EE  8ED2               	bsf	210,7,c	;volatile
   828  0009F0                     
   829                           ; BSR set to: 58
   830                           ;main.c: 62:     one_kHz_callback = &encoders_update;
   831  0009F0  0E10               	movlw	low _encoders_update
   832  0009F2  6E3F               	movwf	_one_kHz_callback^0,c
   833  0009F4  0E11               	movlw	high _encoders_update
   834  0009F6  6E40               	movwf	(_one_kHz_callback+1)^0,c
   835  0009F8                     
   836                           ; BSR set to: 58
   837                           ;main.c: 63:     time_init();
   838  0009F8  ECC4  F00B         	call	_time_init	;wreg free
   839  0009FC                     
   840                           ;main.c: 64:     uart_init();
   841  0009FC  ECAA  F00B         	call	_uart_init	;wreg free
   842                           
   843                           ;main.c: 65:     can_rx_callback = &on_can_rx;
   844  000A00  0E02               	movlw	low _on_can_rx
   845  000A02  6E3D               	movwf	_can_rx_callback^0,c
   846  000A04  0E0F               	movlw	high _on_can_rx
   847  000A06  6E3E               	movwf	(_can_rx_callback+1)^0,c
   848  000A08                     
   849                           ;main.c: 66:     can_init();
   850  000A08  EC66  F009         	call	_can_init	;wreg free
   851                           
   852                           ;main.c: 67:     solenoids_init();
   853  000A0C  ECDC  F00B         	call	_solenoids_init	;wreg free
   854  000A10                     
   855                           ;main.c: 68:     encoders_init();
   856  000A10  ECE6  F00B         	call	_encoders_init	;wreg free
   857  000A14                     
   858                           ;main.c: 69:     motors_init();
   859  000A14  EC13  F00B         	call	_motors_init	;wreg free
   860  000A18                     
   861                           ;main.c: 80:     uart_tx((uint8_t*) msg, sizeof (msg));
   862  000A18  0E98               	movlw	low _msg
   863  000A1A  0100               	movlb	0	; () banked
   864  000A1C  6F6A               	movwf	uart_tx@bytes& (0+255),b
   865  000A1E  0E01               	movlw	high _msg
   866  000A20  6F6B               	movwf	(uart_tx@bytes+1)& (0+255),b
   867  000A22  0E00               	movlw	0
   868  000A24  6F6D               	movwf	(uart_tx@n_bytes+1)& (0+255),b
   869  000A26  0E40               	movlw	64
   870  000A28  6F6C               	movwf	uart_tx@n_bytes& (0+255),b
   871  000A2A  ECDC  F007         	call	_uart_tx	;wreg free
   872  000A2E                     l3023:
   873                           
   874                           ;main.c: 87:         if (time_millis() - last_200Hz_time > 5) {
   875  000A2E  ECD0  F00B         	call	_time_millis	;wreg free
   876  000A32  502C               	movf	_last_200Hz_time^0,w,c
   877  000A34  0100               	movlb	0	; () banked
   878  000A36  5F6A               	subwf	?_time_millis& (0+255),f,b
   879  000A38  502D               	movf	(_last_200Hz_time+1)^0,w,c
   880  000A3A  5B6B               	subwfb	(?_time_millis+1)& (0+255),f,b
   881  000A3C  516B               	movf	(?_time_millis+1)& (0+255),w,b
   882  000A3E  E109               	bnz	u3110
   883  000A40  0E06               	movlw	6
   884  000A42  5D6A               	subwf	?_time_millis& (0+255),w,b
   885  000A44  A0D8               	btfss	status,0,c
   886  000A46  EF27  F005         	goto	u3111
   887  000A4A  EF29  F005         	goto	u3110
   888  000A4E                     u3111:
   889  000A4E  EF44  F005         	goto	l3033
   890  000A52                     u3110:
   891  000A52                     
   892                           ; BSR set to: 0
   893                           ;main.c: 88:             last_200Hz_time = time_millis();
   894  000A52  ECD0  F00B         	call	_time_millis	;wreg free
   895  000A56  C06A  F02C         	movff	?_time_millis,_last_200Hz_time
   896  000A5A  C06B  F02D         	movff	?_time_millis+1,_last_200Hz_time+1
   897  000A5E                     
   898                           ;main.c: 92:             motor_control(&ox_main);
   899  000A5E  0EC2               	movlw	low _ox_main
   900  000A60  0100               	movlb	0	; () banked
   901  000A62  6F9C               	movwf	motor_control@motor& (0+255),b
   902  000A64  0E00               	movlw	high _ox_main
   903  000A66  6F9D               	movwf	(motor_control@motor+1)& (0+255),b
   904  000A68  EC7E  F002         	call	_motor_control	;wreg free
   905  000A6C                     
   906                           ;main.c: 93:             motor_control(&fuel_press);
   907  000A6C  0EB9               	movlw	low _fuel_press
   908  000A6E  0100               	movlb	0	; () banked
   909  000A70  6F9C               	movwf	motor_control@motor& (0+255),b
   910  000A72  0E00               	movlw	high _fuel_press
   911  000A74  6F9D               	movwf	(motor_control@motor+1)& (0+255),b
   912  000A76  EC7E  F002         	call	_motor_control	;wreg free
   913  000A7A                     
   914                           ;main.c: 94:             solenoids_set(&(valve_cmd.solenoids));
   915  000A7A  0E3C               	movlw	low (_valve_cmd+2)
   916  000A7C  0100               	movlb	0	; () banked
   917  000A7E  6F6A               	movwf	solenoids_set@cmd& (0+255),b
   918  000A80  0E00               	movlw	high (_valve_cmd+2)
   919  000A82  6F6B               	movwf	(solenoids_set@cmd+1)& (0+255),b
   920  000A84  EC0D  F00A         	call	_solenoids_set	;wreg free
   921  000A88                     l3033:
   922                           
   923                           ;main.c: 97:         if (time_millis() - last_10Hz_time > 100) {
   924  000A88  ECD0  F00B         	call	_time_millis	;wreg free
   925  000A8C  502A               	movf	_last_10Hz_time^0,w,c
   926  000A8E  0100               	movlb	0	; () banked
   927  000A90  5F6A               	subwf	?_time_millis& (0+255),f,b
   928  000A92  502B               	movf	(_last_10Hz_time+1)^0,w,c
   929  000A94  5B6B               	subwfb	(?_time_millis+1)& (0+255),f,b
   930  000A96  516B               	movf	(?_time_millis+1)& (0+255),w,b
   931  000A98  E109               	bnz	u3120
   932  000A9A  0E65               	movlw	101
   933  000A9C  5D6A               	subwf	?_time_millis& (0+255),w,b
   934  000A9E  A0D8               	btfss	status,0,c
   935  000AA0  EF54  F005         	goto	u3121
   936  000AA4  EF56  F005         	goto	u3120
   937  000AA8                     u3121:
   938  000AA8  EF76  F005         	goto	l3041
   939  000AAC                     u3120:
   940  000AAC                     
   941                           ; BSR set to: 0
   942                           ;main.c: 98:             last_10Hz_time = time_millis();
   943  000AAC  ECD0  F00B         	call	_time_millis	;wreg free
   944  000AB0  C06A  F02A         	movff	?_time_millis,_last_10Hz_time
   945  000AB4  C06B  F02B         	movff	?_time_millis+1,_last_10Hz_time+1
   946  000AB8                     
   947                           ;main.c: 100:             can_txq_push(0x200 | 2, sizeof (MotorStatus_t), (uint8_t*)&ox_
      +                          main.status);
   948  000AB8  0E02               	movlw	2
   949  000ABA  0100               	movlb	0	; () banked
   950  000ABC  6F76               	movwf	(can_txq_push@id+1)& (0+255),b
   951  000ABE  0E02               	movlw	2
   952  000AC0  6F75               	movwf	can_txq_push@id& (0+255),b
   953  000AC2  0E04               	movlw	4
   954  000AC4  6F77               	movwf	can_txq_push@len& (0+255),b
   955  000AC6  0EC3               	movlw	low (_ox_main+1)
   956  000AC8  6F78               	movwf	can_txq_push@data& (0+255),b
   957  000ACA  0E00               	movlw	high (_ox_main+1)
   958  000ACC  6F79               	movwf	(can_txq_push@data+1)& (0+255),b
   959  000ACE  ECB0  F006         	call	_can_txq_push	;wreg free
   960  000AD2                     
   961                           ;main.c: 101:             can_txq_push(0x210 | 2, sizeof(MotorStatus_t), (uint8_t*)&fuel
      +                          _press.status);
   962  000AD2  0E02               	movlw	2
   963  000AD4  0100               	movlb	0	; () banked
   964  000AD6  6F76               	movwf	(can_txq_push@id+1)& (0+255),b
   965  000AD8  0E12               	movlw	18
   966  000ADA  6F75               	movwf	can_txq_push@id& (0+255),b
   967  000ADC  0E04               	movlw	4
   968  000ADE  6F77               	movwf	can_txq_push@len& (0+255),b
   969  000AE0  0EBA               	movlw	low (_fuel_press+1)
   970  000AE2  6F78               	movwf	can_txq_push@data& (0+255),b
   971  000AE4  0E00               	movlw	high (_fuel_press+1)
   972  000AE6  6F79               	movwf	(can_txq_push@data+1)& (0+255),b
   973  000AE8  ECB0  F006         	call	_can_txq_push	;wreg free
   974  000AEC                     l3041:
   975                           
   976                           ;main.c: 103:         if (time_millis() - last_2Hz_time > 500) {
   977  000AEC  ECD0  F00B         	call	_time_millis	;wreg free
   978  000AF0  5028               	movf	_last_2Hz_time^0,w,c
   979  000AF2  0100               	movlb	0	; () banked
   980  000AF4  5F6A               	subwf	?_time_millis& (0+255),f,b
   981  000AF6  5029               	movf	(_last_2Hz_time+1)^0,w,c
   982  000AF8  5B6B               	subwfb	(?_time_millis+1)& (0+255),f,b
   983  000AFA  0EF5               	movlw	245
   984  000AFC  5D6A               	subwf	?_time_millis& (0+255),w,b
   985  000AFE  0E01               	movlw	1
   986  000B00  596B               	subwfb	(?_time_millis+1)& (0+255),w,b
   987  000B02  A0D8               	btfss	status,0,c
   988  000B04  EF86  F005         	goto	u3131
   989  000B08  EF88  F005         	goto	u3130
   990  000B0C                     u3131:
   991  000B0C  EF17  F005         	goto	l3023
   992  000B10                     u3130:
   993  000B10                     
   994                           ; BSR set to: 0
   995                           ;main.c: 104:             last_2Hz_time = time_millis();
   996  000B10  ECD0  F00B         	call	_time_millis	;wreg free
   997  000B14  C06A  F028         	movff	?_time_millis,_last_2Hz_time
   998  000B18  C06B  F029         	movff	?_time_millis+1,_last_2Hz_time+1
   999  000B1C                     
  1000                           ;main.c: 105:             LATCbits.LC3 = ~LATCbits.LC3;
  1001  000B1C  B6BC               	btfsc	188,3,c	;volatile
  1002  000B1E  EF93  F005         	goto	u3141
  1003  000B22  EF96  F005         	goto	u3140
  1004  000B26                     u3141:
  1005  000B26  0E01               	movlw	1
  1006  000B28  EF97  F005         	goto	u3146
  1007  000B2C                     u3140:
  1008  000B2C  0E00               	movlw	0
  1009  000B2E                     u3146:
  1010  000B2E  0AFF               	xorlw	255
  1011  000B30  0100               	movlb	0	; () banked
  1012  000B32  6FA8               	movwf	??_main& (0+255),b
  1013  000B34  47A8               	rlncf	??_main& (0+255),f,b
  1014  000B36  47A8               	rlncf	??_main& (0+255),f,b
  1015  000B38  47A8               	rlncf	??_main& (0+255),f,b
  1016  000B3A  50BC               	movf	188,w,c	;volatile
  1017  000B3C  19A8               	xorwf	??_main& (0+255),w,b
  1018  000B3E  0BF7               	andlw	-9
  1019  000B40  19A8               	xorwf	??_main& (0+255),w,b
  1020  000B42  6EBC               	movwf	188,c	;volatile
  1021  000B44                     
  1022                           ; BSR set to: 0
  1023                           ;main.c: 107:             hb.health = 0;
  1024  000B44  0E00               	movlw	0
  1025  000B46  6E37               	movwf	_hb^0,c
  1026  000B48                     
  1027                           ; BSR set to: 0
  1028                           ;main.c: 108:             hb.uptime_s = time_secs();
  1029  000B48  ECB8  F00B         	call	_time_secs	;wreg free
  1030  000B4C  C06A  F038         	movff	?_time_secs,_hb+1
  1031  000B50  C06B  F039         	movff	?_time_secs+1,_hb+2
  1032  000B54                     
  1033                           ;main.c: 109:             can_txq_push(0x400 | 2, sizeof (Heartbeat_t), (uint8_t*)&hb);
  1034  000B54  0E04               	movlw	4
  1035  000B56  0100               	movlb	0	; () banked
  1036  000B58  6F76               	movwf	(can_txq_push@id+1)& (0+255),b
  1037  000B5A  0E02               	movlw	2
  1038  000B5C  6F75               	movwf	can_txq_push@id& (0+255),b
  1039  000B5E  0E03               	movlw	3
  1040  000B60  6F77               	movwf	can_txq_push@len& (0+255),b
  1041  000B62  0E37               	movlw	low _hb
  1042  000B64  6F78               	movwf	can_txq_push@data& (0+255),b
  1043  000B66  0E00               	movlw	high _hb
  1044  000B68  6F79               	movwf	(can_txq_push@data+1)& (0+255),b
  1045  000B6A  ECB0  F006         	call	_can_txq_push	;wreg free
  1046  000B6E  EF17  F005         	goto	l3023
  1047  000B72  EF54  F000         	goto	start
  1048  000B76                     __end_of_main:
  1049                           	callstack 0
  1050                           
  1051 ;; *************** function _uart_tx *****************
  1052 ;; Defined at:
  1053 ;;		line 39 in file "libpicutil/uart_debug.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  bytes           2   10[BANK0 ] PTR unsigned char 
  1056 ;;		 -> msg(64), 
  1057 ;;  n_bytes         2   12[BANK0 ] const unsigned int 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  i               1   20[BANK0 ] unsigned char 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1069 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;Total ram usage:       11 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; Hardware stack levels required when called: 3
  1076 ;; This function calls:
  1077 ;;		Nothing
  1078 ;; This function is called by:
  1079 ;;		_main
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text1
  1084  000FB8                     __ptext1:
  1085                           	callstack 0
  1086  000FB8                     _uart_tx:
  1087                           	callstack 27
  1088  000FB8                     
  1089                           ;libpicutil/uart_debug.c: 40:     PIE3bits.U1TXIE = 0;
  1090  000FB8  0139               	movlb	57	; () banked
  1091  000FBA  9993               	bcf	147,4,b	;volatile
  1092  000FBC                     
  1093                           ; BSR set to: 57
  1094                           ;libpicutil/uart_debug.c: 41:     for (uint8_t i = 0; i < n_bytes; i++) {
  1095  000FBC  0E00               	movlw	0
  1096  000FBE  0100               	movlb	0	; () banked
  1097  000FC0  6F74               	movwf	uart_tx@i& (0+255),b
  1098  000FC2                     
  1099                           ; BSR set to: 0
  1100  000FC2  516C               	movf	uart_tx@n_bytes& (0+255),w,b
  1101  000FC4  116D               	iorwf	(uart_tx@n_bytes+1)& (0+255),w,b
  1102  000FC6  A4D8               	btfss	status,2,c
  1103  000FC8  EFE8  F007         	goto	u2771
  1104  000FCC  EFEA  F007         	goto	u2770
  1105  000FD0                     u2771:
  1106  000FD0  EFEC  F007         	goto	l2889
  1107  000FD4                     u2770:
  1108  000FD4  EF31  F008         	goto	l381
  1109  000FD8                     l2889:
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;libpicutil/uart_debug.c: 42:         if (head == tail - 1) {
  1113  000FD8  5033               	movf	_head^0,w,c	;volatile
  1114  000FDA  6F6E               	movwf	??_uart_tx& (0+255),b
  1115  000FDC  6B6F               	clrf	(??_uart_tx+1)& (0+255),b
  1116  000FDE  0EFF               	movlw	255
  1117  000FE0  6F70               	movwf	(??_uart_tx+2)& (0+255),b
  1118  000FE2  0EFF               	movlw	255
  1119  000FE4  6F71               	movwf	(??_uart_tx+3)& (0+255),b
  1120  000FE6  5032               	movf	_tail^0,w,c	;volatile
  1121  000FE8  6F72               	movwf	(??_uart_tx+4)& (0+255),b
  1122  000FEA  6B73               	clrf	(??_uart_tx+5)& (0+255),b
  1123  000FEC  5170               	movf	(??_uart_tx+2)& (0+255),w,b
  1124  000FEE  2772               	addwf	(??_uart_tx+4)& (0+255),f,b
  1125  000FF0  5171               	movf	(??_uart_tx+3)& (0+255),w,b
  1126  000FF2  2373               	addwfc	(??_uart_tx+5)& (0+255),f,b
  1127  000FF4  516E               	movf	??_uart_tx& (0+255),w,b
  1128  000FF6  1972               	xorwf	(??_uart_tx+4)& (0+255),w,b
  1129  000FF8  E107               	bnz	u2781
  1130  000FFA  516F               	movf	(??_uart_tx+1)& (0+255),w,b
  1131  000FFC  1973               	xorwf	(??_uart_tx+5)& (0+255),w,b
  1132  000FFE  A4D8               	btfss	status,2,c
  1133  001000  EF04  F008         	goto	u2781
  1134  001004  EF06  F008         	goto	u2780
  1135  001008                     u2781:
  1136  001008  EF08  F008         	goto	l2893
  1137  00100C                     u2780:
  1138  00100C  EF31  F008         	goto	l381
  1139  001010                     l2893:
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;libpicutil/uart_debug.c: 45:         tx_ring_buf[head] = bytes[i];
  1143  001010  5174               	movf	uart_tx@i& (0+255),w,b
  1144  001012  256A               	addwf	uart_tx@bytes& (0+255),w,b
  1145  001014  6ED9               	movwf	fsr2l,c
  1146  001016  0E00               	movlw	0
  1147  001018  216B               	addwfc	(uart_tx@bytes+1)& (0+255),w,b
  1148  00101A  6EDA               	movwf	fsr2h,c
  1149  00101C  0E00               	movlw	low _tx_ring_buf
  1150  00101E  2433               	addwf	_head^0,w,c	;volatile
  1151  001020  6EE1               	movwf	fsr1l,c
  1152  001022  6AE2               	clrf	fsr1h,c
  1153  001024  0E01               	movlw	high _tx_ring_buf
  1154  001026  22E2               	addwfc	fsr1h,f,c
  1155  001028  006F FF7F FFE7     	movff	indf2,indf1
  1156  00102E                     
  1157                           ; BSR set to: 0
  1158                           ;libpicutil/uart_debug.c: 46:         head++;
  1159  00102E  2A33               	incf	_head^0,f,c	;volatile
  1160  001030                     
  1161                           ; BSR set to: 0
  1162                           ;libpicutil/uart_debug.c: 47:         if (head >= (uint8_t)64) {
  1163  001030  0E3F               	movlw	63
  1164  001032  6433               	cpfsgt	_head^0,c	;volatile
  1165  001034  EF1E  F008         	goto	u2791
  1166  001038  EF20  F008         	goto	u2790
  1167  00103C                     u2791:
  1168  00103C  EF22  F008         	goto	l2901
  1169  001040                     u2790:
  1170  001040                     
  1171                           ; BSR set to: 0
  1172                           ;libpicutil/uart_debug.c: 48:             head = 0;
  1173  001040  0E00               	movlw	0
  1174  001042  6E33               	movwf	_head^0,c	;volatile
  1175  001044                     l2901:
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;libpicutil/uart_debug.c: 50:     }
  1179  001044  2B74               	incf	uart_tx@i& (0+255),f,b
  1180  001046                     
  1181                           ; BSR set to: 0
  1182  001046  5174               	movf	uart_tx@i& (0+255),w,b
  1183  001048  6F6E               	movwf	??_uart_tx& (0+255),b
  1184  00104A  6B6F               	clrf	(??_uart_tx+1)& (0+255),b
  1185  00104C  516C               	movf	uart_tx@n_bytes& (0+255),w,b
  1186  00104E  5D6E               	subwf	??_uart_tx& (0+255),w,b
  1187  001050  516D               	movf	(uart_tx@n_bytes+1)& (0+255),w,b
  1188  001052  596F               	subwfb	(??_uart_tx+1)& (0+255),w,b
  1189  001054  A0D8               	btfss	status,0,c
  1190  001056  EF2F  F008         	goto	u2801
  1191  00105A  EF31  F008         	goto	u2800
  1192  00105E                     u2801:
  1193  00105E  EFEC  F007         	goto	l2889
  1194  001062                     u2800:
  1195  001062                     l381:
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;libpicutil/uart_debug.c: 51:     PIE3bits.U1TXIE = 1;
  1199  001062  0139               	movlb	57	; () banked
  1200  001064  8993               	bsf	147,4,b	;volatile
  1201  001066                     
  1202                           ; BSR set to: 57
  1203  001066  0012               	return		;funcret
  1204  001068                     __end_of_uart_tx:
  1205                           	callstack 0
  1206                           
  1207 ;; *************** function _uart_init *****************
  1208 ;; Defined at:
  1209 ;;		line 11 in file "libpicutil/uart_debug.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; Hardware stack levels required when called: 3
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text2
  1238  001754                     __ptext2:
  1239                           	callstack 0
  1240  001754                     _uart_init:
  1241                           	callstack 27
  1242  001754                     
  1243                           ;libpicutil/uart_debug.c: 12:     U1CON0bits.TXEN = 1;
  1244  001754  013D               	movlb	61	; () banked
  1245  001756  8BF2               	bsf	242,5,b	;volatile
  1246  001758                     
  1247                           ; BSR set to: 61
  1248                           ;libpicutil/uart_debug.c: 21:     U1BRGH = 0;
  1249  001758  0E00               	movlw	0
  1250  00175A  6FF6               	movwf	246,b	;volatile
  1251                           
  1252                           ;libpicutil/uart_debug.c: 22:     U1BRGL = 32;
  1253  00175C  0E20               	movlw	32
  1254  00175E  6FF5               	movwf	245,b	;volatile
  1255                           
  1256                           ;libpicutil/uart_debug.c: 26:     RC0PPS = 0x13;
  1257  001760  0E13               	movlw	19
  1258  001762  013A               	movlb	58	; () banked
  1259  001764  6F10               	movwf	16,b	;volatile
  1260  001766                     
  1261                           ; BSR set to: 58
  1262                           ;libpicutil/uart_debug.c: 28:     TRISCbits.TRISC0 = 0;
  1263  001766  90C4               	bcf	196,0,c	;volatile
  1264  001768                     
  1265                           ; BSR set to: 58
  1266                           ;libpicutil/uart_debug.c: 29:     LATCbits.LATC0 = 1;
  1267  001768  80BC               	bsf	188,0,c	;volatile
  1268  00176A                     
  1269                           ; BSR set to: 58
  1270                           ;libpicutil/uart_debug.c: 31:     U1CON1bits.ON = 1;
  1271  00176A  013D               	movlb	61	; () banked
  1272  00176C  8FF3               	bsf	243,7,b	;volatile
  1273  00176E                     
  1274                           ; BSR set to: 61
  1275  00176E  0012               	return		;funcret
  1276  001770                     __end_of_uart_init:
  1277                           	callstack 0
  1278                           
  1279 ;; *************** function _time_secs *****************
  1280 ;; Defined at:
  1281 ;;		line 27 in file "libpicutil/time.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  result          2   12[BANK0 ] unsigned short 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  2   10[BANK0 ] unsigned short 
  1288 ;; Registers used:
  1289 ;;		None
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1295 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;Total ram usage:        4 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 3
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text3
  1310  001770                     __ptext3:
  1311                           	callstack 0
  1312  001770                     _time_secs:
  1313                           	callstack 27
  1314  001770                     
  1315                           ;libpicutil/time.c: 28:     PIE3bits.TMR0IE = 0;
  1316  001770  0139               	movlb	57	; () banked
  1317  001772  9F93               	bcf	147,7,b	;volatile
  1318                           
  1319                           ;libpicutil/time.c: 30:     uint16_t result = secs;
  1320  001774  C020  F06C         	movff	_secs,time_secs@result	;volatile
  1321  001778  C021  F06D         	movff	_secs+1,time_secs@result+1	;volatile
  1322                           
  1323                           ;libpicutil/time.c: 31:     PIE3bits.TMR0IE = 1;
  1324  00177C  8F93               	bsf	147,7,b	;volatile
  1325                           
  1326                           ;libpicutil/time.c: 32:     return result;
  1327  00177E  C06C  F06A         	movff	time_secs@result,?_time_secs
  1328  001782  C06D  F06B         	movff	time_secs@result+1,?_time_secs+1
  1329  001786                     
  1330                           ; BSR set to: 57
  1331  001786  0012               	return		;funcret
  1332  001788                     __end_of_time_secs:
  1333                           	callstack 0
  1334                           
  1335 ;; *************** function _time_init *****************
  1336 ;; Defined at:
  1337 ;;		line 8 in file "libpicutil/time.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 3
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text4
  1366  001788                     __ptext4:
  1367                           	callstack 0
  1368  001788                     _time_init:
  1369                           	callstack 27
  1370  001788                     
  1371                           ;libpicutil/time.c: 13:     T0CON1bits.CS = 0b010;
  1372  001788  50B9               	movf	185,w,c	;volatile
  1373  00178A  0B1F               	andlw	-225
  1374  00178C  0940               	iorlw	64
  1375  00178E  6EB9               	movwf	185,c	;volatile
  1376                           
  1377                           ;libpicutil/time.c: 14:     T0CON1bits.CKPS = 0b0110;
  1378  001790  50B9               	movf	185,w,c	;volatile
  1379  001792  0BF0               	andlw	-16
  1380  001794  0906               	iorlw	6
  1381  001796  6EB9               	movwf	185,c	;volatile
  1382  001798                     
  1383                           ;libpicutil/time.c: 15:     PIE3bits.TMR0IE = 1;
  1384  001798  0139               	movlb	57	; () banked
  1385  00179A  8F93               	bsf	147,7,b	;volatile
  1386  00179C                     
  1387                           ; BSR set to: 57
  1388                           ;libpicutil/time.c: 16:     T0CON0bits.EN = 1;
  1389  00179C  8EB8               	bsf	184,7,c	;volatile
  1390  00179E                     
  1391                           ; BSR set to: 57
  1392  00179E  0012               	return		;funcret
  1393  0017A0                     __end_of_time_init:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function _solenoids_set *****************
  1397 ;; Defined at:
  1398 ;;		line 17 in file "solenoids.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  cmd             2   10[BANK0 ] PTR struct .
  1401 ;;		 -> valve_cmd(3), 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		fsr2l, fsr2h
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;Total ram usage:        2 bytes
  1418 ;; Hardware stack levels used: 1
  1419 ;; Hardware stack levels required when called: 3
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text5
  1428  00141A                     __ptext5:
  1429                           	callstack 0
  1430  00141A                     _solenoids_set:
  1431                           	callstack 27
  1432  00141A                     
  1433                           ;solenoids.c: 18:     LATBbits.LB4 = cmd->engine_vent_valve_close;
  1434  00141A  0060  F1AB  FFD9   	movff	solenoids_set@cmd,fsr2l
  1435  001420  0060  F1AF  FFDA   	movff	solenoids_set@cmd+1,fsr2h
  1436  001426  0100               	movlb	0	; () banked
  1437  001428  A0DF               	btfss	indf2,0,c
  1438  00142A  D002               	bra	u2995
  1439  00142C  88BB               	bsf	187,4,c	;volatile
  1440  00142E  D001               	bra	u2997
  1441  001430                     u2995:
  1442  001430  98BB               	bcf	187,4,c	;volatile
  1443  001432                     u2997:
  1444                           
  1445                           ;solenoids.c: 19:     LATBbits.LB5 = cmd->main_fuel_valve_open;
  1446  001432  0060  F1AB  FFD9   	movff	solenoids_set@cmd,fsr2l
  1447  001438  0060  F1AF  FFDA   	movff	solenoids_set@cmd+1,fsr2h
  1448  00143E  0100               	movlb	0	; () banked
  1449  001440  A2DF               	btfss	indf2,1,c
  1450  001442  D002               	bra	u3005
  1451  001444  8ABB               	bsf	187,5,c	;volatile
  1452  001446  D001               	bra	u3007
  1453  001448                     u3005:
  1454  001448  9ABB               	bcf	187,5,c	;volatile
  1455  00144A                     u3007:
  1456                           
  1457                           ;solenoids.c: 20:     LATBbits.LB6 = cmd->solenoid_3_energize;
  1458  00144A  0060  F1AB  FFD9   	movff	solenoids_set@cmd,fsr2l
  1459  001450  0060  F1AF  FFDA   	movff	solenoids_set@cmd+1,fsr2h
  1460  001456  0100               	movlb	0	; () banked
  1461  001458  A4DF               	btfss	indf2,2,c
  1462  00145A  D002               	bra	u3015
  1463  00145C  8CBB               	bsf	187,6,c	;volatile
  1464  00145E  D001               	bra	u3017
  1465  001460                     u3015:
  1466  001460  9CBB               	bcf	187,6,c	;volatile
  1467  001462                     u3017:
  1468                           
  1469                           ;solenoids.c: 21:     LATBbits.LB7 = cmd->solenoid_4_energize;
  1470  001462  0060  F1AB  FFD9   	movff	solenoids_set@cmd,fsr2l
  1471  001468  0060  F1AF  FFDA   	movff	solenoids_set@cmd+1,fsr2h
  1472  00146E  0100               	movlb	0	; () banked
  1473  001470  A6DF               	btfss	indf2,3,c
  1474  001472  D002               	bra	u3025
  1475  001474  8EBB               	bsf	187,7,c	;volatile
  1476  001476  D001               	bra	u3027
  1477  001478                     u3025:
  1478  001478  9EBB               	bcf	187,7,c	;volatile
  1479  00147A                     u3027:
  1480  00147A  0012               	return		;funcret
  1481  00147C                     __end_of_solenoids_set:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _solenoids_init *****************
  1485 ;; Defined at:
  1486 ;;		line 5 in file "solenoids.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		None
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 3
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text6
  1515  0017B8                     __ptext6:
  1516                           	callstack 0
  1517  0017B8                     _solenoids_init:
  1518                           	callstack 27
  1519  0017B8                     
  1520                           ;solenoids.c: 11:     ANSELBbits.ANSELB4 = ANSELBbits.ANSELB5 = 0;
  1521  0017B8  013A               	movlb	58	; () banked
  1522  0017BA  9B50               	bcf	80,5,b	;volatile
  1523  0017BC  9950               	bcf	80,4,b	;volatile
  1524                           
  1525                           ;solenoids.c: 12:     ANSELAbits.ANSELA6 = ANSELAbits.ANSELA7 = 0;
  1526  0017BE  9F40               	bcf	64,7,b	;volatile
  1527  0017C0  9D40               	bcf	64,6,b	;volatile
  1528                           
  1529                           ;solenoids.c: 13:     TRISBbits.TRISB4 = TRISBbits.TRISB5 = 0;
  1530  0017C2  9AC3               	bcf	195,5,c	;volatile
  1531  0017C4  98C3               	bcf	195,4,c	;volatile
  1532                           
  1533                           ;solenoids.c: 14:     TRISAbits.TRISA6 = TRISAbits.TRISA7 = 0;
  1534  0017C6  9EC2               	bcf	194,7,c	;volatile
  1535  0017C8  9CC2               	bcf	194,6,c	;volatile
  1536  0017CA                     
  1537                           ; BSR set to: 58
  1538  0017CA  0012               	return		;funcret
  1539  0017CC                     __end_of_solenoids_init:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _motors_init *****************
  1543 ;; Defined at:
  1544 ;;		line 7 in file "motors.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 3
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text7
  1573  001626                     __ptext7:
  1574                           	callstack 0
  1575  001626                     _motors_init:
  1576                           	callstack 27
  1577  001626                     
  1578                           ;motors.c: 15:     T2CLK = 0b0001;
  1579  001626  0E01               	movlw	1
  1580  001628  6EAE               	movwf	174,c	;volatile
  1581                           
  1582                           ;motors.c: 16:     T2CONbits.CKPS = 0b011;
  1583  00162A  50AC               	movf	172,w,c	;volatile
  1584  00162C  0B8F               	andlw	-113
  1585  00162E  0930               	iorlw	48
  1586  001630  6EAC               	movwf	172,c	;volatile
  1587  001632                     
  1588                           ;motors.c: 17:     T2CONbits.ON = 1;
  1589  001632  8EAC               	bsf	172,7,c	;volatile
  1590  001634                     
  1591                           ;motors.c: 19:     ANSELB &= ~0b00001111;
  1592  001634  0EF0               	movlw	240
  1593  001636  013A               	movlb	58	; () banked
  1594  001638  1750               	andwf	80,f,b	;volatile
  1595  00163A                     
  1596                           ; BSR set to: 58
  1597                           ;motors.c: 21:     RB0PPS = 0b001001;
  1598  00163A  0E09               	movlw	9
  1599  00163C  6F08               	movwf	8,b	;volatile
  1600  00163E                     
  1601                           ; BSR set to: 58
  1602                           ;motors.c: 22:     RB2PPS = 0b001010;
  1603  00163E  0E0A               	movlw	10
  1604  001640  6F0A               	movwf	10,b	;volatile
  1605  001642                     
  1606                           ; BSR set to: 58
  1607                           ;motors.c: 24:     CCP1CONbits.EN = 1;
  1608  001642  8E7E               	bsf	126,7,c	;volatile
  1609  001644                     
  1610                           ; BSR set to: 58
  1611                           ;motors.c: 25:     CCP1CONbits.MODE = 0b1100;
  1612  001644  507E               	movf	126,w,c	;volatile
  1613  001646  0BF0               	andlw	-16
  1614  001648  090C               	iorlw	12
  1615  00164A  6E7E               	movwf	126,c	;volatile
  1616  00164C                     
  1617                           ; BSR set to: 58
  1618                           ;motors.c: 27:     CCPR1H = 0;
  1619  00164C  0E00               	movlw	0
  1620  00164E  6E7D               	movwf	125,c	;volatile
  1621  001650                     
  1622                           ; BSR set to: 58
  1623                           ;motors.c: 28:     CCPR1L = 0;
  1624  001650  0E00               	movlw	0
  1625  001652  6E7C               	movwf	124,c	;volatile
  1626  001654                     
  1627                           ; BSR set to: 58
  1628                           ;motors.c: 31:     CCP2CONbits.EN = 1;
  1629  001654  8E7A               	bsf	122,7,c	;volatile
  1630  001656                     
  1631                           ; BSR set to: 58
  1632                           ;motors.c: 32:     CCP2CONbits.MODE = 0b1100;
  1633  001656  507A               	movf	122,w,c	;volatile
  1634  001658  0BF0               	andlw	-16
  1635  00165A  090C               	iorlw	12
  1636  00165C  6E7A               	movwf	122,c	;volatile
  1637  00165E                     
  1638                           ; BSR set to: 58
  1639                           ;motors.c: 33:     CCPR2H = 0;
  1640  00165E  0E00               	movlw	0
  1641  001660  6E79               	movwf	121,c	;volatile
  1642  001662                     
  1643                           ; BSR set to: 58
  1644                           ;motors.c: 34:     CCPR2L = 0;
  1645  001662  0E00               	movlw	0
  1646  001664  6E78               	movwf	120,c	;volatile
  1647  001666                     
  1648                           ; BSR set to: 58
  1649                           ;motors.c: 36:     TRISB &= ~0b00001111;
  1650  001666  0EF0               	movlw	240
  1651  001668  16C3               	andwf	195,f,c	;volatile
  1652  00166A                     
  1653                           ; BSR set to: 58
  1654  00166A  0012               	return		;funcret
  1655  00166C                     __end_of_motors_init:
  1656                           	callstack 0
  1657                           
  1658 ;; *************** function _motor_control *****************
  1659 ;; Defined at:
  1660 ;;		line 75 in file "motors.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  motor           2   60[BANK0 ] PTR struct .
  1663 ;;		 -> fuel_press(9), ox_main(9), 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  delta_pos       2   70[BANK0 ] int 
  1666 ;;  delta_time      2   68[BANK0 ] unsigned short 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1676 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;Total ram usage:       12 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 5
  1683 ;; This function calls:
  1684 ;;		_abs
  1685 ;;		_calc_speed
  1686 ;;		_encoders_get_pos
  1687 ;;		_encoders_is_limit
  1688 ;;		_motor_set
  1689 ;;		_time_millis
  1690 ;; This function is called by:
  1691 ;;		_main
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text8
  1696  0004FC                     __ptext8:
  1697                           	callstack 0
  1698  0004FC                     _motor_control:
  1699                           	callstack 25
  1700  0004FC                     
  1701                           ;motors.c: 76:     motor->status.homing.limit_switch = encoders_is_limit(motor->which);
  1702  0004FC  0060  F273  FFD9   	movff	motor_control@motor,fsr2l
  1703  000502  0060  F277  FFDA   	movff	motor_control@motor+1,fsr2h
  1704  000508  50DF               	movf	indf2,w,c
  1705  00050A  EC3E  F00A         	call	_encoders_is_limit
  1706  00050E  0100               	movlb	0	; () banked
  1707  000510  6F9E               	movwf	??_motor_control& (0+255),b
  1708  000512  EE20 F003          	lfsr	2,3
  1709  000516  519C               	movf	motor_control@motor& (0+255),w,b
  1710  000518  26D9               	addwf	fsr2l,f,c
  1711  00051A  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1712  00051C  22DA               	addwfc	fsr2h,f,c
  1713  00051E  50DF               	movf	223,w,c
  1714  000520  199E               	xorwf	??_motor_control& (0+255),w,b
  1715  000522  0BFE               	andlw	-2
  1716  000524  199E               	xorwf	??_motor_control& (0+255),w,b
  1717  000526  6EDF               	movwf	223,c
  1718  000528                     
  1719                           ; BSR set to: 0
  1720                           ;motors.c: 77:     motor->status.pos = encoders_get_pos(motor->which);
  1721  000528  EE20 F001          	lfsr	2,1
  1722  00052C  519C               	movf	motor_control@motor& (0+255),w,b
  1723  00052E  26D9               	addwf	fsr2l,f,c
  1724  000530  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1725  000532  22DA               	addwfc	fsr2h,f,c
  1726  000534  0060  F273  FFE1   	movff	motor_control@motor,fsr1l
  1727  00053A  0060  F277  FFE2   	movff	motor_control@motor+1,fsr1h
  1728  000540  50E7               	movf	indf1,w,c
  1729  000542  EC19  F007         	call	_encoders_get_pos
  1730  000546  6EDF               	movwf	indf2,c
  1731  000548                     
  1732                           ;motors.c: 80:     uint16_t delta_time = time_millis() - motor->last_stopped_time;
  1733  000548  0100               	movlb	0	; () banked
  1734  00054A  EE20 F007          	lfsr	2,7
  1735  00054E  519C               	movf	motor_control@motor& (0+255),w,b
  1736  000550  26D9               	addwf	fsr2l,f,c
  1737  000552  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1738  000554  22DA               	addwfc	fsr2h,f,c
  1739  000556  006F FF78  F09E    	movff	postinc2,??_motor_control
  1740  00055C  006F FF74  F09F    	movff	postdec2,??_motor_control+1
  1741  000562  ECD0  F00B         	call	_time_millis	;wreg free
  1742  000566  0100               	movlb	0	; () banked
  1743  000568  519E               	movf	??_motor_control& (0+255),w,b
  1744  00056A  5D6A               	subwf	?_time_millis& (0+255),w,b
  1745  00056C  6FA4               	movwf	motor_control@delta_time& (0+255),b
  1746  00056E  519F               	movf	(??_motor_control+1)& (0+255),w,b
  1747  000570  596B               	subwfb	(?_time_millis+1)& (0+255),w,b
  1748  000572  6FA5               	movwf	(motor_control@delta_time+1)& (0+255),b
  1749  000574                     
  1750                           ; BSR set to: 0
  1751                           ;motors.c: 81:     motor->status.faults.homing_timeout = (motor->status.homing.has_homed
      +                          ) && (delta_time > 5000);
  1752  000574  0E00               	movlw	0
  1753  000576  6FA0               	movwf	_motor_control$713& (0+255),b
  1754  000578                     
  1755                           ; BSR set to: 0
  1756  000578  EE20 F003          	lfsr	2,3
  1757  00057C  519C               	movf	motor_control@motor& (0+255),w,b
  1758  00057E  26D9               	addwf	fsr2l,f,c
  1759  000580  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1760  000582  22DA               	addwfc	fsr2h,f,c
  1761  000584  A2DF               	btfss	indf2,1,c
  1762  000586  EFC7  F002         	goto	u2811
  1763  00058A  EFC9  F002         	goto	u2810
  1764  00058E                     u2811:
  1765  00058E  EFD6  F002         	goto	l2919
  1766  000592                     u2810:
  1767  000592                     
  1768                           ; BSR set to: 0
  1769  000592  0E89               	movlw	137
  1770  000594  5DA4               	subwf	motor_control@delta_time& (0+255),w,b
  1771  000596  0E13               	movlw	19
  1772  000598  59A5               	subwfb	(motor_control@delta_time+1)& (0+255),w,b
  1773  00059A  A0D8               	btfss	status,0,c
  1774  00059C  EFD2  F002         	goto	u2821
  1775  0005A0  EFD4  F002         	goto	u2820
  1776  0005A4                     u2821:
  1777  0005A4  EFD6  F002         	goto	l2919
  1778  0005A8                     u2820:
  1779  0005A8                     
  1780                           ; BSR set to: 0
  1781  0005A8  0E01               	movlw	1
  1782  0005AA  6FA0               	movwf	_motor_control$713& (0+255),b
  1783  0005AC                     l2919:
  1784                           
  1785                           ; BSR set to: 0
  1786  0005AC  EE20 F004          	lfsr	2,4
  1787  0005B0  519C               	movf	motor_control@motor& (0+255),w,b
  1788  0005B2  26D9               	addwf	fsr2l,f,c
  1789  0005B4  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1790  0005B6  22DA               	addwfc	fsr2h,f,c
  1791  0005B8  B1A0               	btfsc	_motor_control$713& (0+255),0,b
  1792  0005BA  D002               	bra	u2835
  1793  0005BC  92DF               	bcf	indf2,1,c
  1794  0005BE  D002               	bra	u2836
  1795  0005C0                     u2835:
  1796  0005C0  0100               	movlb	0	; () banked
  1797  0005C2  82DF               	bsf	indf2,1,c
  1798  0005C4                     u2836:
  1799  0005C4                     
  1800                           ; BSR set to: 0
  1801                           ;motors.c: 82:     motor->status.faults.limit_switch_stuck = (motor->status.homing.limit
      +                          _switch) && (motor->status.pos != 0);
  1802  0005C4  0E00               	movlw	0
  1803  0005C6  6FA1               	movwf	_motor_control$714& (0+255),b
  1804  0005C8  EE20 F003          	lfsr	2,3
  1805  0005CC  519C               	movf	motor_control@motor& (0+255),w,b
  1806  0005CE  26D9               	addwf	fsr2l,f,c
  1807  0005D0  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1808  0005D2  22DA               	addwfc	fsr2h,f,c
  1809  0005D4  A0DF               	btfss	indf2,0,c
  1810  0005D6  EFEF  F002         	goto	u2841
  1811  0005DA  EFF1  F002         	goto	u2840
  1812  0005DE                     u2841:
  1813  0005DE  EF01  F003         	goto	l2927
  1814  0005E2                     u2840:
  1815  0005E2                     
  1816                           ; BSR set to: 0
  1817  0005E2  EE20 F001          	lfsr	2,1
  1818  0005E6  519C               	movf	motor_control@motor& (0+255),w,b
  1819  0005E8  26D9               	addwf	fsr2l,f,c
  1820  0005EA  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1821  0005EC  22DA               	addwfc	fsr2h,f,c
  1822  0005EE  50DF               	movf	indf2,w,c
  1823  0005F0  B4D8               	btfsc	status,2,c
  1824  0005F2  EFFD  F002         	goto	u2851
  1825  0005F6  EFFF  F002         	goto	u2850
  1826  0005FA                     u2851:
  1827  0005FA  EF01  F003         	goto	l2927
  1828  0005FE                     u2850:
  1829  0005FE                     
  1830                           ; BSR set to: 0
  1831  0005FE  0E01               	movlw	1
  1832  000600  6FA1               	movwf	_motor_control$714& (0+255),b
  1833  000602                     l2927:
  1834                           
  1835                           ; BSR set to: 0
  1836  000602  EE20 F004          	lfsr	2,4
  1837  000606  519C               	movf	motor_control@motor& (0+255),w,b
  1838  000608  26D9               	addwf	fsr2l,f,c
  1839  00060A  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1840  00060C  22DA               	addwfc	fsr2h,f,c
  1841  00060E  B1A1               	btfsc	_motor_control$714& (0+255),0,b
  1842  000610  D002               	bra	u2865
  1843  000612  94DF               	bcf	indf2,2,c
  1844  000614  D002               	bra	u2866
  1845  000616                     u2865:
  1846  000616  0100               	movlb	0	; () banked
  1847  000618  84DF               	bsf	indf2,2,c
  1848  00061A                     u2866:
  1849  00061A                     
  1850                           ; BSR set to: 0
  1851                           ;motors.c: 85:     if (motor->status.speed == 0) {
  1852  00061A  EE20 F002          	lfsr	2,2
  1853  00061E  519C               	movf	motor_control@motor& (0+255),w,b
  1854  000620  26D9               	addwf	fsr2l,f,c
  1855  000622  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1856  000624  22DA               	addwfc	fsr2h,f,c
  1857  000626  50DF               	movf	indf2,w,c
  1858  000628  A4D8               	btfss	status,2,c
  1859  00062A  EF19  F003         	goto	u2871
  1860  00062E  EF1B  F003         	goto	u2870
  1861  000632                     u2871:
  1862  000632  EF39  F003         	goto	l2935
  1863  000636                     u2870:
  1864  000636                     
  1865                           ; BSR set to: 0
  1866                           ;motors.c: 86:         motor->stopped_pos = motor->status.pos;
  1867  000636  EE20 F001          	lfsr	2,1
  1868  00063A  519C               	movf	motor_control@motor& (0+255),w,b
  1869  00063C  26D9               	addwf	fsr2l,f,c
  1870  00063E  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1871  000640  22DA               	addwfc	fsr2h,f,c
  1872  000642  EE10 F006          	lfsr	1,6
  1873  000646  519C               	movf	motor_control@motor& (0+255),w,b
  1874  000648  26E1               	addwf	fsr1l,f,c
  1875  00064A  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1876  00064C  22E2               	addwfc	fsr1h,f,c
  1877  00064E  006F FF7F FFE7     	movff	indf2,indf1
  1878  000654                     
  1879                           ; BSR set to: 0
  1880                           ;motors.c: 87:         motor-> last_stopped_time = time_millis();
  1881  000654  ECD0  F00B         	call	_time_millis	;wreg free
  1882  000658  0100               	movlb	0	; () banked
  1883  00065A  EE20 F007          	lfsr	2,7
  1884  00065E  519C               	movf	motor_control@motor& (0+255),w,b
  1885  000660  26D9               	addwf	fsr2l,f,c
  1886  000662  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1887  000664  22DA               	addwfc	fsr2h,f,c
  1888  000666  0060  F1AB  FFDE   	movff	?_time_millis,postinc2
  1889  00066C  0060  F1AF  FFDD   	movff	?_time_millis+1,postdec2
  1890  000672                     l2935:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;motors.c: 90:     int delta_pos = abs(motor->status.pos - motor->stopped_pos);
  1894  000672  EE20 F001          	lfsr	2,1
  1895  000676  519C               	movf	motor_control@motor& (0+255),w,b
  1896  000678  26D9               	addwf	fsr2l,f,c
  1897  00067A  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1898  00067C  22DA               	addwfc	fsr2h,f,c
  1899  00067E  50DF               	movf	indf2,w,c
  1900  000680  6F9E               	movwf	??_motor_control& (0+255),b
  1901  000682  EE20 F006          	lfsr	2,6
  1902  000686  519C               	movf	motor_control@motor& (0+255),w,b
  1903  000688  26D9               	addwf	fsr2l,f,c
  1904  00068A  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1905  00068C  22DA               	addwfc	fsr2h,f,c
  1906  00068E  50DF               	movf	indf2,w,c
  1907  000690  6F9F               	movwf	(??_motor_control+1)& (0+255),b
  1908  000692  519F               	movf	(??_motor_control+1)& (0+255),w,b
  1909  000694  5D9E               	subwf	??_motor_control& (0+255),w,b
  1910  000696  6F6A               	movwf	abs@a& (0+255),b
  1911  000698  6B6B               	clrf	(abs@a+1)& (0+255),b
  1912  00069A  A0D8               	btfss	status,0,c
  1913  00069C  076B               	decf	(abs@a+1)& (0+255),f,b
  1914  00069E  EC58  F00B         	call	_abs	;wreg free
  1915  0006A2  C06A  F0A6         	movff	?_abs,motor_control@delta_pos
  1916  0006A6  C06B  F0A7         	movff	?_abs+1,motor_control@delta_pos+1
  1917  0006AA                     
  1918                           ;motors.c: 93:     motor->status.faults.motor_stuck = (motor->status.speed != 0) && (del
      +                          ta_pos < 5) && (delta_time > 500);
  1919  0006AA  0E00               	movlw	0
  1920  0006AC  0100               	movlb	0	; () banked
  1921  0006AE  6FA2               	movwf	_motor_control$716& (0+255),b
  1922  0006B0                     
  1923                           ; BSR set to: 0
  1924  0006B0  EE20 F002          	lfsr	2,2
  1925  0006B4  519C               	movf	motor_control@motor& (0+255),w,b
  1926  0006B6  26D9               	addwf	fsr2l,f,c
  1927  0006B8  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1928  0006BA  22DA               	addwfc	fsr2h,f,c
  1929  0006BC  50DF               	movf	indf2,w,c
  1930  0006BE  B4D8               	btfsc	status,2,c
  1931  0006C0  EF64  F003         	goto	u2881
  1932  0006C4  EF66  F003         	goto	u2880
  1933  0006C8                     u2881:
  1934  0006C8  EF81  F003         	goto	l2947
  1935  0006CC                     u2880:
  1936  0006CC                     
  1937                           ; BSR set to: 0
  1938  0006CC  BFA7               	btfsc	(motor_control@delta_pos+1)& (0+255),7,b
  1939  0006CE  EF74  F003         	goto	u2890
  1940  0006D2  51A7               	movf	(motor_control@delta_pos+1)& (0+255),w,b
  1941  0006D4  E107               	bnz	u2891
  1942  0006D6  0E05               	movlw	5
  1943  0006D8  5DA6               	subwf	motor_control@delta_pos& (0+255),w,b
  1944  0006DA  B0D8               	btfsc	status,0,c
  1945  0006DC  EF72  F003         	goto	u2891
  1946  0006E0  EF74  F003         	goto	u2890
  1947  0006E4                     u2891:
  1948  0006E4  EF81  F003         	goto	l2947
  1949  0006E8                     u2890:
  1950  0006E8                     
  1951                           ; BSR set to: 0
  1952  0006E8  0EF5               	movlw	245
  1953  0006EA  5DA4               	subwf	motor_control@delta_time& (0+255),w,b
  1954  0006EC  0E01               	movlw	1
  1955  0006EE  59A5               	subwfb	(motor_control@delta_time+1)& (0+255),w,b
  1956  0006F0  A0D8               	btfss	status,0,c
  1957  0006F2  EF7D  F003         	goto	u2901
  1958  0006F6  EF7F  F003         	goto	u2900
  1959  0006FA                     u2901:
  1960  0006FA  EF81  F003         	goto	l2947
  1961  0006FE                     u2900:
  1962  0006FE                     
  1963                           ; BSR set to: 0
  1964  0006FE  0E01               	movlw	1
  1965  000700  6FA2               	movwf	_motor_control$716& (0+255),b
  1966  000702                     l2947:
  1967                           
  1968                           ; BSR set to: 0
  1969  000702  EE20 F004          	lfsr	2,4
  1970  000706  519C               	movf	motor_control@motor& (0+255),w,b
  1971  000708  26D9               	addwf	fsr2l,f,c
  1972  00070A  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1973  00070C  22DA               	addwfc	fsr2h,f,c
  1974  00070E  B1A2               	btfsc	_motor_control$716& (0+255),0,b
  1975  000710  D002               	bra	u2915
  1976  000712  90DF               	bcf	indf2,0,c
  1977  000714  D002               	bra	u2916
  1978  000716                     u2915:
  1979  000716  0100               	movlb	0	; () banked
  1980  000718  80DF               	bsf	indf2,0,c
  1981  00071A                     u2916:
  1982  00071A                     
  1983                           ; BSR set to: 0
  1984                           ;motors.c: 95:     motor->status.faults.motor_slip_encoder_drift = (motor->status.speed 
      +                          == 0) && delta_pos != 0;
  1985  00071A  0E00               	movlw	0
  1986  00071C  6FA3               	movwf	_motor_control$717& (0+255),b
  1987  00071E  EE20 F002          	lfsr	2,2
  1988  000722  519C               	movf	motor_control@motor& (0+255),w,b
  1989  000724  26D9               	addwf	fsr2l,f,c
  1990  000726  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  1991  000728  22DA               	addwfc	fsr2h,f,c
  1992  00072A  50DF               	movf	indf2,w,c
  1993  00072C  A4D8               	btfss	status,2,c
  1994  00072E  EF9B  F003         	goto	u2921
  1995  000732  EF9D  F003         	goto	u2920
  1996  000736                     u2921:
  1997  000736  EFA8  F003         	goto	l2955
  1998  00073A                     u2920:
  1999  00073A                     
  2000                           ; BSR set to: 0
  2001  00073A  51A6               	movf	motor_control@delta_pos& (0+255),w,b
  2002  00073C  11A7               	iorwf	(motor_control@delta_pos+1)& (0+255),w,b
  2003  00073E  B4D8               	btfsc	status,2,c
  2004  000740  EFA4  F003         	goto	u2931
  2005  000744  EFA6  F003         	goto	u2930
  2006  000748                     u2931:
  2007  000748  EFA8  F003         	goto	l2955
  2008  00074C                     u2930:
  2009  00074C                     
  2010                           ; BSR set to: 0
  2011  00074C  0E01               	movlw	1
  2012  00074E  6FA3               	movwf	_motor_control$717& (0+255),b
  2013  000750                     l2955:
  2014                           
  2015                           ; BSR set to: 0
  2016  000750  EE20 F004          	lfsr	2,4
  2017  000754  519C               	movf	motor_control@motor& (0+255),w,b
  2018  000756  26D9               	addwf	fsr2l,f,c
  2019  000758  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  2020  00075A  22DA               	addwfc	fsr2h,f,c
  2021  00075C  B1A3               	btfsc	_motor_control$717& (0+255),0,b
  2022  00075E  D002               	bra	u2945
  2023  000760  96DF               	bcf	indf2,3,c
  2024  000762  D002               	bra	u2946
  2025  000764                     u2945:
  2026  000764  0100               	movlb	0	; () banked
  2027  000766  86DF               	bsf	indf2,3,c
  2028  000768                     u2946:
  2029  000768                     
  2030                           ; BSR set to: 0
  2031                           ;motors.c: 96:     motor->status.faults.encoder_error = (encoders_errors > 0);
  2032  000768  51CD               	movf	_encoders_errors& (0+255),w,b
  2033  00076A  A4D8               	btfss	status,2,c
  2034  00076C  EFBA  F003         	goto	u2951
  2035  000770  EFBE  F003         	goto	u2950
  2036  000774                     u2951:
  2037  000774  6B9E               	clrf	??_motor_control& (0+255),b
  2038  000776  2B9E               	incf	??_motor_control& (0+255),f,b
  2039  000778  EFC0  F003         	goto	u2968
  2040  00077C                     u2950:
  2041  00077C  0100               	movlb	0	; () banked
  2042  00077E  6B9E               	clrf	??_motor_control& (0+255),b
  2043  000780                     u2968:
  2044  000780  EE20 F004          	lfsr	2,4
  2045  000784  519C               	movf	motor_control@motor& (0+255),w,b
  2046  000786  26D9               	addwf	fsr2l,f,c
  2047  000788  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  2048  00078A  22DA               	addwfc	fsr2h,f,c
  2049  00078C  3B9E               	swapf	??_motor_control& (0+255),f,b
  2050  00078E  50DF               	movf	223,w,c
  2051  000790  199E               	xorwf	??_motor_control& (0+255),w,b
  2052  000792  0BEF               	andlw	-17
  2053  000794  199E               	xorwf	??_motor_control& (0+255),w,b
  2054  000796  6EDF               	movwf	223,c
  2055  000798                     
  2056                           ; BSR set to: 0
  2057                           ;motors.c: 98:     if (motor->status.homing.has_homed) {
  2058  000798  EE20 F003          	lfsr	2,3
  2059  00079C  519C               	movf	motor_control@motor& (0+255),w,b
  2060  00079E  26D9               	addwf	fsr2l,f,c
  2061  0007A0  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  2062  0007A2  22DA               	addwfc	fsr2h,f,c
  2063  0007A4  A2DF               	btfss	indf2,1,c
  2064  0007A6  EFD7  F003         	goto	u2971
  2065  0007AA  EFD9  F003         	goto	u2970
  2066  0007AE                     u2971:
  2067  0007AE  EFF7  F003         	goto	l2963
  2068  0007B2                     u2970:
  2069  0007B2                     
  2070                           ; BSR set to: 0
  2071                           ;motors.c: 103:         motor_set(motor->which, calc_speed(motor->status.pos, motor->goa
      +                          l_pos));
  2072  0007B2  EE20 F005          	lfsr	2,5
  2073  0007B6  519C               	movf	motor_control@motor& (0+255),w,b
  2074  0007B8  26D9               	addwf	fsr2l,f,c
  2075  0007BA  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  2076  0007BC  22DA               	addwfc	fsr2h,f,c
  2077  0007BE  50DF               	movf	indf2,w,c
  2078  0007C0  6F6A               	movwf	calc_speed@goal_pos& (0+255),b
  2079  0007C2  EE20 F001          	lfsr	2,1
  2080  0007C6  519C               	movf	motor_control@motor& (0+255),w,b
  2081  0007C8  26D9               	addwf	fsr2l,f,c
  2082  0007CA  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  2083  0007CC  22DA               	addwfc	fsr2h,f,c
  2084  0007CE  50DF               	movf	indf2,w,c
  2085  0007D0  ECA0  F009         	call	_calc_speed
  2086  0007D4  0100               	movlb	0	; () banked
  2087  0007D6  6F6D               	movwf	motor_set@speed& (0+255),b
  2088  0007D8  0060  F273  FFD9   	movff	motor_control@motor,fsr2l
  2089  0007DE  0060  F277  FFDA   	movff	motor_control@motor+1,fsr2h
  2090  0007E4  50DF               	movf	indf2,w,c
  2091  0007E6  EC3F  F006         	call	_motor_set
  2092                           
  2093                           ;motors.c: 104:     } else {
  2094  0007EA  EF17  F004         	goto	l211
  2095  0007EE                     l2963:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;motors.c: 107:         motor_set(motor->which, -100);
  2099  0007EE  0E9C               	movlw	156
  2100  0007F0  6F6D               	movwf	motor_set@speed& (0+255),b
  2101  0007F2  0060  F273  FFD9   	movff	motor_control@motor,fsr2l
  2102  0007F8  0060  F277  FFDA   	movff	motor_control@motor+1,fsr2h
  2103  0007FE  50DF               	movf	indf2,w,c
  2104  000800  EC3F  F006         	call	_motor_set
  2105  000804                     
  2106                           ;motors.c: 108:         if (motor->status.homing.limit_switch) {
  2107  000804  0100               	movlb	0	; () banked
  2108  000806  EE20 F003          	lfsr	2,3
  2109  00080A  519C               	movf	motor_control@motor& (0+255),w,b
  2110  00080C  26D9               	addwf	fsr2l,f,c
  2111  00080E  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  2112  000810  22DA               	addwfc	fsr2h,f,c
  2113  000812  A0DF               	btfss	indf2,0,c
  2114  000814  EF0E  F004         	goto	u2981
  2115  000818  EF10  F004         	goto	u2980
  2116  00081C                     u2981:
  2117  00081C  EF17  F004         	goto	l211
  2118  000820                     u2980:
  2119  000820                     
  2120                           ; BSR set to: 0
  2121                           ;motors.c: 109:             motor->status.homing.has_homed = 1;
  2122  000820  EE20 F003          	lfsr	2,3
  2123  000824  519C               	movf	motor_control@motor& (0+255),w,b
  2124  000826  26D9               	addwf	fsr2l,f,c
  2125  000828  519D               	movf	(motor_control@motor+1)& (0+255),w,b
  2126  00082A  22DA               	addwfc	fsr2h,f,c
  2127  00082C  82DF               	bsf	indf2,1,c
  2128  00082E                     l211:
  2129  00082E  0012               	return		;funcret
  2130  000830                     __end_of_motor_control:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _time_millis *****************
  2134 ;; Defined at:
  2135 ;;		line 19 in file "libpicutil/time.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  result          2   12[BANK0 ] unsigned short 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  2   10[BANK0 ] unsigned short 
  2142 ;; Registers used:
  2143 ;;		None
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;Total ram usage:        4 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 3
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;;		_motor_control
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text9
  2165  0017A0                     __ptext9:
  2166                           	callstack 0
  2167  0017A0                     _time_millis:
  2168                           	callstack 27
  2169  0017A0                     
  2170                           ;libpicutil/time.c: 20:     PIE3bits.TMR0IE = 0;
  2171  0017A0  0139               	movlb	57	; () banked
  2172  0017A2  9F93               	bcf	147,7,b	;volatile
  2173                           
  2174                           ;libpicutil/time.c: 22:     uint16_t result = ms;
  2175  0017A4  C024  F06C         	movff	_ms,time_millis@result	;volatile
  2176  0017A8  C025  F06D         	movff	_ms+1,time_millis@result+1	;volatile
  2177                           
  2178                           ;libpicutil/time.c: 23:     PIE3bits.TMR0IE = 1;
  2179  0017AC  8F93               	bsf	147,7,b	;volatile
  2180                           
  2181                           ;libpicutil/time.c: 24:     return result;
  2182  0017AE  C06C  F06A         	movff	time_millis@result,?_time_millis
  2183  0017B2  C06D  F06B         	movff	time_millis@result+1,?_time_millis+1
  2184  0017B6                     
  2185                           ; BSR set to: 57
  2186  0017B6  0012               	return		;funcret
  2187  0017B8                     __end_of_time_millis:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function _motor_set *****************
  2191 ;; Defined at:
  2192 ;;		line 39 in file "motors.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  which           1    wreg     unsigned char 
  2195 ;;  speed           1   13[BANK0 ] char 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  which           1   18[BANK0 ] unsigned char 
  2198 ;;  pwm             2   16[BANK0 ] unsigned short 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2208 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;Total ram usage:        6 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 3
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_motor_control
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text10
  2223  000C7E                     __ptext10:
  2224                           	callstack 0
  2225  000C7E                     _motor_set:
  2226                           	callstack 26
  2227                           
  2228                           ; BSR set to: 57
  2229                           ;incstack = 0
  2230                           ;motor_set@which stored from wreg
  2231  000C7E  0100               	movlb	0	; () banked
  2232  000C80  6F72               	movwf	motor_set@which& (0+255),b
  2233  000C82                     
  2234                           ;motors.c: 40:     uint16_t pwm;;motors.c: 41:     if (speed > 0) {
  2235  000C82  0100               	movlb	0	; () banked
  2236  000C84  516D               	movf	motor_set@speed& (0+255),w,b
  2237  000C86  0A80               	xorlw	128
  2238  000C88  0F7F               	addlw	-129
  2239  000C8A  A0D8               	btfss	status,0,c
  2240  000C8C  EF4A  F006         	goto	u2641
  2241  000C90  EF4C  F006         	goto	u2640
  2242  000C94                     u2641:
  2243  000C94  EF68  F006         	goto	l2813
  2244  000C98                     u2640:
  2245  000C98                     
  2246                           ; BSR set to: 0
  2247                           ;motors.c: 42:         if (which == 1) {
  2248  000C98  0572               	decf	motor_set@which& (0+255),w,b
  2249  000C9A  A4D8               	btfss	status,2,c
  2250  000C9C  EF52  F006         	goto	u2651
  2251  000CA0  EF54  F006         	goto	u2650
  2252  000CA4                     u2651:
  2253  000CA4  EF57  F006         	goto	l2807
  2254  000CA8                     u2650:
  2255  000CA8                     
  2256                           ; BSR set to: 0
  2257                           ;motors.c: 43:             LATBbits.LB1 = 1;
  2258  000CA8  82BB               	bsf	187,1,c	;volatile
  2259                           
  2260                           ;motors.c: 44:         } else if (which == 2) {
  2261  000CAA  EF61  F006         	goto	l2811
  2262  000CAE                     l2807:
  2263                           
  2264                           ; BSR set to: 0
  2265  000CAE  0E02               	movlw	2
  2266  000CB0  1972               	xorwf	motor_set@which& (0+255),w,b
  2267  000CB2  A4D8               	btfss	status,2,c
  2268  000CB4  EF5E  F006         	goto	u2661
  2269  000CB8  EF60  F006         	goto	u2660
  2270  000CBC                     u2661:
  2271  000CBC  EF61  F006         	goto	l2811
  2272  000CC0                     u2660:
  2273  000CC0                     
  2274                           ; BSR set to: 0
  2275                           ;motors.c: 45:             LATBbits.LB3 = 1;
  2276  000CC0  86BB               	bsf	187,3,c	;volatile
  2277  000CC2                     l2811:
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;motors.c: 47:         pwm = (uint16_t) speed;
  2281  000CC2  516D               	movf	motor_set@speed& (0+255),w,b
  2282  000CC4  6F70               	movwf	motor_set@pwm& (0+255),b
  2283  000CC6  6B71               	clrf	(motor_set@pwm+1)& (0+255),b
  2284  000CC8  BF70               	btfsc	motor_set@pwm& (0+255),7,b
  2285  000CCA  0771               	decf	(motor_set@pwm+1)& (0+255),f,b
  2286                           
  2287                           ;motors.c: 48:     } else {
  2288  000CCC  EF8A  F006         	goto	l2823
  2289  000CD0                     l2813:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;motors.c: 49:         if (which == 1) {
  2293  000CD0  0572               	decf	motor_set@which& (0+255),w,b
  2294  000CD2  A4D8               	btfss	status,2,c
  2295  000CD4  EF6E  F006         	goto	u2671
  2296  000CD8  EF70  F006         	goto	u2670
  2297  000CDC                     u2671:
  2298  000CDC  EF73  F006         	goto	l2817
  2299  000CE0                     u2670:
  2300  000CE0                     
  2301                           ; BSR set to: 0
  2302                           ;motors.c: 50:             LATBbits.LB1 = 0;
  2303  000CE0  92BB               	bcf	187,1,c	;volatile
  2304                           
  2305                           ;motors.c: 51:         } else if (which == 2) {
  2306  000CE2  EF7D  F006         	goto	l2821
  2307  000CE6                     l2817:
  2308                           
  2309                           ; BSR set to: 0
  2310  000CE6  0E02               	movlw	2
  2311  000CE8  1972               	xorwf	motor_set@which& (0+255),w,b
  2312  000CEA  A4D8               	btfss	status,2,c
  2313  000CEC  EF7A  F006         	goto	u2681
  2314  000CF0  EF7C  F006         	goto	u2680
  2315  000CF4                     u2681:
  2316  000CF4  EF7D  F006         	goto	l2821
  2317  000CF8                     u2680:
  2318  000CF8                     
  2319                           ; BSR set to: 0
  2320                           ;motors.c: 52:             LATBbits.LB3 = 0;
  2321  000CF8  96BB               	bcf	187,3,c	;volatile
  2322  000CFA                     l2821:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;motors.c: 54:         pwm = (uint16_t) (-speed);
  2326  000CFA  C06D  F06E         	movff	motor_set@speed,??_motor_set
  2327  000CFE  6B6F               	clrf	(??_motor_set+1)& (0+255),b
  2328  000D00  BF6E               	btfsc	??_motor_set& (0+255),7,b
  2329  000D02  076F               	decf	(??_motor_set+1)& (0+255),f,b
  2330  000D04  1F6E               	comf	??_motor_set& (0+255),f,b
  2331  000D06  1F6F               	comf	(??_motor_set+1)& (0+255),f,b
  2332  000D08  4B6E               	infsnz	??_motor_set& (0+255),f,b
  2333  000D0A  2B6F               	incf	(??_motor_set+1)& (0+255),f,b
  2334  000D0C  C06E  F070         	movff	??_motor_set,motor_set@pwm
  2335  000D10  C06F  F071         	movff	??_motor_set+1,motor_set@pwm+1
  2336  000D14                     l2823:
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;motors.c: 56:     pwm <<= 3;
  2340  000D14  90D8               	bcf	status,0,c
  2341  000D16  3770               	rlcf	motor_set@pwm& (0+255),f,b
  2342  000D18  3771               	rlcf	(motor_set@pwm+1)& (0+255),f,b
  2343  000D1A  90D8               	bcf	status,0,c
  2344  000D1C  3770               	rlcf	motor_set@pwm& (0+255),f,b
  2345  000D1E  3771               	rlcf	(motor_set@pwm+1)& (0+255),f,b
  2346  000D20  90D8               	bcf	status,0,c
  2347  000D22  3770               	rlcf	motor_set@pwm& (0+255),f,b
  2348  000D24  3771               	rlcf	(motor_set@pwm+1)& (0+255),f,b
  2349  000D26                     
  2350                           ; BSR set to: 0
  2351                           ;motors.c: 57:     if (which == 1) {
  2352  000D26  0572               	decf	motor_set@which& (0+255),w,b
  2353  000D28  A4D8               	btfss	status,2,c
  2354  000D2A  EF99  F006         	goto	u2691
  2355  000D2E  EF9B  F006         	goto	u2690
  2356  000D32                     u2691:
  2357  000D32  EFA2  F006         	goto	l2831
  2358  000D36                     u2690:
  2359  000D36                     
  2360                           ; BSR set to: 0
  2361                           ;motors.c: 58:         CCPR1H = (uint8_t) (pwm >> 8);
  2362  000D36  5171               	movf	(motor_set@pwm+1)& (0+255),w,b
  2363  000D38  6E7D               	movwf	125,c	;volatile
  2364  000D3A                     l2829:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;motors.c: 59:         CCPR1L = (uint8_t) (pwm & 0xFF);
  2368  000D3A  0060  F1C3  FF7C   	movff	motor_set@pwm,16252	;volatile
  2369                           
  2370                           ;motors.c: 60:     } else if (which == 2) {
  2371  000D40  EFAF  F006         	goto	l189
  2372  000D44                     l2831:
  2373                           
  2374                           ; BSR set to: 0
  2375  000D44  0E02               	movlw	2
  2376  000D46  1972               	xorwf	motor_set@which& (0+255),w,b
  2377  000D48  A4D8               	btfss	status,2,c
  2378  000D4A  EFA9  F006         	goto	u2701
  2379  000D4E  EFAB  F006         	goto	u2700
  2380  000D52                     u2701:
  2381  000D52  EFAF  F006         	goto	l189
  2382  000D56                     u2700:
  2383  000D56                     
  2384                           ; BSR set to: 0
  2385                           ;motors.c: 61:         CCPR2H = (uint8_t) (pwm >> 8);
  2386  000D56  5171               	movf	(motor_set@pwm+1)& (0+255),w,b
  2387  000D58  6E79               	movwf	121,c	;volatile
  2388  000D5A  EF9D  F006         	goto	l2829
  2389  000D5E                     l189:
  2390                           
  2391                           ; BSR set to: 0
  2392  000D5E  0012               	return		;funcret
  2393  000D60                     __end_of_motor_set:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _encoders_is_limit *****************
  2397 ;; Defined at:
  2398 ;;		line 58 in file "encoders.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  which           1    wreg     unsigned char 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  which           1   10[BANK0 ] unsigned char 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      unsigned char 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;Total ram usage:        1 bytes
  2417 ;; Hardware stack levels used: 1
  2418 ;; Hardware stack levels required when called: 3
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_motor_control
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text11
  2427  00147C                     __ptext11:
  2428                           	callstack 0
  2429  00147C                     _encoders_is_limit:
  2430                           	callstack 26
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;incstack = 0
  2434                           ;encoders_is_limit@which stored from wreg
  2435  00147C  0100               	movlb	0	; () banked
  2436  00147E  6F6A               	movwf	encoders_is_limit@which& (0+255),b
  2437  001480                     
  2438                           ;encoders.c: 59:     if (which == 1) {
  2439  001480  0100               	movlb	0	; () banked
  2440  001482  056A               	decf	encoders_is_limit@which& (0+255),w,b
  2441  001484  A4D8               	btfss	status,2,c
  2442  001486  EF47  F00A         	goto	u2581
  2443  00148A  EF49  F00A         	goto	u2580
  2444  00148E                     u2581:
  2445  00148E  EF55  F00A         	goto	l2775
  2446  001492                     u2580:
  2447  001492                     
  2448                           ; BSR set to: 0
  2449                           ;encoders.c: 60:         return ~PORTAbits.RA4;
  2450  001492  B8CA               	btfsc	202,4,c	;volatile
  2451  001494  EF4E  F00A         	goto	u2591
  2452  001498  EF51  F00A         	goto	u2590
  2453  00149C                     u2591:
  2454  00149C  0E01               	movlw	1
  2455  00149E  EF52  F00A         	goto	u2596
  2456  0014A2                     u2590:
  2457  0014A2  0E00               	movlw	0
  2458  0014A4                     u2596:
  2459  0014A4  0AFF               	xorlw	255
  2460  0014A6  EF6B  F00A         	goto	l122
  2461  0014AA                     l2775:
  2462                           
  2463                           ; BSR set to: 0
  2464  0014AA  0E02               	movlw	2
  2465  0014AC  196A               	xorwf	encoders_is_limit@which& (0+255),w,b
  2466  0014AE  A4D8               	btfss	status,2,c
  2467  0014B0  EF5C  F00A         	goto	u2601
  2468  0014B4  EF5E  F00A         	goto	u2600
  2469  0014B8                     u2601:
  2470  0014B8  EF6A  F00A         	goto	l2781
  2471  0014BC                     u2600:
  2472  0014BC                     
  2473                           ; BSR set to: 0
  2474                           ;encoders.c: 62:         return ~PORTAbits.RA5;
  2475  0014BC  BACA               	btfsc	202,5,c	;volatile
  2476  0014BE  EF63  F00A         	goto	u2611
  2477  0014C2  EF66  F00A         	goto	u2610
  2478  0014C6                     u2611:
  2479  0014C6  0E01               	movlw	1
  2480  0014C8  EF67  F00A         	goto	u2616
  2481  0014CC                     u2610:
  2482  0014CC  0E00               	movlw	0
  2483  0014CE                     u2616:
  2484  0014CE  0AFF               	xorlw	255
  2485  0014D0  EF6B  F00A         	goto	l122
  2486  0014D4                     l2781:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;encoders.c: 64:     return 0;
  2490  0014D4  0E00               	movlw	0
  2491  0014D6                     l122:
  2492                           
  2493                           ; BSR set to: 0
  2494  0014D6  0012               	return		;funcret
  2495  0014D8                     __end_of_encoders_is_limit:
  2496                           	callstack 0
  2497                           
  2498 ;; *************** function _encoders_get_pos *****************
  2499 ;; Defined at:
  2500 ;;		line 67 in file "encoders.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  which           1    wreg     unsigned char 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  which           1   59[BANK0 ] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      unsigned char 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;Total ram usage:        1 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; Hardware stack levels required when called: 4
  2521 ;; This function calls:
  2522 ;;		___flmul
  2523 ;;		___fltol
  2524 ;;		___xxtofl
  2525 ;; This function is called by:
  2526 ;;		_motor_control
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text12
  2531  000E32                     __ptext12:
  2532                           	callstack 0
  2533  000E32                     _encoders_get_pos:
  2534                           	callstack 25
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;incstack = 0
  2538                           ;encoders_get_pos@which stored from wreg
  2539  000E32  0100               	movlb	0	; () banked
  2540  000E34  6F9B               	movwf	encoders_get_pos@which& (0+255),b
  2541  000E36                     
  2542                           ;encoders.c: 68:     if (which == 1) {
  2543  000E36  0100               	movlb	0	; () banked
  2544  000E38  059B               	decf	encoders_get_pos@which& (0+255),w,b
  2545  000E3A  A4D8               	btfss	status,2,c
  2546  000E3C  EF22  F007         	goto	u2621
  2547  000E40  EF24  F007         	goto	u2620
  2548  000E44                     u2621:
  2549  000E44  EF4D  F007         	goto	l2791
  2550  000E48                     u2620:
  2551  000E48                     
  2552                           ; BSR set to: 0
  2553                           ;encoders.c: 69:         return (uint8_t)((float)enc_1_count * (100.0 / 1000));
  2554  000E48  0ECD               	movlw	205
  2555  000E4A  6F7C               	movwf	___flmul@a& (0+255),b
  2556  000E4C  0ECC               	movlw	204
  2557  000E4E  6F7D               	movwf	(___flmul@a+1)& (0+255),b
  2558  000E50  0ECC               	movlw	204
  2559  000E52  6F7E               	movwf	(___flmul@a+2)& (0+255),b
  2560  000E54  0E3D               	movlw	61
  2561  000E56  6F7F               	movwf	(___flmul@a+3)& (0+255),b
  2562  000E58  C030  F06A         	movff	_enc_1_count,___xxtofl@val
  2563  000E5C  C031  F06B         	movff	_enc_1_count+1,___xxtofl@val+1
  2564  000E60  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
  2565  000E62  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
  2566  000E64  0E00               	movlw	0
  2567  000E66  EC18  F004         	call	___xxtofl
  2568  000E6A  C06A  F078         	movff	?___xxtofl,___flmul@b
  2569  000E6E  C06B  F079         	movff	?___xxtofl+1,___flmul@b+1
  2570  000E72  C06C  F07A         	movff	?___xxtofl+2,___flmul@b+2
  2571  000E76  C06D  F07B         	movff	?___xxtofl+3,___flmul@b+3
  2572  000E7A  EC56  F000         	call	___flmul	;wreg free
  2573  000E7E  C078  F091         	movff	?___flmul,___fltol@f1
  2574  000E82  C079  F092         	movff	?___flmul+1,___fltol@f1+1
  2575  000E86  C07A  F093         	movff	?___flmul+2,___fltol@f1+2
  2576  000E8A  C07B  F094         	movff	?___flmul+3,___fltol@f1+3
  2577  000E8E  ECBB  F005         	call	___fltol	;wreg free
  2578  000E92  0100               	movlb	0	; () banked
  2579  000E94  5191               	movf	?___fltol& (0+255),w,b
  2580  000E96  EF80  F007         	goto	l127
  2581  000E9A                     l2791:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;encoders.c: 71:     if (which == 2) {
  2585  000E9A  0E02               	movlw	2
  2586  000E9C  199B               	xorwf	encoders_get_pos@which& (0+255),w,b
  2587  000E9E  A4D8               	btfss	status,2,c
  2588  000EA0  EF54  F007         	goto	u2631
  2589  000EA4  EF56  F007         	goto	u2630
  2590  000EA8                     u2631:
  2591  000EA8  EF7F  F007         	goto	l2797
  2592  000EAC                     u2630:
  2593  000EAC                     
  2594                           ; BSR set to: 0
  2595                           ;encoders.c: 72:         return (uint8_t)((float)enc_2_count * (100.0 / 500));
  2596  000EAC  0ECD               	movlw	205
  2597  000EAE  6F7C               	movwf	___flmul@a& (0+255),b
  2598  000EB0  0ECC               	movlw	204
  2599  000EB2  6F7D               	movwf	(___flmul@a+1)& (0+255),b
  2600  000EB4  0E4C               	movlw	76
  2601  000EB6  6F7E               	movwf	(___flmul@a+2)& (0+255),b
  2602  000EB8  0E3E               	movlw	62
  2603  000EBA  6F7F               	movwf	(___flmul@a+3)& (0+255),b
  2604  000EBC  C02E  F06A         	movff	_enc_2_count,___xxtofl@val
  2605  000EC0  C02F  F06B         	movff	_enc_2_count+1,___xxtofl@val+1
  2606  000EC4  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
  2607  000EC6  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
  2608  000EC8  0E00               	movlw	0
  2609  000ECA  EC18  F004         	call	___xxtofl
  2610  000ECE  C06A  F078         	movff	?___xxtofl,___flmul@b
  2611  000ED2  C06B  F079         	movff	?___xxtofl+1,___flmul@b+1
  2612  000ED6  C06C  F07A         	movff	?___xxtofl+2,___flmul@b+2
  2613  000EDA  C06D  F07B         	movff	?___xxtofl+3,___flmul@b+3
  2614  000EDE  EC56  F000         	call	___flmul	;wreg free
  2615  000EE2  C078  F091         	movff	?___flmul,___fltol@f1
  2616  000EE6  C079  F092         	movff	?___flmul+1,___fltol@f1+1
  2617  000EEA  C07A  F093         	movff	?___flmul+2,___fltol@f1+2
  2618  000EEE  C07B  F094         	movff	?___flmul+3,___fltol@f1+3
  2619  000EF2  ECBB  F005         	call	___fltol	;wreg free
  2620  000EF6  0100               	movlb	0	; () banked
  2621  000EF8  5191               	movf	?___fltol& (0+255),w,b
  2622  000EFA  EF80  F007         	goto	l127
  2623  000EFE                     l2797:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;encoders.c: 74:     return 0;
  2627  000EFE  0E00               	movlw	0
  2628  000F00                     l127:
  2629                           
  2630                           ; BSR set to: 0
  2631  000F00  0012               	return		;funcret
  2632  000F02                     __end_of_encoders_get_pos:
  2633                           	callstack 0
  2634                           
  2635 ;; *************** function ___xxtofl *****************
  2636 ;; Defined at:
  2637 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  sign            1    wreg     unsigned char 
  2640 ;;  val             4   10[BANK0 ] long 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  sign            1   18[BANK0 ] unsigned char 
  2643 ;;  arg             4   20[BANK0 ] unsigned long 
  2644 ;;  exp             1   19[BANK0 ] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  4   10[BANK0 ] unsigned char 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;Total ram usage:       14 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 3
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_encoders_get_pos
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text13
  2669  000830                     __ptext13:
  2670                           	callstack 0
  2671  000830                     ___xxtofl:
  2672                           	callstack 25
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;incstack = 0
  2676                           ;___xxtofl@sign stored from wreg
  2677  000830  0100               	movlb	0	; () banked
  2678  000832  6F72               	movwf	___xxtofl@sign& (0+255),b
  2679  000834  0100               	movlb	0	; () banked
  2680  000836  5172               	movf	___xxtofl@sign& (0+255),w,b
  2681  000838  B4D8               	btfsc	status,2,c
  2682  00083A  EF21  F004         	goto	u2471
  2683  00083E  EF23  F004         	goto	u2470
  2684  000842                     u2471:
  2685  000842  EF45  F004         	goto	l1050
  2686  000846                     u2470:
  2687  000846                     
  2688                           ; BSR set to: 0
  2689  000846  BF6D               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  2690  000848  EF2A  F004         	goto	u2480
  2691  00084C  EF28  F004         	goto	u2481
  2692  000850                     u2481:
  2693  000850  EF45  F004         	goto	l1050
  2694  000854                     u2480:
  2695  000854                     
  2696                           ; BSR set to: 0
  2697  000854  C06A  F06E         	movff	___xxtofl@val,??___xxtofl
  2698  000858  C06B  F06F         	movff	___xxtofl@val+1,??___xxtofl+1
  2699  00085C  C06C  F070         	movff	___xxtofl@val+2,??___xxtofl+2
  2700  000860  C06D  F071         	movff	___xxtofl@val+3,??___xxtofl+3
  2701  000864  1F6E               	comf	??___xxtofl& (0+255),f,b
  2702  000866  1F6F               	comf	(??___xxtofl+1)& (0+255),f,b
  2703  000868  1F70               	comf	(??___xxtofl+2)& (0+255),f,b
  2704  00086A  1F71               	comf	(??___xxtofl+3)& (0+255),f,b
  2705  00086C  2B6E               	incf	??___xxtofl& (0+255),f,b
  2706  00086E  0E00               	movlw	0
  2707  000870  236F               	addwfc	(??___xxtofl+1)& (0+255),f,b
  2708  000872  2370               	addwfc	(??___xxtofl+2)& (0+255),f,b
  2709  000874  2371               	addwfc	(??___xxtofl+3)& (0+255),f,b
  2710  000876  C06E  F074         	movff	??___xxtofl,___xxtofl@arg
  2711  00087A  C06F  F075         	movff	??___xxtofl+1,___xxtofl@arg+1
  2712  00087E  C070  F076         	movff	??___xxtofl+2,___xxtofl@arg+2
  2713  000882  C071  F077         	movff	??___xxtofl+3,___xxtofl@arg+3
  2714  000886  EF4D  F004         	goto	l2713
  2715  00088A                     l1050:
  2716                           
  2717                           ; BSR set to: 0
  2718  00088A  C06A  F074         	movff	___xxtofl@val,___xxtofl@arg
  2719  00088E  C06B  F075         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2720  000892  C06C  F076         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2721  000896  C06D  F077         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2722  00089A                     l2713:
  2723                           
  2724                           ; BSR set to: 0
  2725  00089A  516A               	movf	___xxtofl@val& (0+255),w,b
  2726  00089C  116B               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  2727  00089E  116C               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  2728  0008A0  116D               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  2729  0008A2  A4D8               	btfss	status,2,c
  2730  0008A4  EF56  F004         	goto	u2491
  2731  0008A8  EF58  F004         	goto	u2490
  2732  0008AC                     u2491:
  2733  0008AC  EF62  F004         	goto	l2719
  2734  0008B0                     u2490:
  2735  0008B0                     
  2736                           ; BSR set to: 0
  2737  0008B0  0E00               	movlw	0
  2738  0008B2  6F6A               	movwf	?___xxtofl& (0+255),b
  2739  0008B4  0E00               	movlw	0
  2740  0008B6  6F6B               	movwf	(?___xxtofl+1)& (0+255),b
  2741  0008B8  0E00               	movlw	0
  2742  0008BA  6F6C               	movwf	(?___xxtofl+2)& (0+255),b
  2743  0008BC  0E00               	movlw	0
  2744  0008BE  6F6D               	movwf	(?___xxtofl+3)& (0+255),b
  2745  0008C0  EFF3  F004         	goto	l1053
  2746  0008C4                     l2719:
  2747                           
  2748                           ; BSR set to: 0
  2749  0008C4  0E96               	movlw	150
  2750  0008C6  6F73               	movwf	___xxtofl@exp& (0+255),b
  2751  0008C8  EF6C  F004         	goto	l2723
  2752  0008CC                     l2721:
  2753                           
  2754                           ; BSR set to: 0
  2755  0008CC  2B73               	incf	___xxtofl@exp& (0+255),f,b
  2756  0008CE  90D8               	bcf	status,0,c
  2757  0008D0  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  2758  0008D2  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  2759  0008D4  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  2760  0008D6  3374               	rrcf	___xxtofl@arg& (0+255),f,b
  2761  0008D8                     l2723:
  2762                           
  2763                           ; BSR set to: 0
  2764  0008D8  0E00               	movlw	0
  2765  0008DA  1574               	andwf	___xxtofl@arg& (0+255),w,b
  2766  0008DC  6F6E               	movwf	??___xxtofl& (0+255),b
  2767  0008DE  0E00               	movlw	0
  2768  0008E0  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  2769  0008E2  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
  2770  0008E4  0E00               	movlw	0
  2771  0008E6  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  2772  0008E8  6F70               	movwf	(??___xxtofl+2)& (0+255),b
  2773  0008EA  0EFE               	movlw	254
  2774  0008EC  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  2775  0008EE  6F71               	movwf	(??___xxtofl+3)& (0+255),b
  2776  0008F0  516E               	movf	??___xxtofl& (0+255),w,b
  2777  0008F2  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
  2778  0008F4  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
  2779  0008F6  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
  2780  0008F8  A4D8               	btfss	status,2,c
  2781  0008FA  EF81  F004         	goto	u2501
  2782  0008FE  EF83  F004         	goto	u2500
  2783  000902                     u2501:
  2784  000902  EF66  F004         	goto	l2721
  2785  000906                     u2500:
  2786  000906  EF91  F004         	goto	l1057
  2787  00090A                     l2725:
  2788                           
  2789                           ; BSR set to: 0
  2790  00090A  2B73               	incf	___xxtofl@exp& (0+255),f,b
  2791  00090C                     
  2792                           ; BSR set to: 0
  2793  00090C  0E01               	movlw	1
  2794  00090E  2774               	addwf	___xxtofl@arg& (0+255),f,b
  2795  000910  0E00               	movlw	0
  2796  000912  2375               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  2797  000914  2376               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  2798  000916  2377               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  2799  000918                     
  2800                           ; BSR set to: 0
  2801  000918  90D8               	bcf	status,0,c
  2802  00091A  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  2803  00091C  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  2804  00091E  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  2805  000920  3374               	rrcf	___xxtofl@arg& (0+255),f,b
  2806  000922                     l1057:
  2807                           
  2808                           ; BSR set to: 0
  2809  000922  0E00               	movlw	0
  2810  000924  1574               	andwf	___xxtofl@arg& (0+255),w,b
  2811  000926  6F6E               	movwf	??___xxtofl& (0+255),b
  2812  000928  0E00               	movlw	0
  2813  00092A  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  2814  00092C  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
  2815  00092E  0E00               	movlw	0
  2816  000930  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  2817  000932  6F70               	movwf	(??___xxtofl+2)& (0+255),b
  2818  000934  0EFF               	movlw	255
  2819  000936  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  2820  000938  6F71               	movwf	(??___xxtofl+3)& (0+255),b
  2821  00093A  516E               	movf	??___xxtofl& (0+255),w,b
  2822  00093C  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
  2823  00093E  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
  2824  000940  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
  2825  000942  A4D8               	btfss	status,2,c
  2826  000944  EFA6  F004         	goto	u2511
  2827  000948  EFA8  F004         	goto	u2510
  2828  00094C                     u2511:
  2829  00094C  EF85  F004         	goto	l2725
  2830  000950                     u2510:
  2831  000950  EFB0  F004         	goto	l2733
  2832  000954                     l2731:
  2833                           
  2834                           ; BSR set to: 0
  2835  000954  0773               	decf	___xxtofl@exp& (0+255),f,b
  2836  000956  90D8               	bcf	status,0,c
  2837  000958  3774               	rlcf	___xxtofl@arg& (0+255),f,b
  2838  00095A  3775               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  2839  00095C  3776               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  2840  00095E  3777               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  2841  000960                     l2733:
  2842                           
  2843                           ; BSR set to: 0
  2844  000960  BF76               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  2845  000962  EFB5  F004         	goto	u2521
  2846  000966  EFB7  F004         	goto	u2520
  2847  00096A                     u2521:
  2848  00096A  EFBF  F004         	goto	l1064
  2849  00096E                     u2520:
  2850  00096E                     
  2851                           ; BSR set to: 0
  2852  00096E  0E02               	movlw	2
  2853  000970  6173               	cpfslt	___xxtofl@exp& (0+255),b
  2854  000972  EFBD  F004         	goto	u2531
  2855  000976  EFBF  F004         	goto	u2530
  2856  00097A                     u2531:
  2857  00097A  EFAA  F004         	goto	l2731
  2858  00097E                     u2530:
  2859  00097E                     l1064:
  2860                           
  2861                           ; BSR set to: 0
  2862  00097E  B173               	btfsc	___xxtofl@exp& (0+255),0,b
  2863  000980  EFC4  F004         	goto	u2541
  2864  000984  EFC6  F004         	goto	u2540
  2865  000988                     u2541:
  2866  000988  EFC7  F004         	goto	l2739
  2867  00098C                     u2540:
  2868  00098C                     
  2869                           ; BSR set to: 0
  2870  00098C  9F76               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  2871  00098E                     l2739:
  2872                           
  2873                           ; BSR set to: 0
  2874  00098E  90D8               	bcf	status,0,c
  2875  000990  3373               	rrcf	___xxtofl@exp& (0+255),f,b
  2876  000992                     
  2877                           ; BSR set to: 0
  2878  000992  C073  F06E         	movff	___xxtofl@exp,??___xxtofl
  2879  000996  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
  2880  000998  6B70               	clrf	(??___xxtofl+2)& (0+255),b
  2881  00099A  6B71               	clrf	(??___xxtofl+3)& (0+255),b
  2882  00099C  C06E  F071         	movff	??___xxtofl,??___xxtofl+3
  2883  0009A0  6B70               	clrf	(??___xxtofl+2)& (0+255),b
  2884  0009A2  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
  2885  0009A4  6B6E               	clrf	??___xxtofl& (0+255),b
  2886  0009A6  516E               	movf	??___xxtofl& (0+255),w,b
  2887  0009A8  1374               	iorwf	___xxtofl@arg& (0+255),f,b
  2888  0009AA  516F               	movf	(??___xxtofl+1)& (0+255),w,b
  2889  0009AC  1375               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  2890  0009AE  5170               	movf	(??___xxtofl+2)& (0+255),w,b
  2891  0009B0  1376               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  2892  0009B2  5171               	movf	(??___xxtofl+3)& (0+255),w,b
  2893  0009B4  1377               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  2894  0009B6                     
  2895                           ; BSR set to: 0
  2896  0009B6  5172               	movf	___xxtofl@sign& (0+255),w,b
  2897  0009B8  B4D8               	btfsc	status,2,c
  2898  0009BA  EFE1  F004         	goto	u2551
  2899  0009BE  EFE3  F004         	goto	u2550
  2900  0009C2                     u2551:
  2901  0009C2  EFEB  F004         	goto	l2749
  2902  0009C6                     u2550:
  2903  0009C6                     
  2904                           ; BSR set to: 0
  2905  0009C6  BF6D               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  2906  0009C8  EFEA  F004         	goto	u2560
  2907  0009CC  EFE8  F004         	goto	u2561
  2908  0009D0                     u2561:
  2909  0009D0  EFEB  F004         	goto	l2749
  2910  0009D4                     u2560:
  2911  0009D4                     
  2912                           ; BSR set to: 0
  2913  0009D4  8F77               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  2914  0009D6                     l2749:
  2915                           
  2916                           ; BSR set to: 0
  2917  0009D6  C074  F06A         	movff	___xxtofl@arg,?___xxtofl
  2918  0009DA  C075  F06B         	movff	___xxtofl@arg+1,?___xxtofl+1
  2919  0009DE  C076  F06C         	movff	___xxtofl@arg+2,?___xxtofl+2
  2920  0009E2  C077  F06D         	movff	___xxtofl@arg+3,?___xxtofl+3
  2921  0009E6                     l1053:
  2922                           
  2923                           ; BSR set to: 0
  2924  0009E6  0012               	return		;funcret
  2925  0009E8                     __end_of___xxtofl:
  2926                           	callstack 0
  2927                           
  2928 ;; *************** function ___fltol *****************
  2929 ;; Defined at:
  2930 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  f1              4   49[BANK0 ] unsigned char 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  exp1            1   58[BANK0 ] unsigned char 
  2935 ;;  sign1           1   57[BANK0 ] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  4   49[BANK0 ] long 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2945 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;Total ram usage:       10 bytes
  2950 ;; Hardware stack levels used: 1
  2951 ;; Hardware stack levels required when called: 3
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_encoders_get_pos
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text14
  2960  000B76                     __ptext14:
  2961                           	callstack 0
  2962  000B76                     ___fltol:
  2963                           	callstack 25
  2964  000B76  0100               	movlb	0	; () banked
  2965  000B78  3593               	rlcf	(___fltol@f1+2)& (0+255),w,b
  2966  000B7A  3594               	rlcf	(___fltol@f1+3)& (0+255),w,b
  2967  000B7C  6F9A               	movwf	___fltol@exp1& (0+255),b
  2968  000B7E  519A               	movf	___fltol@exp1& (0+255),w,b
  2969  000B80  A4D8               	btfss	status,2,c
  2970  000B82  EFC5  F005         	goto	u2401
  2971  000B86  EFC7  F005         	goto	u2400
  2972  000B8A                     u2401:
  2973  000B8A  EFD1  F005         	goto	l2669
  2974  000B8E                     u2400:
  2975  000B8E                     l2665:
  2976                           
  2977                           ; BSR set to: 0
  2978  000B8E  0E00               	movlw	0
  2979  000B90  6F91               	movwf	?___fltol& (0+255),b
  2980  000B92  0E00               	movlw	0
  2981  000B94  6F92               	movwf	(?___fltol+1)& (0+255),b
  2982  000B96  0E00               	movlw	0
  2983  000B98  6F93               	movwf	(?___fltol+2)& (0+255),b
  2984  000B9A  0E00               	movlw	0
  2985  000B9C  6F94               	movwf	(?___fltol+3)& (0+255),b
  2986  000B9E  EF3E  F006         	goto	l692
  2987  000BA2                     l2669:
  2988                           
  2989                           ; BSR set to: 0
  2990  000BA2  C091  F095         	movff	___fltol@f1,??___fltol
  2991  000BA6  C092  F096         	movff	___fltol@f1+1,??___fltol+1
  2992  000BAA  C093  F097         	movff	___fltol@f1+2,??___fltol+2
  2993  000BAE  C094  F098         	movff	___fltol@f1+3,??___fltol+3
  2994  000BB2  0E20               	movlw	32
  2995  000BB4  EFE1  F005         	goto	u2410
  2996  000BB8                     u2415:
  2997  000BB8  90D8               	bcf	status,0,c
  2998  000BBA  3398               	rrcf	(??___fltol+3)& (0+255),f,b
  2999  000BBC  3397               	rrcf	(??___fltol+2)& (0+255),f,b
  3000  000BBE  3396               	rrcf	(??___fltol+1)& (0+255),f,b
  3001  000BC0  3395               	rrcf	??___fltol& (0+255),f,b
  3002  000BC2                     u2410:
  3003  000BC2  2EE8               	decfsz	wreg,f,c
  3004  000BC4  EFDC  F005         	goto	u2415
  3005  000BC8  5195               	movf	??___fltol& (0+255),w,b
  3006  000BCA  6F99               	movwf	___fltol@sign1& (0+255),b
  3007  000BCC                     
  3008                           ; BSR set to: 0
  3009  000BCC  8F93               	bsf	(___fltol@f1+2)& (0+255),7,b
  3010  000BCE                     
  3011                           ; BSR set to: 0
  3012  000BCE  0EFF               	movlw	255
  3013  000BD0  1791               	andwf	___fltol@f1& (0+255),f,b
  3014  000BD2  0EFF               	movlw	255
  3015  000BD4  1792               	andwf	(___fltol@f1+1)& (0+255),f,b
  3016  000BD6  0EFF               	movlw	255
  3017  000BD8  1793               	andwf	(___fltol@f1+2)& (0+255),f,b
  3018  000BDA  0E00               	movlw	0
  3019  000BDC  1794               	andwf	(___fltol@f1+3)& (0+255),f,b
  3020  000BDE                     
  3021                           ; BSR set to: 0
  3022  000BDE  0E96               	movlw	150
  3023  000BE0  5F9A               	subwf	___fltol@exp1& (0+255),f,b
  3024  000BE2                     
  3025                           ; BSR set to: 0
  3026  000BE2  BF9A               	btfsc	___fltol@exp1& (0+255),7,b
  3027  000BE4  EFF8  F005         	goto	u2420
  3028  000BE8  EFF6  F005         	goto	u2421
  3029  000BEC                     u2421:
  3030  000BEC  EF0E  F006         	goto	l2689
  3031  000BF0                     u2420:
  3032  000BF0                     
  3033                           ; BSR set to: 0
  3034  000BF0  519A               	movf	___fltol@exp1& (0+255),w,b
  3035  000BF2  0A80               	xorlw	128
  3036  000BF4  0F97               	addlw	151
  3037  000BF6  B0D8               	btfsc	status,0,c
  3038  000BF8  EF00  F006         	goto	u2431
  3039  000BFC  EF02  F006         	goto	u2430
  3040  000C00                     u2431:
  3041  000C00  EF04  F006         	goto	l2685
  3042  000C04                     u2430:
  3043  000C04  EFC7  F005         	goto	l2665
  3044  000C08                     l2685:
  3045                           
  3046                           ; BSR set to: 0
  3047  000C08  90D8               	bcf	status,0,c
  3048  000C0A  3394               	rrcf	(___fltol@f1+3)& (0+255),f,b
  3049  000C0C  3393               	rrcf	(___fltol@f1+2)& (0+255),f,b
  3050  000C0E  3392               	rrcf	(___fltol@f1+1)& (0+255),f,b
  3051  000C10  3391               	rrcf	___fltol@f1& (0+255),f,b
  3052  000C12                     
  3053                           ; BSR set to: 0
  3054  000C12  3F9A               	incfsz	___fltol@exp1& (0+255),f,b
  3055  000C14  EF04  F006         	goto	l2685
  3056  000C18  EF26  F006         	goto	l2699
  3057  000C1C                     l2689:
  3058                           
  3059                           ; BSR set to: 0
  3060  000C1C  0E1F               	movlw	31
  3061  000C1E  659A               	cpfsgt	___fltol@exp1& (0+255),b
  3062  000C20  EF14  F006         	goto	u2441
  3063  000C24  EF16  F006         	goto	u2440
  3064  000C28                     u2441:
  3065  000C28  EF1E  F006         	goto	l2697
  3066  000C2C                     u2440:
  3067  000C2C  EFC7  F005         	goto	l2665
  3068  000C30                     l2695:
  3069                           
  3070                           ; BSR set to: 0
  3071  000C30  90D8               	bcf	status,0,c
  3072  000C32  3791               	rlcf	___fltol@f1& (0+255),f,b
  3073  000C34  3792               	rlcf	(___fltol@f1+1)& (0+255),f,b
  3074  000C36  3793               	rlcf	(___fltol@f1+2)& (0+255),f,b
  3075  000C38  3794               	rlcf	(___fltol@f1+3)& (0+255),f,b
  3076  000C3A  079A               	decf	___fltol@exp1& (0+255),f,b
  3077  000C3C                     l2697:
  3078                           
  3079                           ; BSR set to: 0
  3080  000C3C  519A               	movf	___fltol@exp1& (0+255),w,b
  3081  000C3E  A4D8               	btfss	status,2,c
  3082  000C40  EF24  F006         	goto	u2451
  3083  000C44  EF26  F006         	goto	u2450
  3084  000C48                     u2451:
  3085  000C48  EF18  F006         	goto	l2695
  3086  000C4C                     u2450:
  3087  000C4C                     l2699:
  3088                           
  3089                           ; BSR set to: 0
  3090  000C4C  5199               	movf	___fltol@sign1& (0+255),w,b
  3091  000C4E  B4D8               	btfsc	status,2,c
  3092  000C50  EF2C  F006         	goto	u2461
  3093  000C54  EF2E  F006         	goto	u2460
  3094  000C58                     u2461:
  3095  000C58  EF36  F006         	goto	l2703
  3096  000C5C                     u2460:
  3097  000C5C                     
  3098                           ; BSR set to: 0
  3099  000C5C  1F94               	comf	(___fltol@f1+3)& (0+255),f,b
  3100  000C5E  1F93               	comf	(___fltol@f1+2)& (0+255),f,b
  3101  000C60  1F92               	comf	(___fltol@f1+1)& (0+255),f,b
  3102  000C62  6D91               	negf	___fltol@f1& (0+255),b
  3103  000C64  0E00               	movlw	0
  3104  000C66  2392               	addwfc	(___fltol@f1+1)& (0+255),f,b
  3105  000C68  2393               	addwfc	(___fltol@f1+2)& (0+255),f,b
  3106  000C6A  2394               	addwfc	(___fltol@f1+3)& (0+255),f,b
  3107  000C6C                     l2703:
  3108                           
  3109                           ; BSR set to: 0
  3110  000C6C  C091  F091         	movff	___fltol@f1,?___fltol
  3111  000C70  C092  F092         	movff	___fltol@f1+1,?___fltol+1
  3112  000C74  C093  F093         	movff	___fltol@f1+2,?___fltol+2
  3113  000C78  C094  F094         	movff	___fltol@f1+3,?___fltol+3
  3114  000C7C                     l692:
  3115                           
  3116                           ; BSR set to: 0
  3117  000C7C  0012               	return		;funcret
  3118  000C7E                     __end_of___fltol:
  3119                           	callstack 0
  3120                           
  3121 ;; *************** function ___flmul *****************
  3122 ;; Defined at:
  3123 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  b               4   24[BANK0 ] long 
  3126 ;;  a               4   28[BANK0 ] long 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  prod            4   43[BANK0 ] struct .
  3129 ;;  grs             4   38[BANK0 ] unsigned long 
  3130 ;;  temp            2   47[BANK0 ] struct .
  3131 ;;  bexp            1   42[BANK0 ] unsigned char 
  3132 ;;  aexp            1   37[BANK0 ] unsigned char 
  3133 ;;  sign            1   36[BANK0 ] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  4   24[BANK0 ] unsigned char 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0, prodl, prodh
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3143 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;Total ram usage:       25 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 3
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_encoders_get_pos
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text15
  3158  0000AC                     __ptext15:
  3159                           	callstack 0
  3160  0000AC                     ___flmul:
  3161                           	callstack 25
  3162  0000AC  0100               	movlb	0	; () banked
  3163  0000AE  517B               	movf	(___flmul@b+3)& (0+255),w,b
  3164  0000B0  0B80               	andlw	128
  3165  0000B2  6F84               	movwf	___flmul@sign& (0+255),b
  3166  0000B4  517B               	movf	(___flmul@b+3)& (0+255),w,b
  3167  0000B6  257B               	addwf	(___flmul@b+3)& (0+255),w,b
  3168  0000B8  6F8A               	movwf	___flmul@bexp& (0+255),b
  3169  0000BA                     
  3170                           ; BSR set to: 0
  3171  0000BA  AF7A               	btfss	(___flmul@b+2)& (0+255),7,b
  3172  0000BC  EF62  F000         	goto	u2211
  3173  0000C0  EF64  F000         	goto	u2210
  3174  0000C4                     u2211:
  3175  0000C4  EF65  F000         	goto	l2539
  3176  0000C8                     u2210:
  3177  0000C8                     
  3178                           ; BSR set to: 0
  3179  0000C8  818A               	bsf	___flmul@bexp& (0+255),0,b
  3180  0000CA                     l2539:
  3181                           
  3182                           ; BSR set to: 0
  3183  0000CA  518A               	movf	___flmul@bexp& (0+255),w,b
  3184  0000CC  B4D8               	btfsc	status,2,c
  3185  0000CE  EF6B  F000         	goto	u2221
  3186  0000D2  EF6D  F000         	goto	u2220
  3187  0000D6                     u2221:
  3188  0000D6  EF80  F000         	goto	l2547
  3189  0000DA                     u2220:
  3190  0000DA                     
  3191                           ; BSR set to: 0
  3192  0000DA  298A               	incf	___flmul@bexp& (0+255),w,b
  3193  0000DC  A4D8               	btfss	status,2,c
  3194  0000DE  EF73  F000         	goto	u2231
  3195  0000E2  EF75  F000         	goto	u2230
  3196  0000E6                     u2231:
  3197  0000E6  EF7D  F000         	goto	l2545
  3198  0000EA                     u2230:
  3199  0000EA                     
  3200                           ; BSR set to: 0
  3201  0000EA  0E00               	movlw	0
  3202  0000EC  6F78               	movwf	___flmul@b& (0+255),b
  3203  0000EE  0E00               	movlw	0
  3204  0000F0  6F79               	movwf	(___flmul@b+1)& (0+255),b
  3205  0000F2  0E00               	movlw	0
  3206  0000F4  6F7A               	movwf	(___flmul@b+2)& (0+255),b
  3207  0000F6  0E00               	movlw	0
  3208  0000F8  6F7B               	movwf	(___flmul@b+3)& (0+255),b
  3209  0000FA                     l2545:
  3210                           
  3211                           ; BSR set to: 0
  3212  0000FA  8F7A               	bsf	(___flmul@b+2)& (0+255),7,b
  3213  0000FC  EF88  F000         	goto	l2549
  3214  000100                     l2547:
  3215                           
  3216                           ; BSR set to: 0
  3217  000100  0E00               	movlw	0
  3218  000102  6F78               	movwf	___flmul@b& (0+255),b
  3219  000104  0E00               	movlw	0
  3220  000106  6F79               	movwf	(___flmul@b+1)& (0+255),b
  3221  000108  0E00               	movlw	0
  3222  00010A  6F7A               	movwf	(___flmul@b+2)& (0+255),b
  3223  00010C  0E00               	movlw	0
  3224  00010E  6F7B               	movwf	(___flmul@b+3)& (0+255),b
  3225  000110                     l2549:
  3226                           
  3227                           ; BSR set to: 0
  3228  000110  517F               	movf	(___flmul@a+3)& (0+255),w,b
  3229  000112  0B80               	andlw	128
  3230  000114  1B84               	xorwf	___flmul@sign& (0+255),f,b
  3231  000116                     
  3232                           ; BSR set to: 0
  3233  000116  517F               	movf	(___flmul@a+3)& (0+255),w,b
  3234  000118  257F               	addwf	(___flmul@a+3)& (0+255),w,b
  3235  00011A  6F85               	movwf	___flmul@aexp& (0+255),b
  3236  00011C                     
  3237                           ; BSR set to: 0
  3238  00011C  AF7E               	btfss	(___flmul@a+2)& (0+255),7,b
  3239  00011E  EF93  F000         	goto	u2241
  3240  000122  EF95  F000         	goto	u2240
  3241  000126                     u2241:
  3242  000126  EF96  F000         	goto	l2557
  3243  00012A                     u2240:
  3244  00012A                     
  3245                           ; BSR set to: 0
  3246  00012A  8185               	bsf	___flmul@aexp& (0+255),0,b
  3247  00012C                     l2557:
  3248                           
  3249                           ; BSR set to: 0
  3250  00012C  5185               	movf	___flmul@aexp& (0+255),w,b
  3251  00012E  B4D8               	btfsc	status,2,c
  3252  000130  EF9C  F000         	goto	u2251
  3253  000134  EF9E  F000         	goto	u2250
  3254  000138                     u2251:
  3255  000138  EFB1  F000         	goto	l2565
  3256  00013C                     u2250:
  3257  00013C                     
  3258                           ; BSR set to: 0
  3259  00013C  2985               	incf	___flmul@aexp& (0+255),w,b
  3260  00013E  A4D8               	btfss	status,2,c
  3261  000140  EFA4  F000         	goto	u2261
  3262  000144  EFA6  F000         	goto	u2260
  3263  000148                     u2261:
  3264  000148  EFAE  F000         	goto	l2563
  3265  00014C                     u2260:
  3266  00014C                     
  3267                           ; BSR set to: 0
  3268  00014C  0E00               	movlw	0
  3269  00014E  6F7C               	movwf	___flmul@a& (0+255),b
  3270  000150  0E00               	movlw	0
  3271  000152  6F7D               	movwf	(___flmul@a+1)& (0+255),b
  3272  000154  0E00               	movlw	0
  3273  000156  6F7E               	movwf	(___flmul@a+2)& (0+255),b
  3274  000158  0E00               	movlw	0
  3275  00015A  6F7F               	movwf	(___flmul@a+3)& (0+255),b
  3276  00015C                     l2563:
  3277                           
  3278                           ; BSR set to: 0
  3279  00015C  8F7E               	bsf	(___flmul@a+2)& (0+255),7,b
  3280  00015E  EFB9  F000         	goto	l1009
  3281  000162                     l2565:
  3282                           
  3283                           ; BSR set to: 0
  3284  000162  0E00               	movlw	0
  3285  000164  6F7C               	movwf	___flmul@a& (0+255),b
  3286  000166  0E00               	movlw	0
  3287  000168  6F7D               	movwf	(___flmul@a+1)& (0+255),b
  3288  00016A  0E00               	movlw	0
  3289  00016C  6F7E               	movwf	(___flmul@a+2)& (0+255),b
  3290  00016E  0E00               	movlw	0
  3291  000170  6F7F               	movwf	(___flmul@a+3)& (0+255),b
  3292  000172                     l1009:
  3293                           
  3294                           ; BSR set to: 0
  3295  000172  5185               	movf	___flmul@aexp& (0+255),w,b
  3296  000174  B4D8               	btfsc	status,2,c
  3297  000176  EFBF  F000         	goto	u2271
  3298  00017A  EFC1  F000         	goto	u2270
  3299  00017E                     u2271:
  3300  00017E  EFC9  F000         	goto	l2569
  3301  000182                     u2270:
  3302  000182                     
  3303                           ; BSR set to: 0
  3304  000182  518A               	movf	___flmul@bexp& (0+255),w,b
  3305  000184  A4D8               	btfss	status,2,c
  3306  000186  EFC7  F000         	goto	u2281
  3307  00018A  EFC9  F000         	goto	u2280
  3308  00018E                     u2281:
  3309  00018E  EFD3  F000         	goto	l2573
  3310  000192                     u2280:
  3311  000192                     l2569:
  3312                           
  3313                           ; BSR set to: 0
  3314  000192  0E00               	movlw	0
  3315  000194  6F78               	movwf	?___flmul& (0+255),b
  3316  000196  0E00               	movlw	0
  3317  000198  6F79               	movwf	(?___flmul+1)& (0+255),b
  3318  00019A  0E00               	movlw	0
  3319  00019C  6F7A               	movwf	(?___flmul+2)& (0+255),b
  3320  00019E  0E00               	movlw	0
  3321  0001A0  6F7B               	movwf	(?___flmul+3)& (0+255),b
  3322  0001A2  EF7D  F002         	goto	l1013
  3323  0001A6                     l2573:
  3324                           
  3325                           ; BSR set to: 0
  3326  0001A6  517E               	movf	(___flmul@a+2)& (0+255),w,b
  3327  0001A8  0378               	mulwf	___flmul@b& (0+255),b
  3328  0001AA  006F FFCC  F08F    	movff	prodl,___flmul@temp
  3329  0001B0  006F FFD0  F090    	movff	prodh,___flmul@temp+1
  3330  0001B6                     
  3331                           ; BSR set to: 0
  3332  0001B6  518F               	movf	___flmul@temp& (0+255),w,b
  3333  0001B8  6F86               	movwf	___flmul@grs& (0+255),b
  3334  0001BA  6B87               	clrf	(___flmul@grs+1)& (0+255),b
  3335  0001BC  6B88               	clrf	(___flmul@grs+2)& (0+255),b
  3336  0001BE  6B89               	clrf	(___flmul@grs+3)& (0+255),b
  3337  0001C0                     
  3338                           ; BSR set to: 0
  3339  0001C0  5190               	movf	(___flmul@temp+1)& (0+255),w,b
  3340  0001C2  6F8B               	movwf	___flmul@prod& (0+255),b
  3341  0001C4  6B8C               	clrf	(___flmul@prod+1)& (0+255),b
  3342  0001C6  6B8D               	clrf	(___flmul@prod+2)& (0+255),b
  3343  0001C8  6B8E               	clrf	(___flmul@prod+3)& (0+255),b
  3344  0001CA  517D               	movf	(___flmul@a+1)& (0+255),w,b
  3345  0001CC  0379               	mulwf	(___flmul@b+1)& (0+255),b
  3346  0001CE  006F FFCC  F08F    	movff	prodl,___flmul@temp
  3347  0001D4  006F FFD0  F090    	movff	prodh,___flmul@temp+1
  3348  0001DA                     
  3349                           ; BSR set to: 0
  3350  0001DA  518F               	movf	___flmul@temp& (0+255),w,b
  3351  0001DC  2786               	addwf	___flmul@grs& (0+255),f,b
  3352  0001DE  0E00               	movlw	0
  3353  0001E0  2387               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3354  0001E2  2388               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3355  0001E4  2389               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3356  0001E6                     
  3357                           ; BSR set to: 0
  3358  0001E6  5190               	movf	(___flmul@temp+1)& (0+255),w,b
  3359  0001E8  278B               	addwf	___flmul@prod& (0+255),f,b
  3360  0001EA  0E00               	movlw	0
  3361  0001EC  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3362  0001EE  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3363  0001F0  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3364  0001F2  517C               	movf	___flmul@a& (0+255),w,b
  3365  0001F4  037A               	mulwf	(___flmul@b+2)& (0+255),b
  3366  0001F6  006F FFCC  F08F    	movff	prodl,___flmul@temp
  3367  0001FC  006F FFD0  F090    	movff	prodh,___flmul@temp+1
  3368  000202                     
  3369                           ; BSR set to: 0
  3370  000202  518F               	movf	___flmul@temp& (0+255),w,b
  3371  000204  2786               	addwf	___flmul@grs& (0+255),f,b
  3372  000206  0E00               	movlw	0
  3373  000208  2387               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3374  00020A  2388               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3375  00020C  2389               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3376  00020E                     
  3377                           ; BSR set to: 0
  3378  00020E  5190               	movf	(___flmul@temp+1)& (0+255),w,b
  3379  000210  278B               	addwf	___flmul@prod& (0+255),f,b
  3380  000212  0E00               	movlw	0
  3381  000214  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3382  000216  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3383  000218  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3384  00021A                     
  3385                           ; BSR set to: 0
  3386  00021A  C088  F089         	movff	___flmul@grs+2,___flmul@grs+3
  3387  00021E  C087  F088         	movff	___flmul@grs+1,___flmul@grs+2
  3388  000222  C086  F087         	movff	___flmul@grs,___flmul@grs+1
  3389  000226  6B86               	clrf	___flmul@grs& (0+255),b
  3390  000228                     
  3391                           ; BSR set to: 0
  3392  000228  517C               	movf	___flmul@a& (0+255),w,b
  3393  00022A  0379               	mulwf	(___flmul@b+1)& (0+255),b
  3394  00022C  006F FFCC  F08F    	movff	prodl,___flmul@temp
  3395  000232  006F FFD0  F090    	movff	prodh,___flmul@temp+1
  3396  000238                     
  3397                           ; BSR set to: 0
  3398  000238  518F               	movf	___flmul@temp& (0+255),w,b
  3399  00023A  2786               	addwf	___flmul@grs& (0+255),f,b
  3400  00023C  5190               	movf	(___flmul@temp+1)& (0+255),w,b
  3401  00023E  2387               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3402  000240  0E00               	movlw	0
  3403  000242  2388               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3404  000244  0E00               	movlw	0
  3405  000246  2389               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3406  000248                     
  3407                           ; BSR set to: 0
  3408  000248  517D               	movf	(___flmul@a+1)& (0+255),w,b
  3409  00024A  0378               	mulwf	___flmul@b& (0+255),b
  3410  00024C  006F FFCC  F08F    	movff	prodl,___flmul@temp
  3411  000252  006F FFD0  F090    	movff	prodh,___flmul@temp+1
  3412  000258                     
  3413                           ; BSR set to: 0
  3414  000258  518F               	movf	___flmul@temp& (0+255),w,b
  3415  00025A  2786               	addwf	___flmul@grs& (0+255),f,b
  3416  00025C  5190               	movf	(___flmul@temp+1)& (0+255),w,b
  3417  00025E  2387               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3418  000260  0E00               	movlw	0
  3419  000262  2388               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3420  000264  0E00               	movlw	0
  3421  000266  2389               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3422  000268                     
  3423                           ; BSR set to: 0
  3424  000268  C088  F089         	movff	___flmul@grs+2,___flmul@grs+3
  3425  00026C  C087  F088         	movff	___flmul@grs+1,___flmul@grs+2
  3426  000270  C086  F087         	movff	___flmul@grs,___flmul@grs+1
  3427  000274  6B86               	clrf	___flmul@grs& (0+255),b
  3428  000276  517C               	movf	___flmul@a& (0+255),w,b
  3429  000278  0378               	mulwf	___flmul@b& (0+255),b
  3430  00027A  006F FFCC  F08F    	movff	prodl,___flmul@temp
  3431  000280  006F FFD0  F090    	movff	prodh,___flmul@temp+1
  3432  000286                     
  3433                           ; BSR set to: 0
  3434  000286  518F               	movf	___flmul@temp& (0+255),w,b
  3435  000288  2786               	addwf	___flmul@grs& (0+255),f,b
  3436  00028A  5190               	movf	(___flmul@temp+1)& (0+255),w,b
  3437  00028C  2387               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3438  00028E  0E00               	movlw	0
  3439  000290  2388               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3440  000292  0E00               	movlw	0
  3441  000294  2389               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3442  000296                     
  3443                           ; BSR set to: 0
  3444  000296  517E               	movf	(___flmul@a+2)& (0+255),w,b
  3445  000298  0379               	mulwf	(___flmul@b+1)& (0+255),b
  3446  00029A  006F FFCC  F08F    	movff	prodl,___flmul@temp
  3447  0002A0  006F FFD0  F090    	movff	prodh,___flmul@temp+1
  3448  0002A6  518F               	movf	___flmul@temp& (0+255),w,b
  3449  0002A8  278B               	addwf	___flmul@prod& (0+255),f,b
  3450  0002AA  5190               	movf	(___flmul@temp+1)& (0+255),w,b
  3451  0002AC  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3452  0002AE  0E00               	movlw	0
  3453  0002B0  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3454  0002B2  0E00               	movlw	0
  3455  0002B4  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3456  0002B6                     
  3457                           ; BSR set to: 0
  3458  0002B6  517D               	movf	(___flmul@a+1)& (0+255),w,b
  3459  0002B8  037A               	mulwf	(___flmul@b+2)& (0+255),b
  3460  0002BA  006F FFCC  F08F    	movff	prodl,___flmul@temp
  3461  0002C0  006F FFD0  F090    	movff	prodh,___flmul@temp+1
  3462  0002C6                     
  3463                           ; BSR set to: 0
  3464  0002C6  518F               	movf	___flmul@temp& (0+255),w,b
  3465  0002C8  278B               	addwf	___flmul@prod& (0+255),f,b
  3466  0002CA  5190               	movf	(___flmul@temp+1)& (0+255),w,b
  3467  0002CC  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3468  0002CE  0E00               	movlw	0
  3469  0002D0  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3470  0002D2  0E00               	movlw	0
  3471  0002D4  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3472  0002D6  517E               	movf	(___flmul@a+2)& (0+255),w,b
  3473  0002D8  037A               	mulwf	(___flmul@b+2)& (0+255),b
  3474  0002DA  006F FFCC  F08F    	movff	prodl,___flmul@temp
  3475  0002E0  006F FFD0  F090    	movff	prodh,___flmul@temp+1
  3476  0002E6                     
  3477                           ; BSR set to: 0
  3478  0002E6  518F               	movf	___flmul@temp& (0+255),w,b
  3479  0002E8  6F80               	movwf	??___flmul& (0+255),b
  3480  0002EA  5190               	movf	(___flmul@temp+1)& (0+255),w,b
  3481  0002EC  6F81               	movwf	(??___flmul+1)& (0+255),b
  3482  0002EE  6B82               	clrf	(??___flmul+2)& (0+255),b
  3483  0002F0  6B83               	clrf	(??___flmul+3)& (0+255),b
  3484  0002F2  C082  F083         	movff	??___flmul+2,??___flmul+3
  3485  0002F6  C081  F082         	movff	??___flmul+1,??___flmul+2
  3486  0002FA  C080  F081         	movff	??___flmul,??___flmul+1
  3487  0002FE  6B80               	clrf	??___flmul& (0+255),b
  3488  000300  5180               	movf	??___flmul& (0+255),w,b
  3489  000302  278B               	addwf	___flmul@prod& (0+255),f,b
  3490  000304  5181               	movf	(??___flmul+1)& (0+255),w,b
  3491  000306  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3492  000308  5182               	movf	(??___flmul+2)& (0+255),w,b
  3493  00030A  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3494  00030C  5183               	movf	(??___flmul+3)& (0+255),w,b
  3495  00030E  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3496  000310                     
  3497                           ; BSR set to: 0
  3498  000310  C086  F080         	movff	___flmul@grs,??___flmul
  3499  000314  C087  F081         	movff	___flmul@grs+1,??___flmul+1
  3500  000318  C088  F082         	movff	___flmul@grs+2,??___flmul+2
  3501  00031C  C089  F083         	movff	___flmul@grs+3,??___flmul+3
  3502  000320  0E19               	movlw	25
  3503  000322  EF98  F001         	goto	u2290
  3504  000326                     u2295:
  3505  000326  90D8               	bcf	status,0,c
  3506  000328  3383               	rrcf	(??___flmul+3)& (0+255),f,b
  3507  00032A  3382               	rrcf	(??___flmul+2)& (0+255),f,b
  3508  00032C  3381               	rrcf	(??___flmul+1)& (0+255),f,b
  3509  00032E  3380               	rrcf	??___flmul& (0+255),f,b
  3510  000330                     u2290:
  3511  000330  2EE8               	decfsz	wreg,f,c
  3512  000332  EF93  F001         	goto	u2295
  3513  000336  5180               	movf	??___flmul& (0+255),w,b
  3514  000338  278B               	addwf	___flmul@prod& (0+255),f,b
  3515  00033A  5181               	movf	(??___flmul+1)& (0+255),w,b
  3516  00033C  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3517  00033E  5182               	movf	(??___flmul+2)& (0+255),w,b
  3518  000340  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3519  000342  5183               	movf	(??___flmul+3)& (0+255),w,b
  3520  000344  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3521  000346                     
  3522                           ; BSR set to: 0
  3523  000346  C088  F089         	movff	___flmul@grs+2,___flmul@grs+3
  3524  00034A  C087  F088         	movff	___flmul@grs+1,___flmul@grs+2
  3525  00034E  C086  F087         	movff	___flmul@grs,___flmul@grs+1
  3526  000352  6B86               	clrf	___flmul@grs& (0+255),b
  3527  000354                     
  3528                           ; BSR set to: 0
  3529  000354  5185               	movf	___flmul@aexp& (0+255),w,b
  3530  000356  C08A  F080         	movff	___flmul@bexp,??___flmul
  3531  00035A  6B81               	clrf	(??___flmul+1)& (0+255),b
  3532  00035C  2780               	addwf	??___flmul& (0+255),f,b
  3533  00035E  0E00               	movlw	0
  3534  000360  2381               	addwfc	(??___flmul+1)& (0+255),f,b
  3535  000362  0E82               	movlw	130
  3536  000364  2580               	addwf	??___flmul& (0+255),w,b
  3537  000366  6F8F               	movwf	___flmul@temp& (0+255),b
  3538  000368  0EFF               	movlw	255
  3539  00036A  2181               	addwfc	(??___flmul+1)& (0+255),w,b
  3540  00036C  6F90               	movwf	(___flmul@temp+1)& (0+255),b
  3541  00036E  EFCE  F001         	goto	l2621
  3542  000372                     l2615:
  3543                           
  3544                           ; BSR set to: 0
  3545  000372  90D8               	bcf	status,0,c
  3546  000374  378B               	rlcf	___flmul@prod& (0+255),f,b
  3547  000376  378C               	rlcf	(___flmul@prod+1)& (0+255),f,b
  3548  000378  378D               	rlcf	(___flmul@prod+2)& (0+255),f,b
  3549  00037A  378E               	rlcf	(___flmul@prod+3)& (0+255),f,b
  3550  00037C                     
  3551                           ; BSR set to: 0
  3552  00037C  AF89               	btfss	(___flmul@grs+3)& (0+255),7,b
  3553  00037E  EFC3  F001         	goto	u2301
  3554  000382  EFC5  F001         	goto	u2300
  3555  000386                     u2301:
  3556  000386  EFC6  F001         	goto	l1016
  3557  00038A                     u2300:
  3558  00038A                     
  3559                           ; BSR set to: 0
  3560  00038A  818B               	bsf	___flmul@prod& (0+255),0,b
  3561  00038C                     l1016:
  3562                           
  3563                           ; BSR set to: 0
  3564  00038C  90D8               	bcf	status,0,c
  3565  00038E  3786               	rlcf	___flmul@grs& (0+255),f,b
  3566  000390  3787               	rlcf	(___flmul@grs+1)& (0+255),f,b
  3567  000392  3788               	rlcf	(___flmul@grs+2)& (0+255),f,b
  3568  000394  3789               	rlcf	(___flmul@grs+3)& (0+255),f,b
  3569  000396  078F               	decf	___flmul@temp& (0+255),f,b
  3570  000398  A0D8               	btfss	status,0,c
  3571  00039A  0790               	decf	(___flmul@temp+1)& (0+255),f,b
  3572  00039C                     l2621:
  3573                           
  3574                           ; BSR set to: 0
  3575  00039C  AF8D               	btfss	(___flmul@prod+2)& (0+255),7,b
  3576  00039E  EFD3  F001         	goto	u2311
  3577  0003A2  EFD5  F001         	goto	u2310
  3578  0003A6                     u2311:
  3579  0003A6  EFB9  F001         	goto	l2615
  3580  0003AA                     u2310:
  3581  0003AA                     
  3582                           ; BSR set to: 0
  3583  0003AA  0E00               	movlw	0
  3584  0003AC  6F85               	movwf	___flmul@aexp& (0+255),b
  3585  0003AE                     
  3586                           ; BSR set to: 0
  3587  0003AE  AF89               	btfss	(___flmul@grs+3)& (0+255),7,b
  3588  0003B0  EFDC  F001         	goto	u2321
  3589  0003B4  EFDE  F001         	goto	u2320
  3590  0003B8                     u2321:
  3591  0003B8  EF02  F002         	goto	l1018
  3592  0003BC                     u2320:
  3593  0003BC                     
  3594                           ; BSR set to: 0
  3595  0003BC  0EFF               	movlw	255
  3596  0003BE  1586               	andwf	___flmul@grs& (0+255),w,b
  3597  0003C0  6F80               	movwf	??___flmul& (0+255),b
  3598  0003C2  0EFF               	movlw	255
  3599  0003C4  1587               	andwf	(___flmul@grs+1)& (0+255),w,b
  3600  0003C6  6F81               	movwf	(??___flmul+1)& (0+255),b
  3601  0003C8  0EFF               	movlw	255
  3602  0003CA  1588               	andwf	(___flmul@grs+2)& (0+255),w,b
  3603  0003CC  6F82               	movwf	(??___flmul+2)& (0+255),b
  3604  0003CE  0E7F               	movlw	127
  3605  0003D0  1589               	andwf	(___flmul@grs+3)& (0+255),w,b
  3606  0003D2  6F83               	movwf	(??___flmul+3)& (0+255),b
  3607  0003D4  5180               	movf	??___flmul& (0+255),w,b
  3608  0003D6  1181               	iorwf	(??___flmul+1)& (0+255),w,b
  3609  0003D8  1182               	iorwf	(??___flmul+2)& (0+255),w,b
  3610  0003DA  1183               	iorwf	(??___flmul+3)& (0+255),w,b
  3611  0003DC  B4D8               	btfsc	status,2,c
  3612  0003DE  EFF3  F001         	goto	u2331
  3613  0003E2  EFF5  F001         	goto	u2330
  3614  0003E6                     u2331:
  3615  0003E6  EFF9  F001         	goto	l1019
  3616  0003EA                     u2330:
  3617  0003EA                     l2629:
  3618                           
  3619                           ; BSR set to: 0
  3620  0003EA  0E01               	movlw	1
  3621  0003EC  6F85               	movwf	___flmul@aexp& (0+255),b
  3622  0003EE  EF02  F002         	goto	l1018
  3623  0003F2                     l1019:
  3624                           
  3625                           ; BSR set to: 0
  3626  0003F2  A18B               	btfss	___flmul@prod& (0+255),0,b
  3627  0003F4  EFFE  F001         	goto	u2341
  3628  0003F8  EF00  F002         	goto	u2340
  3629  0003FC                     u2341:
  3630  0003FC  EF02  F002         	goto	l1018
  3631  000400                     u2340:
  3632  000400  EFF5  F001         	goto	l2629
  3633  000404                     l1018:
  3634                           
  3635                           ; BSR set to: 0
  3636  000404  5185               	movf	___flmul@aexp& (0+255),w,b
  3637  000406  B4D8               	btfsc	status,2,c
  3638  000408  EF08  F002         	goto	u2351
  3639  00040C  EF0A  F002         	goto	u2350
  3640  000410                     u2351:
  3641  000410  EF2E  F002         	goto	l2641
  3642  000414                     u2350:
  3643  000414                     
  3644                           ; BSR set to: 0
  3645  000414  0E01               	movlw	1
  3646  000416  278B               	addwf	___flmul@prod& (0+255),f,b
  3647  000418  0E00               	movlw	0
  3648  00041A  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3649  00041C  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3650  00041E  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3651  000420                     
  3652                           ; BSR set to: 0
  3653  000420  A18E               	btfss	(___flmul@prod+3)& (0+255),0,b
  3654  000422  EF15  F002         	goto	u2361
  3655  000426  EF17  F002         	goto	u2360
  3656  00042A                     u2361:
  3657  00042A  EF2E  F002         	goto	l2641
  3658  00042E                     u2360:
  3659  00042E                     
  3660                           ; BSR set to: 0
  3661  00042E  C08B  F080         	movff	___flmul@prod,??___flmul
  3662  000432  C08C  F081         	movff	___flmul@prod+1,??___flmul+1
  3663  000436  C08D  F082         	movff	___flmul@prod+2,??___flmul+2
  3664  00043A  C08E  F083         	movff	___flmul@prod+3,??___flmul+3
  3665  00043E  3583               	rlcf	(??___flmul+3)& (0+255),w,b
  3666  000440  3383               	rrcf	(??___flmul+3)& (0+255),f,b
  3667  000442  3382               	rrcf	(??___flmul+2)& (0+255),f,b
  3668  000444  3381               	rrcf	(??___flmul+1)& (0+255),f,b
  3669  000446  3380               	rrcf	??___flmul& (0+255),f,b
  3670  000448  C080  F08B         	movff	??___flmul,___flmul@prod
  3671  00044C  C081  F08C         	movff	??___flmul+1,___flmul@prod+1
  3672  000450  C082  F08D         	movff	??___flmul+2,___flmul@prod+2
  3673  000454  C083  F08E         	movff	??___flmul+3,___flmul@prod+3
  3674  000458                     
  3675                           ; BSR set to: 0
  3676  000458  4B8F               	infsnz	___flmul@temp& (0+255),f,b
  3677  00045A  2B90               	incf	(___flmul@temp+1)& (0+255),f,b
  3678  00045C                     l2641:
  3679                           
  3680                           ; BSR set to: 0
  3681  00045C  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
  3682  00045E  EF39  F002         	goto	u2371
  3683  000462  5190               	movf	(___flmul@temp+1)& (0+255),w,b
  3684  000464  E108               	bnz	u2370
  3685  000466  298F               	incf	___flmul@temp& (0+255),w,b
  3686  000468  A0D8               	btfss	status,0,c
  3687  00046A  EF39  F002         	goto	u2371
  3688  00046E  EF3B  F002         	goto	u2370
  3689  000472                     u2371:
  3690  000472  EF45  F002         	goto	l2645
  3691  000476                     u2370:
  3692  000476                     
  3693                           ; BSR set to: 0
  3694  000476  0E00               	movlw	0
  3695  000478  6F8B               	movwf	___flmul@prod& (0+255),b
  3696  00047A  0E00               	movlw	0
  3697  00047C  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
  3698  00047E  0E80               	movlw	128
  3699  000480  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
  3700  000482  0E7F               	movlw	127
  3701  000484  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
  3702  000486  EF73  F002         	goto	l2657
  3703  00048A                     l2645:
  3704                           
  3705                           ; BSR set to: 0
  3706  00048A  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
  3707  00048C  EF52  F002         	goto	u2380
  3708  000490  5190               	movf	(___flmul@temp+1)& (0+255),w,b
  3709  000492  E106               	bnz	u2381
  3710  000494  058F               	decf	___flmul@temp& (0+255),w,b
  3711  000496  B0D8               	btfsc	status,0,c
  3712  000498  EF50  F002         	goto	u2381
  3713  00049C  EF52  F002         	goto	u2380
  3714  0004A0                     u2381:
  3715  0004A0  EF5E  F002         	goto	l1026
  3716  0004A4                     u2380:
  3717  0004A4                     
  3718                           ; BSR set to: 0
  3719  0004A4  0E00               	movlw	0
  3720  0004A6  6F8B               	movwf	___flmul@prod& (0+255),b
  3721  0004A8  0E00               	movlw	0
  3722  0004AA  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
  3723  0004AC  0E00               	movlw	0
  3724  0004AE  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
  3725  0004B0  0E00               	movlw	0
  3726  0004B2  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
  3727  0004B4  0E00               	movlw	0
  3728  0004B6  6F84               	movwf	___flmul@sign& (0+255),b
  3729  0004B8  EF73  F002         	goto	l2657
  3730  0004BC                     l1026:
  3731                           
  3732                           ; BSR set to: 0
  3733  0004BC  C08F  F08A         	movff	___flmul@temp,___flmul@bexp
  3734  0004C0                     
  3735                           ; BSR set to: 0
  3736  0004C0  0EFF               	movlw	255
  3737  0004C2  178B               	andwf	___flmul@prod& (0+255),f,b
  3738  0004C4  0EFF               	movlw	255
  3739  0004C6  178C               	andwf	(___flmul@prod+1)& (0+255),f,b
  3740  0004C8  0E7F               	movlw	127
  3741  0004CA  178D               	andwf	(___flmul@prod+2)& (0+255),f,b
  3742  0004CC  0E00               	movlw	0
  3743  0004CE  178E               	andwf	(___flmul@prod+3)& (0+255),f,b
  3744  0004D0                     
  3745                           ; BSR set to: 0
  3746  0004D0  A18A               	btfss	___flmul@bexp& (0+255),0,b
  3747  0004D2  EF6D  F002         	goto	u2391
  3748  0004D6  EF6F  F002         	goto	u2390
  3749  0004DA                     u2391:
  3750  0004DA  EF70  F002         	goto	l2655
  3751  0004DE                     u2390:
  3752  0004DE                     
  3753                           ; BSR set to: 0
  3754  0004DE  8F8D               	bsf	(___flmul@prod+2)& (0+255),7,b
  3755  0004E0                     l2655:
  3756                           
  3757                           ; BSR set to: 0
  3758  0004E0  90D8               	bcf	status,0,c
  3759  0004E2  318A               	rrcf	___flmul@bexp& (0+255),w,b
  3760  0004E4  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
  3761  0004E6                     l2657:
  3762                           
  3763                           ; BSR set to: 0
  3764  0004E6  5184               	movf	___flmul@sign& (0+255),w,b
  3765  0004E8  138E               	iorwf	(___flmul@prod+3)& (0+255),f,b
  3766  0004EA                     
  3767                           ; BSR set to: 0
  3768  0004EA  C08B  F078         	movff	___flmul@prod,?___flmul
  3769  0004EE  C08C  F079         	movff	___flmul@prod+1,?___flmul+1
  3770  0004F2  C08D  F07A         	movff	___flmul@prod+2,?___flmul+2
  3771  0004F6  C08E  F07B         	movff	___flmul@prod+3,?___flmul+3
  3772  0004FA                     l1013:
  3773                           
  3774                           ; BSR set to: 0
  3775  0004FA  0012               	return		;funcret
  3776  0004FC                     __end_of___flmul:
  3777                           	callstack 0
  3778                           
  3779 ;; *************** function _calc_speed *****************
  3780 ;; Defined at:
  3781 ;;		line 66 in file "motors.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  pos             1    wreg     unsigned char 
  3784 ;;  goal_pos        1   10[BANK0 ] unsigned char 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  pos             1   11[BANK0 ] unsigned char 
  3787 ;;  err             1   12[BANK0 ] char 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      char 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3797 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;Total ram usage:        3 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; Hardware stack levels required when called: 3
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_motor_control
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text16
  3812  001340                     __ptext16:
  3813                           	callstack 0
  3814  001340                     _calc_speed:
  3815                           	callstack 26
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;incstack = 0
  3819                           ;calc_speed@pos stored from wreg
  3820  001340  0100               	movlb	0	; () banked
  3821  001342  6F6B               	movwf	calc_speed@pos& (0+255),b
  3822  001344                     
  3823                           ;motors.c: 67:     int8_t err = (int8_t) pos - (int8_t) goal_pos;
  3824  001344  0100               	movlb	0	; () banked
  3825  001346  516A               	movf	calc_speed@goal_pos& (0+255),w,b
  3826  001348  5D6B               	subwf	calc_speed@pos& (0+255),w,b
  3827  00134A  6F6C               	movwf	calc_speed@err& (0+255),b
  3828                           
  3829                           ;motors.c: 68:     if (err > 5) return -127;
  3830  00134C  516C               	movf	calc_speed@err& (0+255),w,b
  3831  00134E  0A80               	xorlw	128
  3832  001350  0F7A               	addlw	-134
  3833  001352  A0D8               	btfss	status,0,c
  3834  001354  EFAE  F009         	goto	u2711
  3835  001358  EFB0  F009         	goto	u2710
  3836  00135C                     u2711:
  3837  00135C  EFB3  F009         	goto	l2843
  3838  001360                     u2710:
  3839  001360                     
  3840                           ; BSR set to: 0
  3841  001360  0E81               	movlw	129
  3842  001362  EFD8  F009         	goto	l193
  3843  001366                     l2843:
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;motors.c: 69:     if (err < -5) return 127;
  3847  001366  516C               	movf	calc_speed@err& (0+255),w,b
  3848  001368  0A80               	xorlw	128
  3849  00136A  0F85               	addlw	133
  3850  00136C  B0D8               	btfsc	status,0,c
  3851  00136E  EFBB  F009         	goto	u2721
  3852  001372  EFBD  F009         	goto	u2720
  3853  001376                     u2721:
  3854  001376  EFC0  F009         	goto	l2849
  3855  00137A                     u2720:
  3856  00137A                     
  3857                           ; BSR set to: 0
  3858  00137A  0E7F               	movlw	127
  3859  00137C  EFD8  F009         	goto	l193
  3860  001380                     l2849:
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;motors.c: 70:     if (err > 0) return -70;
  3864  001380  516C               	movf	calc_speed@err& (0+255),w,b
  3865  001382  0A80               	xorlw	128
  3866  001384  0F7F               	addlw	-129
  3867  001386  A0D8               	btfss	status,0,c
  3868  001388  EFC8  F009         	goto	u2731
  3869  00138C  EFCA  F009         	goto	u2730
  3870  001390                     u2731:
  3871  001390  EFCD  F009         	goto	l2855
  3872  001394                     u2730:
  3873  001394                     
  3874                           ; BSR set to: 0
  3875  001394  0EBA               	movlw	186
  3876  001396  EFD8  F009         	goto	l193
  3877  00139A                     l2855:
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;motors.c: 71:     if (err < 0) return 70;
  3881  00139A  BF6C               	btfsc	calc_speed@err& (0+255),7,b
  3882  00139C  EFD4  F009         	goto	u2740
  3883  0013A0  EFD2  F009         	goto	u2741
  3884  0013A4                     u2741:
  3885  0013A4  EFD7  F009         	goto	l2861
  3886  0013A8                     u2740:
  3887  0013A8                     
  3888                           ; BSR set to: 0
  3889  0013A8  0E46               	movlw	70
  3890  0013AA  EFD8  F009         	goto	l193
  3891  0013AE                     l2861:
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;motors.c: 72:     return 0;
  3895  0013AE  0E00               	movlw	0
  3896  0013B0                     l193:
  3897                           
  3898                           ; BSR set to: 0
  3899  0013B0  0012               	return		;funcret
  3900  0013B2                     __end_of_calc_speed:
  3901                           	callstack 0
  3902                           
  3903 ;; *************** function _abs *****************
  3904 ;; Defined at:
  3905 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  a               2   10[BANK0 ] int 
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  2   10[BANK0 ] int 
  3912 ;; Registers used:
  3913 ;;		wreg, status,2, status,0
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3919 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;Total ram usage:        4 bytes
  3924 ;; Hardware stack levels used: 1
  3925 ;; Hardware stack levels required when called: 3
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_motor_control
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text17
  3934  0016B0                     __ptext17:
  3935                           	callstack 0
  3936  0016B0                     _abs:
  3937                           	callstack 26
  3938  0016B0  0100               	movlb	0	; () banked
  3939  0016B2  BF6B               	btfsc	(abs@a+1)& (0+255),7,b
  3940  0016B4  EF66  F00B         	goto	u2750
  3941  0016B8  516B               	movf	(abs@a+1)& (0+255),w,b
  3942  0016BA  E106               	bnz	u2751
  3943  0016BC  056A               	decf	abs@a& (0+255),w,b
  3944  0016BE  B0D8               	btfsc	status,0,c
  3945  0016C0  EF64  F00B         	goto	u2751
  3946  0016C4  EF66  F00B         	goto	u2750
  3947  0016C8                     u2751:
  3948  0016C8  EF74  F00B         	goto	l1070
  3949  0016CC                     u2750:
  3950  0016CC                     
  3951                           ; BSR set to: 0
  3952  0016CC  C06A  F06C         	movff	abs@a,??_abs
  3953  0016D0  C06B  F06D         	movff	abs@a+1,??_abs+1
  3954  0016D4  1F6C               	comf	??_abs& (0+255),f,b
  3955  0016D6  1F6D               	comf	(??_abs+1)& (0+255),f,b
  3956  0016D8  4B6C               	infsnz	??_abs& (0+255),f,b
  3957  0016DA  2B6D               	incf	(??_abs+1)& (0+255),f,b
  3958  0016DC  C06C  F06A         	movff	??_abs,?_abs
  3959  0016E0  C06D  F06B         	movff	??_abs+1,?_abs+1
  3960  0016E4  EF78  F00B         	goto	l1073
  3961  0016E8                     l1070:
  3962                           
  3963                           ; BSR set to: 0
  3964  0016E8  C06A  F06A         	movff	abs@a,?_abs
  3965  0016EC  C06B  F06B         	movff	abs@a+1,?_abs+1
  3966  0016F0                     l1073:
  3967                           
  3968                           ; BSR set to: 0
  3969  0016F0  0012               	return		;funcret
  3970  0016F2                     __end_of_abs:
  3971                           	callstack 0
  3972                           
  3973 ;; *************** function _encoders_init *****************
  3974 ;; Defined at:
  3975 ;;		line 9 in file "encoders.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;Total ram usage:        0 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 3
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text18
  4004  0017CC                     __ptext18:
  4005                           	callstack 0
  4006  0017CC                     _encoders_init:
  4007                           	callstack 27
  4008  0017CC                     
  4009                           ;encoders.c: 17:     ANSELA &= ~0b00111111;
  4010  0017CC  0EC0               	movlw	192
  4011  0017CE  013A               	movlb	58	; () banked
  4012  0017D0  1740               	andwf	64,f,b	;volatile
  4013                           
  4014                           ;encoders.c: 18:     WPUA |= 0b00111111;
  4015  0017D2  0E3F               	movlw	63
  4016  0017D4  1341               	iorwf	65,f,b	;volatile
  4017  0017D6                     
  4018                           ; BSR set to: 58
  4019  0017D6  0012               	return		;funcret
  4020  0017D8                     __end_of_encoders_init:
  4021                           	callstack 0
  4022                           
  4023 ;; *************** function _can_txq_push *****************
  4024 ;; Defined at:
  4025 ;;		line 59 in file "libcan/can.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  id              2   21[BANK0 ] const unsigned short 
  4028 ;;  len             1   23[BANK0 ] const unsigned char 
  4029 ;;  data            2   24[BANK0 ] PTR const unsigned char 
  4030 ;;		 -> hb(3), fuel_press.status(4), ox_main.status(4), fuel_press(9), 
  4031 ;;		 -> ox_main(9), 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      unsigned char 
  4036 ;; Registers used:
  4037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4043 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;Total ram usage:       11 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; Hardware stack levels required when called: 4
  4050 ;; This function calls:
  4051 ;;		_memcpy
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text19
  4058  000D60                     __ptext19:
  4059                           	callstack 0
  4060  000D60                     _can_txq_push:
  4061                           	callstack 26
  4062  000D60                     
  4063                           ;libcan/can.c: 60:     PIE5bits.TXB0IE=0;
  4064  000D60  0139               	movlb	57	; () banked
  4065  000D62  9595               	bcf	149,2,b	;volatile
  4066  000D64                     
  4067                           ; BSR set to: 57
  4068                           ;libcan/can.c: 62:     if(txq_head == txq_tail - 1) {
  4069  000D64  0100               	movlb	0	; () banked
  4070  000D66  51CC               	movf	_txq_head& (0+255),w,b	;volatile
  4071  000D68  6F7A               	movwf	??_can_txq_push& (0+255),b
  4072  000D6A  6B7B               	clrf	(??_can_txq_push+1)& (0+255),b
  4073  000D6C  0EFF               	movlw	255
  4074  000D6E  6F7C               	movwf	(??_can_txq_push+2)& (0+255),b
  4075  000D70  0EFF               	movlw	255
  4076  000D72  6F7D               	movwf	(??_can_txq_push+3)& (0+255),b
  4077  000D74  51CB               	movf	_txq_tail& (0+255),w,b	;volatile
  4078  000D76  6F7E               	movwf	(??_can_txq_push+4)& (0+255),b
  4079  000D78  6B7F               	clrf	(??_can_txq_push+5)& (0+255),b
  4080  000D7A  517C               	movf	(??_can_txq_push+2)& (0+255),w,b
  4081  000D7C  277E               	addwf	(??_can_txq_push+4)& (0+255),f,b
  4082  000D7E  517D               	movf	(??_can_txq_push+3)& (0+255),w,b
  4083  000D80  237F               	addwfc	(??_can_txq_push+5)& (0+255),f,b
  4084  000D82  517A               	movf	??_can_txq_push& (0+255),w,b
  4085  000D84  197E               	xorwf	(??_can_txq_push+4)& (0+255),w,b
  4086  000D86  E107               	bnz	u3031
  4087  000D88  517B               	movf	(??_can_txq_push+1)& (0+255),w,b
  4088  000D8A  197F               	xorwf	(??_can_txq_push+5)& (0+255),w,b
  4089  000D8C  A4D8               	btfss	status,2,c
  4090  000D8E  EFCB  F006         	goto	u3031
  4091  000D92  EFCD  F006         	goto	u3030
  4092  000D96                     u3031:
  4093  000D96  EFCF  F006         	goto	l2977
  4094  000D9A                     u3030:
  4095  000D9A  EF18  F007         	goto	l300
  4096  000D9E                     l2977:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;libcan/can.c: 65:     txq[txq_head].id=id;
  4100  000D9E  51CC               	movf	_txq_head& (0+255),w,b	;volatile
  4101  000DA0  0D0B               	mullw	11
  4102  000DA2  0E40               	movlw	low _txq
  4103  000DA4  24F3               	addwf	243,w,c
  4104  000DA6  6ED9               	movwf	fsr2l,c
  4105  000DA8  0E01               	movlw	high _txq
  4106  000DAA  20F4               	addwfc	prodh,w,c
  4107  000DAC  6EDA               	movwf	fsr2h,c
  4108  000DAE  0060  F1D7  FFDE   	movff	can_txq_push@id,postinc2
  4109  000DB4  0060  F1DB  FFDD   	movff	can_txq_push@id+1,postdec2
  4110                           
  4111                           ;libcan/can.c: 66:     txq[txq_head].len=len;
  4112  000DBA  51CC               	movf	_txq_head& (0+255),w,b	;volatile
  4113  000DBC  0D0B               	mullw	11
  4114  000DBE  0E42               	movlw	low (_txq+2)
  4115  000DC0  24F3               	addwf	243,w,c
  4116  000DC2  6ED9               	movwf	fsr2l,c
  4117  000DC4  0E01               	movlw	high (_txq+2)
  4118  000DC6  20F4               	addwfc	prodh,w,c
  4119  000DC8  6EDA               	movwf	fsr2h,c
  4120  000DCA  0060  F1DF  FFDF   	movff	can_txq_push@len,indf2
  4121  000DD0                     
  4122                           ; BSR set to: 0
  4123                           ;libcan/can.c: 67:     memcpy(txq[txq_head].data, data, len);
  4124  000DD0  51CC               	movf	_txq_head& (0+255),w,b	;volatile
  4125  000DD2  0D0B               	mullw	11
  4126  000DD4  0E43               	movlw	low (_txq+3)
  4127  000DD6  24F3               	addwf	243,w,c
  4128  000DD8  6F6A               	movwf	memcpy@d1& (0+255),b
  4129  000DDA  0E01               	movlw	high (_txq+3)
  4130  000DDC  20F4               	addwfc	prodh,w,c
  4131  000DDE  6F6B               	movwf	(memcpy@d1+1)& (0+255),b
  4132  000DE0  C078  F06C         	movff	can_txq_push@data,memcpy@s1
  4133  000DE4  C079  F06D         	movff	can_txq_push@data+1,memcpy@s1+1
  4134  000DE8  C077  F06E         	movff	can_txq_push@len,memcpy@n
  4135  000DEC  6B6F               	clrf	(memcpy@n+1)& (0+255),b
  4136  000DEE  EC6C  F00A         	call	_memcpy	;wreg free
  4137  000DF2                     
  4138                           ;libcan/can.c: 69:     txq_head++;
  4139  000DF2  0100               	movlb	0	; () banked
  4140  000DF4  2BCC               	incf	_txq_head& (0+255),f,b	;volatile
  4141  000DF6                     
  4142                           ; BSR set to: 0
  4143                           ;libcan/can.c: 70:     if(txq_head >= (uint8_t)8) {
  4144  000DF6  0E07               	movlw	7
  4145  000DF8  65CC               	cpfsgt	_txq_head& (0+255),b	;volatile
  4146  000DFA  EF01  F007         	goto	u3041
  4147  000DFE  EF03  F007         	goto	u3040
  4148  000E02                     u3041:
  4149  000E02  EF05  F007         	goto	l2987
  4150  000E06                     u3040:
  4151  000E06                     
  4152                           ; BSR set to: 0
  4153                           ;libcan/can.c: 71:         txq_head = 0;
  4154  000E06  0E00               	movlw	0
  4155  000E08  6FCC               	movwf	_txq_head& (0+255),b	;volatile
  4156  000E0A                     l2987:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;libcan/can.c: 73:     PIE5bits.TXB0IE=1;
  4160  000E0A  0139               	movlb	57	; () banked
  4161  000E0C  8595               	bsf	149,2,b	;volatile
  4162  000E0E                     
  4163                           ; BSR set to: 57
  4164                           ;libcan/can.c: 79:     if(PIR5bits.TXB0IF == 0 && TXB0CONbits.TXREQ == 0) {
  4165  000E0E  B5A5               	btfsc	165,2,b	;volatile
  4166  000E10  EF0C  F007         	goto	u3051
  4167  000E14  EF0E  F007         	goto	u3050
  4168  000E18                     u3051:
  4169  000E18  EF18  F007         	goto	l300
  4170  000E1C                     u3050:
  4171  000E1C                     
  4172                           ; BSR set to: 57
  4173  000E1C  0137               	movlb	55	; () banked
  4174  000E1E  B7E0               	btfsc	224,3,b	;volatile
  4175  000E20  EF14  F007         	goto	u3061
  4176  000E24  EF16  F007         	goto	u3060
  4177  000E28                     u3061:
  4178  000E28  EF18  F007         	goto	l300
  4179  000E2C                     u3060:
  4180  000E2C                     
  4181                           ; BSR set to: 55
  4182                           ;libcan/can.c: 80:         PIR5bits.TXB0IF = 1;
  4183  000E2C  0139               	movlb	57	; () banked
  4184  000E2E  85A5               	bsf	165,2,b	;volatile
  4185  000E30                     l300:
  4186  000E30  0012               	return		;funcret
  4187  000E32                     __end_of_can_txq_push:
  4188                           	callstack 0
  4189                           
  4190 ;; *************** function _memcpy *****************
  4191 ;; Defined at:
  4192 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memcpy.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  d1              2   10[BANK0 ] PTR void 
  4195 ;;		 -> rx_msg(11), TXB0D0(1), txq(88), 
  4196 ;;  s1              2   12[BANK0 ] PTR const void 
  4197 ;;		 -> RXB0D0(1), txq(88), hb(3), fuel_press.status(4), 
  4198 ;;		 -> ox_main.status(4), fuel_press(9), ox_main(9), 
  4199 ;;  n               2   14[BANK0 ] unsigned int 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  s               2   19[BANK0 ] PTR const unsigned char 
  4202 ;;		 -> RXB0D0(1), txq(88), hb(3), fuel_press.status(4), 
  4203 ;;		 -> ox_main.status(4), fuel_press(9), ox_main(9), 
  4204 ;;  d               2   17[BANK0 ] PTR unsigned char 
  4205 ;;		 -> rx_msg(11), TXB0D0(1), txq(88), 
  4206 ;;  tmp             1   16[BANK0 ] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  2   10[BANK0 ] PTR void 
  4209 ;; Registers used:
  4210 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4216 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;Total ram usage:       11 bytes
  4221 ;; Hardware stack levels used: 1
  4222 ;; Hardware stack levels required when called: 3
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_can_txq_push
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text20
  4231  0014D8                     __ptext20:
  4232                           	callstack 0
  4233  0014D8                     _memcpy:
  4234                           	callstack 26
  4235  0014D8  C06C  F073         	movff	memcpy@s1,memcpy@s
  4236  0014DC  C06D  F074         	movff	memcpy@s1+1,memcpy@s+1
  4237  0014E0  C06A  F071         	movff	memcpy@d1,memcpy@d
  4238  0014E4  C06B  F072         	movff	memcpy@d1+1,memcpy@d+1
  4239  0014E8  EF8B  F00A         	goto	l2879
  4240  0014EC                     l2871:
  4241                           
  4242                           ; BSR set to: 0
  4243  0014EC  0060  F1CF  FFD9   	movff	memcpy@s,fsr2l
  4244  0014F2  0060  F1D3  FFDA   	movff	memcpy@s+1,fsr2h
  4245  0014F8  50DF               	movf	indf2,w,c
  4246  0014FA  6F70               	movwf	memcpy@tmp& (0+255),b
  4247  0014FC                     
  4248                           ; BSR set to: 0
  4249  0014FC  4B73               	infsnz	memcpy@s& (0+255),f,b
  4250  0014FE  2B74               	incf	(memcpy@s+1)& (0+255),f,b
  4251  001500                     
  4252                           ; BSR set to: 0
  4253  001500  0060  F1C7  FFD9   	movff	memcpy@d,fsr2l
  4254  001506  0060  F1CB  FFDA   	movff	memcpy@d+1,fsr2h
  4255  00150C  0060  F1C3  FFDF   	movff	memcpy@tmp,indf2
  4256  001512                     
  4257                           ; BSR set to: 0
  4258  001512  4B71               	infsnz	memcpy@d& (0+255),f,b
  4259  001514  2B72               	incf	(memcpy@d+1)& (0+255),f,b
  4260  001516                     l2879:
  4261  001516  0100               	movlb	0	; () banked
  4262  001518  076E               	decf	memcpy@n& (0+255),f,b
  4263  00151A  A0D8               	btfss	status,0,c
  4264  00151C  076F               	decf	(memcpy@n+1)& (0+255),f,b
  4265  00151E  296E               	incf	memcpy@n& (0+255),w,b
  4266  001520  E106               	bnz	u2761
  4267  001522  296F               	incf	(memcpy@n+1)& (0+255),w,b
  4268  001524  A4D8               	btfss	status,2,c
  4269  001526  EF97  F00A         	goto	u2761
  4270  00152A  EF99  F00A         	goto	u2760
  4271  00152E                     u2761:
  4272  00152E  EF76  F00A         	goto	l2871
  4273  001532                     u2760:
  4274  001532                     
  4275                           ; BSR set to: 0
  4276  001532  0012               	return		;funcret
  4277  001534                     __end_of_memcpy:
  4278                           	callstack 0
  4279                           
  4280 ;; *************** function _can_init *****************
  4281 ;; Defined at:
  4282 ;;		line 11 in file "libcan/can.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;Total ram usage:        0 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; Hardware stack levels required when called: 3
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_main
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text21
  4311  0012CC                     __ptext21:
  4312                           	callstack 0
  4313  0012CC                     _can_init:
  4314                           	callstack 27
  4315  0012CC                     
  4316                           ;libcan/can.c: 13:     ANSELCbits.ANSELC6 = 0;
  4317  0012CC  013A               	movlb	58	; () banked
  4318  0012CE  9D60               	bcf	96,6,b	;volatile
  4319  0012D0                     
  4320                           ; BSR set to: 58
  4321                           ;libcan/can.c: 14:     CANRXPPS = 0b010110;
  4322  0012D0  0E16               	movlw	22
  4323  0012D2  6FED               	movwf	237,b	;volatile
  4324  0012D4                     
  4325                           ; BSR set to: 58
  4326                           ;libcan/can.c: 18:     ANSELCbits.ANSELC7 = 0;
  4327  0012D4  9F60               	bcf	96,7,b	;volatile
  4328  0012D6                     
  4329                           ; BSR set to: 58
  4330                           ;libcan/can.c: 19:     TRISCbits.TRISC7 = 0;
  4331  0012D6  9EC4               	bcf	196,7,c	;volatile
  4332  0012D8                     
  4333                           ; BSR set to: 58
  4334                           ;libcan/can.c: 20:     LATCbits.LATC7 = 1;
  4335  0012D8  8EBC               	bsf	188,7,c	;volatile
  4336                           
  4337                           ;libcan/can.c: 22:     RC7PPS = 0b110011;
  4338  0012DA  0E33               	movlw	51
  4339  0012DC  6F17               	movwf	23,b	;volatile
  4340                           
  4341                           ;libcan/can.c: 25:     CANCONbits.REQOP = 0b100;
  4342  0012DE  508F               	movf	143,w,c	;volatile
  4343  0012E0  0B1F               	andlw	-225
  4344  0012E2  0980               	iorlw	128
  4345  0012E4  6E8F               	movwf	143,c	;volatile
  4346  0012E6                     l2193:
  4347  0012E6  388E               	swapf	142,w,c	;volatile
  4348  0012E8  32E8               	rrcf	wreg,f,c
  4349  0012EA  0B07               	andlw	7
  4350  0012EC  0A04               	xorlw	4
  4351  0012EE  A4D8               	btfss	status,2,c
  4352  0012F0  EF7C  F009         	goto	u1681
  4353  0012F4  EF7E  F009         	goto	u1680
  4354  0012F8                     u1681:
  4355  0012F8  EF73  F009         	goto	l2193
  4356  0012FC                     u1680:
  4357  0012FC                     
  4358                           ;libcan/can.c: 31:     BRGCON3bits.WAKDIS = 1;
  4359  0012FC  0137               	movlb	55	; () banked
  4360  0012FE  8F05               	bsf	5,7,b	;volatile
  4361  001300                     
  4362                           ; BSR set to: 55
  4363                           ;libcan/can.c: 36:     BRGCON1bits.BRP = 0b000011;
  4364  001300  5103               	movf	3,w,b	;volatile
  4365  001302  0BC0               	andlw	-64
  4366  001304  0903               	iorlw	3
  4367  001306  6F03               	movwf	3,b	;volatile
  4368                           
  4369                           ;libcan/can.c: 40:     BRGCON2bits.SEG1PH = 0b011;
  4370  001308  5104               	movf	4,w,b	;volatile
  4371  00130A  0BC7               	andlw	-57
  4372  00130C  0918               	iorlw	24
  4373  00130E  6F04               	movwf	4,b	;volatile
  4374  001310                     
  4375                           ; BSR set to: 55
  4376                           ;libcan/can.c: 41:     BRGCON2bits.SEG2PHTS = 1;
  4377  001310  8F04               	bsf	4,7,b	;volatile
  4378                           
  4379                           ;libcan/can.c: 42:     BRGCON3bits.SEG2PH = 0b001;
  4380  001312  5105               	movf	5,w,b	;volatile
  4381  001314  0BF8               	andlw	-8
  4382  001316  0901               	iorlw	1
  4383  001318  6F05               	movwf	5,b	;volatile
  4384  00131A                     
  4385                           ; BSR set to: 55
  4386                           ;libcan/can.c: 45:     RXB0CONbits.RXM0 = 1;
  4387  00131A  8A80               	bsf	128,5,c	;volatile
  4388  00131C                     
  4389                           ; BSR set to: 55
  4390                           ;libcan/can.c: 46:     RXB0CONbits.RXM1 = 1;
  4391  00131C  8C80               	bsf	128,6,c	;volatile
  4392                           
  4393                           ;libcan/can.c: 51:     CANCONbits.REQOP = 0b000;
  4394  00131E  0E1F               	movlw	-225
  4395  001320  168F               	andwf	143,f,c	;volatile
  4396  001322                     l2203:
  4397  001322  388E               	swapf	142,w,c	;volatile
  4398  001324  32E8               	rrcf	wreg,f,c
  4399  001326  0B07               	andlw	7
  4400  001328  0900               	iorlw	0
  4401  00132A  A4D8               	btfss	status,2,c
  4402  00132C  EF9A  F009         	goto	u1691
  4403  001330  EF9C  F009         	goto	u1690
  4404  001334                     u1691:
  4405  001334  EF91  F009         	goto	l2203
  4406  001338                     u1690:
  4407  001338                     
  4408                           ;libcan/can.c: 55:     PIE5bits.RXB0IE=1;
  4409  001338  0139               	movlb	57	; () banked
  4410  00133A  8195               	bsf	149,0,b	;volatile
  4411                           
  4412                           ;libcan/can.c: 56:     PIE5bits.TXB0IE=1;
  4413  00133C  8595               	bsf	149,2,b	;volatile
  4414  00133E                     
  4415                           ; BSR set to: 57
  4416  00133E  0012               	return		;funcret
  4417  001340                     __end_of_can_init:
  4418                           	callstack 0
  4419                           
  4420 ;; *************** function _RXB0_int *****************
  4421 ;; Defined at:
  4422 ;;		line 110 in file "libcan/can.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;		None
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;		None
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      void 
  4429 ;; Registers used:
  4430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;Total ram usage:        4 bytes
  4441 ;; Hardware stack levels used: 1
  4442 ;; Hardware stack levels required when called: 1
  4443 ;; This function calls:
  4444 ;;		Absolute function
  4445 ;;		_on_can_rx
  4446 ;;		i2_memcpy
  4447 ;; This function is called by:
  4448 ;;		Interrupt level 2
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text22
  4453  0011B8                     __ptext22:
  4454                           	callstack 0
  4455  0011B8                     _RXB0_int:
  4456                           	callstack 26
  4457  0011B8                     
  4458                           ;libcan/can.c: 111:     PIR5bits.RXB0IF = 0;
  4459  0011B8  0139               	movlb	57	; () banked
  4460  0011BA  91A5               	bcf	165,0,b	;volatile
  4461  0011BC                     
  4462                           ; BSR set to: 57
  4463                           ;libcan/can.c: 115:     rx_msg.id = (((uint16_t)RXB0SIDH) << 3) | (RXB0SIDL >> 5);
  4464  0011BC  006F FE08  F00C    	movff	16258,??_RXB0_int	;volatile
  4465  0011C2  0E05               	movlw	5
  4466  0011C4  6E0D               	movwf	(??_RXB0_int+1)^0,c
  4467  0011C6                     i2u211_45:
  4468  0011C6  90D8               	bcf	status,0,c
  4469  0011C8  320C               	rrcf	??_RXB0_int^0,f,c
  4470  0011CA  2E0D               	decfsz	(??_RXB0_int+1)^0,f,c
  4471  0011CC  EFE3  F008         	goto	i2u211_45
  4472  0011D0  500C               	movf	??_RXB0_int^0,w,c
  4473  0011D2  006F FE04  F00E    	movff	16257,??_RXB0_int+2	;volatile
  4474  0011D8  6A0F               	clrf	(??_RXB0_int+3)^0,c
  4475  0011DA  90D8               	bcf	status,0,c
  4476  0011DC  360E               	rlcf	(??_RXB0_int+2)^0,f,c
  4477  0011DE  360F               	rlcf	(??_RXB0_int+3)^0,f,c
  4478  0011E0  90D8               	bcf	status,0,c
  4479  0011E2  360E               	rlcf	(??_RXB0_int+2)^0,f,c
  4480  0011E4  360F               	rlcf	(??_RXB0_int+3)^0,f,c
  4481  0011E6  90D8               	bcf	status,0,c
  4482  0011E8  360E               	rlcf	(??_RXB0_int+2)^0,f,c
  4483  0011EA  360F               	rlcf	(??_RXB0_int+3)^0,f,c
  4484  0011EC  100E               	iorwf	(??_RXB0_int+2)^0,w,c
  4485  0011EE  0100               	movlb	0	; () banked
  4486  0011F0  6FCE               	movwf	_rx_msg& (0+255),b
  4487  0011F2  500F               	movf	(??_RXB0_int+3)^0,w,c
  4488  0011F4  6FCF               	movwf	(_rx_msg+1)& (0+255),b
  4489                           
  4490                           ;libcan/can.c: 116:     rx_msg.len = RXB0DLCbits.DLC;
  4491  0011F6  5085               	movf	133,w,c	;volatile
  4492  0011F8  0B0F               	andlw	15
  4493  0011FA  6FD0               	movwf	(_rx_msg+2)& (0+255),b
  4494  0011FC                     
  4495                           ; BSR set to: 0
  4496                           ;libcan/can.c: 118:     memcpy((void *)rx_msg.data, (const void *)&RXB0D0, rx_msg.len);
  4497  0011FC  0ED1               	movlw	low (_rx_msg+3)
  4498  0011FE  6E10               	movwf	i2memcpy@d1^0,c
  4499  001200  0E00               	movlw	high (_rx_msg+3)
  4500  001202  6E11               	movwf	(i2memcpy@d1+1)^0,c
  4501  001204  0E86               	movlw	134
  4502  001206  6E12               	movwf	i2memcpy@s1^0,c
  4503  001208  0E3F               	movlw	63
  4504  00120A  6E13               	movwf	(i2memcpy@s1+1)^0,c
  4505  00120C  C0D0  F014         	movff	_rx_msg+2,i2memcpy@n
  4506  001210  6A15               	clrf	(i2memcpy@n+1)^0,c
  4507  001212  EC9A  F00A         	call	i2_memcpy	;wreg free
  4508  001216                     
  4509                           ;libcan/can.c: 121:     if (can_rx_callback != ((void*)0)) {
  4510  001216  503D               	movf	_can_rx_callback^0,w,c
  4511  001218  103E               	iorwf	(_can_rx_callback+1)^0,w,c
  4512  00121A  B4D8               	btfsc	status,2,c
  4513  00121C  EF12  F009         	goto	i2u212_41
  4514  001220  EF14  F009         	goto	i2u212_40
  4515  001224                     i2u212_41:
  4516  001224  EF25  F009         	goto	i2l2451
  4517  001228                     i2u212_40:
  4518  001228                     
  4519                           ;libcan/can.c: 122:         can_rx_callback(&rx_msg);
  4520  001228  0ECE               	movlw	low _rx_msg
  4521  00122A  6E01               	movwf	on_can_rx@msg^0,c
  4522  00122C  0E00               	movlw	high _rx_msg
  4523  00122E  6E02               	movwf	(on_can_rx@msg+1)^0,c
  4524  001230  D802               	call	i2u213_48
  4525  001232  EF25  F009         	goto	i2u213_49
  4526  001236                     i2u213_48:
  4527  001236  0005               	push	
  4528  001238  6EFA               	movwf	pclath,c
  4529  00123A  503D               	movf	_can_rx_callback^0,w,c
  4530  00123C  6EFD               	movwf	tosl,c
  4531  00123E  503E               	movf	(_can_rx_callback+1)^0,w,c
  4532  001240  6EFE               	movwf	tosh,c
  4533  001242  50F8               	movf	tblptru,w,c
  4534  001244  6EFF               	movwf	tosu,c
  4535  001246  50FA               	movf	pclath,w,c
  4536  001248  0012               	return		;indir
  4537  00124A                     i2u213_49:
  4538  00124A                     i2l2451:
  4539                           
  4540                           ;libcan/can.c: 125:     RXB0CONbits.RXFUL = 0;
  4541  00124A  9E80               	bcf	128,7,c	;volatile
  4542  00124C  0011               	retfie		f
  4543  00124E                     __end_of_RXB0_int:
  4544                           	callstack 0
  4545                           
  4546 ;; *************** function i2_memcpy *****************
  4547 ;; Defined at:
  4548 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memcpy.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  d1              2   15[COMRAM] PTR void 
  4551 ;;		 -> rx_msg(11), TXB0D0(1), txq(88), 
  4552 ;;  s1              2   17[COMRAM] PTR const void 
  4553 ;;		 -> RXB0D0(1), txq(88), hb(3), fuel_press(9), 
  4554 ;;		 -> ox_main(9), 
  4555 ;;  n               2   19[COMRAM] unsigned int 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  s               2   23[COMRAM] PTR const unsigned char 
  4558 ;;		 -> RXB0D0(1), txq(88), hb(3), fuel_press(9), 
  4559 ;;		 -> ox_main(9), 
  4560 ;;  d               2   21[COMRAM] PTR unsigned char 
  4561 ;;		 -> rx_msg(11), TXB0D0(1), txq(88), 
  4562 ;;  tmp             1   25[COMRAM] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  2   15[COMRAM] PTR void 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4572 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;Total ram usage:       11 bytes
  4577 ;; Hardware stack levels used: 1
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_can_tx
  4582 ;;		_RXB0_int
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text23
  4587  001534                     __ptext23:
  4588                           	callstack 0
  4589  001534                     i2_memcpy:
  4590                           	callstack 25
  4591  001534  C012  F018         	movff	i2memcpy@s1,i2memcpy@s
  4592  001538  C013  F019         	movff	i2memcpy@s1+1,i2memcpy@s+1
  4593  00153C  C010  F016         	movff	i2memcpy@d1,i2memcpy@d
  4594  001540  C011  F017         	movff	i2memcpy@d1+1,i2memcpy@d+1
  4595  001544  EFB9  F00A         	goto	i2l2165
  4596  001548                     i2l2157:
  4597  001548  0060  F063  FFD9   	movff	i2memcpy@s,fsr2l
  4598  00154E  0060  F067  FFDA   	movff	i2memcpy@s+1,fsr2h
  4599  001554  50DF               	movf	indf2,w,c
  4600  001556  6E1A               	movwf	i2memcpy@tmp^0,c
  4601  001558  4A18               	infsnz	i2memcpy@s^0,f,c
  4602  00155A  2A19               	incf	(i2memcpy@s+1)^0,f,c
  4603  00155C  0060  F05B  FFD9   	movff	i2memcpy@d,fsr2l
  4604  001562  0060  F05F  FFDA   	movff	i2memcpy@d+1,fsr2h
  4605  001568  0060  F06B  FFDF   	movff	i2memcpy@tmp,indf2
  4606  00156E  4A16               	infsnz	i2memcpy@d^0,f,c
  4607  001570  2A17               	incf	(i2memcpy@d+1)^0,f,c
  4608  001572                     i2l2165:
  4609  001572  0614               	decf	i2memcpy@n^0,f,c
  4610  001574  A0D8               	btfss	status,0,c
  4611  001576  0615               	decf	(i2memcpy@n+1)^0,f,c
  4612  001578  2814               	incf	i2memcpy@n^0,w,c
  4613  00157A  E106               	bnz	i2u167_41
  4614  00157C  2815               	incf	(i2memcpy@n+1)^0,w,c
  4615  00157E  A4D8               	btfss	status,2,c
  4616  001580  EFC4  F00A         	goto	i2u167_41
  4617  001584  EFC6  F00A         	goto	i2u167_40
  4618  001588                     i2u167_41:
  4619  001588  EFA4  F00A         	goto	i2l2157
  4620  00158C                     i2u167_40:
  4621  00158C  0012               	return		;funcret
  4622  00158E                     __end_ofi2_memcpy:
  4623                           	callstack 0
  4624                           
  4625 ;; *************** function _on_can_rx *****************
  4626 ;; Defined at:
  4627 ;;		line 118 in file "main.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  msg             2    0[COMRAM] PTR const struct .
  4630 ;;		 -> rx_msg(11), 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;Total ram usage:        4 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_main
  4652 ;;		_RXB0_int
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text24
  4657  000F02                     __ptext24:
  4658                           	callstack 0
  4659  000F02                     _on_can_rx:
  4660                           	callstack 26
  4661  000F02                     
  4662                           ;main.c: 119:     switch (msg->id) {
  4663  000F02  EFB6  F007         	goto	i2l2365
  4664  000F06                     i2l2355:
  4665                           
  4666                           ;main.c: 122:             if (msg->len == sizeof (ValveControl_t)) {
  4667  000F06  EE20 F002          	lfsr	2,2
  4668  000F0A  5001               	movf	on_can_rx@msg^0,w,c
  4669  000F0C  26D9               	addwf	fsr2l,f,c
  4670  000F0E  5002               	movf	(on_can_rx@msg+1)^0,w,c
  4671  000F10  22DA               	addwfc	fsr2h,f,c
  4672  000F12  0E03               	movlw	3
  4673  000F14  18DE               	xorwf	postinc2,w,c
  4674  000F16  A4D8               	btfss	status,2,c
  4675  000F18  EF90  F007         	goto	i2u200_41
  4676  000F1C  EF92  F007         	goto	i2u200_40
  4677  000F20                     i2u200_41:
  4678  000F20  EFDB  F007         	goto	i2l86
  4679  000F24                     i2u200_40:
  4680  000F24                     
  4681                           ;main.c: 123:                 valve_cmd = *((ValveControl_t*) msg->data);
  4682  000F24  0E03               	movlw	3
  4683  000F26  2401               	addwf	on_can_rx@msg^0,w,c
  4684  000F28  6ED9               	movwf	fsr2l,c
  4685  000F2A  0E00               	movlw	0
  4686  000F2C  2002               	addwfc	(on_can_rx@msg+1)^0,w,c
  4687  000F2E  6EDA               	movwf	fsr2h,c
  4688  000F30  006F FF78  F03A    	movff	postinc2,_valve_cmd
  4689  000F36  006F FF78  F03B    	movff	postinc2,_valve_cmd+1
  4690  000F3C  006F FF74  F03C    	movff	postdec2,_valve_cmd+2
  4691  000F42  EFDB  F007         	goto	i2l86
  4692  000F46                     i2l2359:
  4693                           
  4694                           ;main.c: 128:             if (msg->len == sizeof (Heartbeat_t)) {
  4695  000F46  EE20 F002          	lfsr	2,2
  4696  000F4A  5001               	movf	on_can_rx@msg^0,w,c
  4697  000F4C  26D9               	addwf	fsr2l,f,c
  4698  000F4E  5002               	movf	(on_can_rx@msg+1)^0,w,c
  4699  000F50  22DA               	addwfc	fsr2h,f,c
  4700  000F52  0E03               	movlw	3
  4701  000F54  18DE               	xorwf	postinc2,w,c
  4702  000F56  A4D8               	btfss	status,2,c
  4703  000F58  EFB0  F007         	goto	i2u201_41
  4704  000F5C  EFB2  F007         	goto	i2u201_40
  4705  000F60                     i2u201_41:
  4706  000F60  EFDB  F007         	goto	i2l86
  4707  000F64                     i2u201_40:
  4708  000F64                     
  4709                           ;main.c: 129:                 hb_rx_flag = 1;
  4710  000F64  0E01               	movlw	1
  4711  000F66  6E36               	movwf	_hb_rx_flag^0,c
  4712  000F68  EFDB  F007         	goto	i2l86
  4713  000F6C                     i2l2365:
  4714  000F6C  0060  F007  FFD9   	movff	on_can_rx@msg,fsr2l
  4715  000F72  0060  F00B  FFDA   	movff	on_can_rx@msg+1,fsr2h
  4716  000F78  006F FF78  F003    	movff	postinc2,??_on_can_rx
  4717  000F7E  006F FF74  F004    	movff	postdec2,??_on_can_rx+1
  4718                           
  4719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4720                           ; Switch size 1, requested type "simple"
  4721                           ; Number of cases is 2, Range of values is 1 to 4
  4722                           ; switch strategies available:
  4723                           ; Name         Instructions Cycles
  4724                           ; simple_byte            7     4 (average)
  4725                           ;	Chosen strategy is simple_byte
  4726  000F84  5004               	movf	(??_on_can_rx+1)^0,w,c
  4727  000F86  0A01               	xorlw	1	; case 1
  4728  000F88  B4D8               	btfsc	status,2,c
  4729  000F8A  EFCD  F007         	goto	i2l3107
  4730  000F8E  0A05               	xorlw	5	; case 4
  4731  000F90  B4D8               	btfsc	status,2,c
  4732  000F92  EFD4  F007         	goto	i2l3109
  4733  000F96  EFDB  F007         	goto	i2l86
  4734  000F9A                     i2l3107:
  4735                           
  4736                           ; Switch size 1, requested type "simple"
  4737                           ; Number of cases is 1, Range of values is 1 to 1
  4738                           ; switch strategies available:
  4739                           ; Name         Instructions Cycles
  4740                           ; simple_byte            4     3 (average)
  4741                           ;	Chosen strategy is simple_byte
  4742  000F9A  5003               	movf	??_on_can_rx^0,w,c
  4743  000F9C  0A01               	xorlw	1	; case 1
  4744  000F9E  B4D8               	btfsc	status,2,c
  4745  000FA0  EF83  F007         	goto	i2l2355
  4746  000FA4  EFDB  F007         	goto	i2l86
  4747  000FA8                     i2l3109:
  4748                           
  4749                           ; Switch size 1, requested type "simple"
  4750                           ; Number of cases is 1, Range of values is 1 to 1
  4751                           ; switch strategies available:
  4752                           ; Name         Instructions Cycles
  4753                           ; simple_byte            4     3 (average)
  4754                           ;	Chosen strategy is simple_byte
  4755  000FA8  5003               	movf	??_on_can_rx^0,w,c
  4756  000FAA  0A01               	xorlw	1	; case 1
  4757  000FAC  B4D8               	btfsc	status,2,c
  4758  000FAE  EFA3  F007         	goto	i2l2359
  4759  000FB2  EFDB  F007         	goto	i2l86
  4760  000FB6                     i2l86:
  4761  000FB6  0012               	return		;funcret
  4762  000FB8                     __end_of_on_can_rx:
  4763                           	callstack 0
  4764                           
  4765 ;; *************** function _TXB0_int *****************
  4766 ;; Defined at:
  4767 ;;		line 133 in file "libcan/can.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      void 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;Total ram usage:        0 bytes
  4786 ;; Hardware stack levels used: 1
  4787 ;; Hardware stack levels required when called: 2
  4788 ;; This function calls:
  4789 ;;		_can_tx
  4790 ;; This function is called by:
  4791 ;;		Interrupt level 2
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text25
  4796  0015DC                     __ptext25:
  4797                           	callstack 0
  4798  0015DC                     _TXB0_int:
  4799                           	callstack 25
  4800  0015DC                     
  4801                           ;libcan/can.c: 134:     PIR5bits.TXB0IF = 0;
  4802  0015DC  0139               	movlb	57	; () banked
  4803  0015DE  95A5               	bcf	165,2,b	;volatile
  4804  0015E0                     
  4805                           ; BSR set to: 57
  4806                           ;libcan/can.c: 135:     if(txq_tail == txq_head) {
  4807  0015E0  0100               	movlb	0	; () banked
  4808  0015E2  51CC               	movf	_txq_head& (0+255),w,b	;volatile
  4809  0015E4  19CB               	xorwf	_txq_tail& (0+255),w,b	;volatile
  4810  0015E6  A4D8               	btfss	status,2,c
  4811  0015E8  EFF8  F00A         	goto	i2u214_41
  4812  0015EC  EFFA  F00A         	goto	i2u214_40
  4813  0015F0                     i2u214_41:
  4814  0015F0  EFFC  F00A         	goto	i2l2459
  4815  0015F4                     i2u214_40:
  4816  0015F4  EF12  F00B         	goto	i2l317
  4817  0015F8                     i2l2459:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;libcan/can.c: 139:     can_tx(&txq[txq_tail]);
  4821  0015F8  51CB               	movf	_txq_tail& (0+255),w,b	;volatile
  4822  0015FA  0D0B               	mullw	11
  4823  0015FC  0E40               	movlw	low _txq
  4824  0015FE  24F3               	addwf	243,w,c
  4825  001600  6E1B               	movwf	can_tx@msg^0,c
  4826  001602  0E01               	movlw	high _txq
  4827  001604  20F4               	addwfc	prodh,w,c
  4828  001606  6E1C               	movwf	(can_tx@msg+1)^0,c
  4829  001608  EC34  F008         	call	_can_tx	;wreg free
  4830  00160C                     
  4831                           ;libcan/can.c: 141:     txq_tail++;
  4832  00160C  0100               	movlb	0	; () banked
  4833  00160E  2BCB               	incf	_txq_tail& (0+255),f,b	;volatile
  4834  001610                     
  4835                           ; BSR set to: 0
  4836                           ;libcan/can.c: 142:     if(txq_tail >= (uint8_t)8) {
  4837  001610  0E07               	movlw	7
  4838  001612  65CB               	cpfsgt	_txq_tail& (0+255),b	;volatile
  4839  001614  EF0E  F00B         	goto	i2u215_41
  4840  001618  EF10  F00B         	goto	i2u215_40
  4841  00161C                     i2u215_41:
  4842  00161C  EF12  F00B         	goto	i2l317
  4843  001620                     i2u215_40:
  4844  001620                     
  4845                           ; BSR set to: 0
  4846                           ;libcan/can.c: 143:         txq_tail = 0;
  4847  001620  0E00               	movlw	0
  4848  001622  6FCB               	movwf	_txq_tail& (0+255),b	;volatile
  4849  001624                     i2l317:
  4850                           
  4851                           ; BSR set to: 0
  4852  001624  0011               	retfie		f
  4853  001626                     __end_of_TXB0_int:
  4854                           	callstack 0
  4855                           
  4856 ;; *************** function _can_tx *****************
  4857 ;; Defined at:
  4858 ;;		line 87 in file "libcan/can.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  msg             2   26[COMRAM] PTR const struct .
  4861 ;;		 -> txq(88), 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;		None
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4876 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;Total ram usage:        4 bytes
  4878 ;; Hardware stack levels used: 1
  4879 ;; Hardware stack levels required when called: 1
  4880 ;; This function calls:
  4881 ;;		i2_memcpy
  4882 ;; This function is called by:
  4883 ;;		_TXB0_int
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text26
  4888  001068                     __ptext26:
  4889                           	callstack 0
  4890  001068                     _can_tx:
  4891                           	callstack 25
  4892  001068                     
  4893                           ;libcan/can.c: 94:     TXB0SIDH = (uint8_t)((msg->id) >> 3);
  4894  001068  0060  F06F  FFD9   	movff	can_tx@msg,fsr2l
  4895  00106E  0060  F073  FFDA   	movff	can_tx@msg+1,fsr2h
  4896  001074  006F FF78  F01D    	movff	postinc2,??_can_tx
  4897  00107A  006F FF74  F01E    	movff	postdec2,??_can_tx+1
  4898  001080  90D8               	bcf	status,0,c
  4899  001082  321E               	rrcf	(??_can_tx+1)^0,f,c
  4900  001084  321D               	rrcf	??_can_tx^0,f,c
  4901  001086  90D8               	bcf	status,0,c
  4902  001088  321E               	rrcf	(??_can_tx+1)^0,f,c
  4903  00108A  321D               	rrcf	??_can_tx^0,f,c
  4904  00108C  90D8               	bcf	status,0,c
  4905  00108E  321E               	rrcf	(??_can_tx+1)^0,f,c
  4906  001090  321D               	rrcf	??_can_tx^0,f,c
  4907  001092  501D               	movf	??_can_tx^0,w,c
  4908  001094  0137               	movlb	55	; () banked
  4909  001096  6FE1               	movwf	225,b	;volatile
  4910                           
  4911                           ;libcan/can.c: 95:     TXB0SIDL = (uint8_t)(((msg->id) & 0b111) << 5);
  4912  001098  0060  F06F  FFD9   	movff	can_tx@msg,fsr2l
  4913  00109E  0060  F073  FFDA   	movff	can_tx@msg+1,fsr2h
  4914  0010A4  50DF               	movf	indf2,w,c
  4915  0010A6  6E1D               	movwf	??_can_tx^0,c
  4916  0010A8  0E07               	movlw	7
  4917  0010AA  161D               	andwf	??_can_tx^0,f,c
  4918  0010AC  0E05               	movlw	5
  4919  0010AE  6E1E               	movwf	(??_can_tx+1)^0,c
  4920  0010B0                     i2u206_45:
  4921  0010B0  90D8               	bcf	status,0,c
  4922  0010B2  361D               	rlcf	??_can_tx^0,f,c
  4923  0010B4  2E1E               	decfsz	(??_can_tx+1)^0,f,c
  4924  0010B6  EF58  F008         	goto	i2u206_45
  4925  0010BA  501D               	movf	??_can_tx^0,w,c
  4926  0010BC  6FE2               	movwf	226,b	;volatile
  4927  0010BE                     
  4928                           ; BSR set to: 55
  4929                           ;libcan/can.c: 96:     TXB0SIDLbits.EXIDE = 0;
  4930  0010BE  97E2               	bcf	226,3,b	;volatile
  4931  0010C0                     
  4932                           ; BSR set to: 55
  4933                           ;libcan/can.c: 99:     TXB0DLCbits.TXRTR = 0;
  4934  0010C0  9DE5               	bcf	229,6,b	;volatile
  4935                           
  4936                           ;libcan/can.c: 101:     TXB0DLCbits.DLC = msg->len;
  4937  0010C2  EE20 F002          	lfsr	2,2
  4938  0010C6  501B               	movf	can_tx@msg^0,w,c
  4939  0010C8  26D9               	addwf	fsr2l,f,c
  4940  0010CA  501C               	movf	(can_tx@msg+1)^0,w,c
  4941  0010CC  22DA               	addwfc	fsr2h,f,c
  4942  0010CE  50DF               	movf	indf2,w,c
  4943  0010D0  6E1D               	movwf	??_can_tx^0,c
  4944  0010D2  51E5               	movf	229,w,b	;volatile
  4945  0010D4  181D               	xorwf	??_can_tx^0,w,c
  4946  0010D6  0BF0               	andlw	-16
  4947  0010D8  181D               	xorwf	??_can_tx^0,w,c
  4948  0010DA  6FE5               	movwf	229,b	;volatile
  4949  0010DC                     
  4950                           ; BSR set to: 55
  4951                           ;libcan/can.c: 103:     memcpy((void*) &TXB0D0, (const void*)msg->data, msg->len);
  4952  0010DC  0EE6               	movlw	230
  4953  0010DE  6E10               	movwf	i2memcpy@d1^0,c
  4954  0010E0  0E37               	movlw	55
  4955  0010E2  6E11               	movwf	(i2memcpy@d1+1)^0,c
  4956  0010E4  0E03               	movlw	3
  4957  0010E6  241B               	addwf	can_tx@msg^0,w,c
  4958  0010E8  6E12               	movwf	i2memcpy@s1^0,c
  4959  0010EA  0E00               	movlw	0
  4960  0010EC  201C               	addwfc	(can_tx@msg+1)^0,w,c
  4961  0010EE  6E13               	movwf	(i2memcpy@s1+1)^0,c
  4962  0010F0  EE20 F002          	lfsr	2,2
  4963  0010F4  501B               	movf	can_tx@msg^0,w,c
  4964  0010F6  26D9               	addwf	fsr2l,f,c
  4965  0010F8  501C               	movf	(can_tx@msg+1)^0,w,c
  4966  0010FA  22DA               	addwfc	fsr2h,f,c
  4967  0010FC  50DF               	movf	indf2,w,c
  4968  0010FE  6E1D               	movwf	??_can_tx^0,c
  4969  001100  501D               	movf	??_can_tx^0,w,c
  4970  001102  6E14               	movwf	i2memcpy@n^0,c
  4971  001104  6A15               	clrf	(i2memcpy@n+1)^0,c
  4972  001106  EC9A  F00A         	call	i2_memcpy	;wreg free
  4973  00110A                     
  4974                           ;libcan/can.c: 106:     TXB0CONbits.TXREQ = 1;
  4975  00110A  0137               	movlb	55	; () banked
  4976  00110C  87E0               	bsf	224,3,b	;volatile
  4977  00110E                     
  4978                           ; BSR set to: 55
  4979  00110E  0012               	return		;funcret
  4980  001110                     __end_of_can_tx:
  4981                           	callstack 0
  4982                           
  4983 ;; *************** function _TMR0_int *****************
  4984 ;; Defined at:
  4985 ;;		line 37 in file "libpicutil/time.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;		None
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;		None
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      void 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;Total ram usage:        2 bytes
  5004 ;; Hardware stack levels used: 1
  5005 ;; Hardware stack levels required when called: 2
  5006 ;; This function calls:
  5007 ;;		Absolute function
  5008 ;;		_encoders_update
  5009 ;; This function is called by:
  5010 ;;		Interrupt level 2
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text27
  5015  0013B4                     __ptext27:
  5016                           	callstack 0
  5017  0013B4                     _TMR0_int:
  5018                           	callstack 25
  5019  0013B4                     
  5020                           ;libpicutil/time.c: 38:     PIR3bits.TMR0IF = 0;
  5021  0013B4  0139               	movlb	57	; () banked
  5022  0013B6  9FA3               	bcf	163,7,b	;volatile
  5023  0013B8                     
  5024                           ; BSR set to: 57
  5025                           ;libpicutil/time.c: 40:     ms++;
  5026  0013B8  4A24               	infsnz	_ms^0,f,c	;volatile
  5027  0013BA  2A25               	incf	(_ms+1)^0,f,c	;volatile
  5028  0013BC                     
  5029                           ; BSR set to: 57
  5030                           ;libpicutil/time.c: 41:     if(ms - last_second_ms > 1000) {
  5031  0013BC  5022               	movf	_last_second_ms^0,w,c	;volatile
  5032  0013BE  5C24               	subwf	_ms^0,w,c	;volatile
  5033  0013C0  0100               	movlb	0	; () banked
  5034  0013C2  6F68               	movwf	??_TMR0_int& (0+255),b
  5035  0013C4  5023               	movf	(_last_second_ms+1)^0,w,c	;volatile
  5036  0013C6  5825               	subwfb	(_ms+1)^0,w,c	;volatile
  5037  0013C8  6F69               	movwf	(??_TMR0_int+1)& (0+255),b
  5038  0013CA  0EE9               	movlw	233
  5039  0013CC  5D68               	subwf	??_TMR0_int& (0+255),w,b
  5040  0013CE  0E03               	movlw	3
  5041  0013D0  5969               	subwfb	(??_TMR0_int+1)& (0+255),w,b
  5042  0013D2  A0D8               	btfss	status,0,c
  5043  0013D4  EFEE  F009         	goto	i2u315_41
  5044  0013D8  EFF0  F009         	goto	i2u315_40
  5045  0013DC                     i2u315_41:
  5046  0013DC  EFF6  F009         	goto	i2l3063
  5047  0013E0                     i2u315_40:
  5048  0013E0                     
  5049                           ; BSR set to: 0
  5050                           ;libpicutil/time.c: 42:         last_second_ms = ms;
  5051  0013E0  C024  F022         	movff	_ms,_last_second_ms	;volatile
  5052  0013E4  C025  F023         	movff	_ms+1,_last_second_ms+1	;volatile
  5053  0013E8                     
  5054                           ; BSR set to: 0
  5055                           ;libpicutil/time.c: 43:         secs++;
  5056  0013E8  4A20               	infsnz	_secs^0,f,c	;volatile
  5057  0013EA  2A21               	incf	(_secs+1)^0,f,c	;volatile
  5058  0013EC                     i2l3063:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;libpicutil/time.c: 45:     if(one_kHz_callback != ((void*)0)) {
  5062  0013EC  503F               	movf	_one_kHz_callback^0,w,c
  5063  0013EE  1040               	iorwf	(_one_kHz_callback+1)^0,w,c
  5064  0013F0  B4D8               	btfsc	status,2,c
  5065  0013F2  EFFD  F009         	goto	i2u316_41
  5066  0013F6  EFFF  F009         	goto	i2u316_40
  5067  0013FA                     i2u316_41:
  5068  0013FA  EF0C  F00A         	goto	i2l350
  5069  0013FE                     i2u316_40:
  5070  0013FE                     
  5071                           ; BSR set to: 0
  5072                           ;libpicutil/time.c: 46:         one_kHz_callback();
  5073  0013FE  D802               	call	i2u317_48
  5074  001400  EF0C  F00A         	goto	i2u317_49
  5075  001404                     i2u317_48:
  5076  001404  0005               	push	
  5077  001406  6EFA               	movwf	pclath,c
  5078  001408  503F               	movf	_one_kHz_callback^0,w,c
  5079  00140A  6EFD               	movwf	tosl,c
  5080  00140C  5040               	movf	(_one_kHz_callback+1)^0,w,c
  5081  00140E  6EFE               	movwf	tosh,c
  5082  001410  50F8               	movf	tblptru,w,c
  5083  001412  6EFF               	movwf	tosu,c
  5084  001414  50FA               	movf	pclath,w,c
  5085  001416  0012               	return		;indir
  5086  001418                     i2u317_49:
  5087  001418                     i2l350:
  5088  001418  0011               	retfie		f
  5089  00141A                     __end_of_TMR0_int:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _encoders_update *****************
  5093 ;; Defined at:
  5094 ;;		line 49 in file "encoders.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  enc_2_state     1    7[BANK0 ] unsigned char 
  5099 ;;  enc_1_state     1    6[BANK0 ] unsigned char 
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      void 
  5102 ;; Registers used:
  5103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;Total ram usage:        4 bytes
  5114 ;; Hardware stack levels used: 1
  5115 ;; Hardware stack levels required when called: 1
  5116 ;; This function calls:
  5117 ;;		_count_delta
  5118 ;; This function is called by:
  5119 ;;		_main
  5120 ;;		_TMR0_int
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text28
  5125  001110                     __ptext28:
  5126                           	callstack 0
  5127  001110                     _encoders_update:
  5128                           	callstack 25
  5129  001110                     
  5130                           ;encoders.c: 50:     uint8_t enc_1_state = (uint8_t) ((PORTAbits.RA1 << 1) | PORTAbits.R
      +                          A0);
  5131  001110  B0CA               	btfsc	202,0,c	;volatile
  5132  001112  EF8D  F008         	goto	i2u307_41
  5133  001116  EF92  F008         	goto	i2u307_40
  5134  00111A                     i2u307_41:
  5135  00111A  0100               	movlb	0	; () banked
  5136  00111C  6B64               	clrf	??_encoders_update& (0+255),b
  5137  00111E  2B64               	incf	??_encoders_update& (0+255),f,b
  5138  001120  EF94  F008         	goto	i2u307_48
  5139  001124                     i2u307_40:
  5140  001124  0100               	movlb	0	; () banked
  5141  001126  6B64               	clrf	??_encoders_update& (0+255),b
  5142  001128                     i2u307_48:
  5143  001128  B2CA               	btfsc	202,1,c	;volatile
  5144  00112A  EF99  F008         	goto	i2u308_41
  5145  00112E  EF9D  F008         	goto	i2u308_40
  5146  001132                     i2u308_41:
  5147  001132  6B65               	clrf	(??_encoders_update+1)& (0+255),b
  5148  001134  2B65               	incf	(??_encoders_update+1)& (0+255),f,b
  5149  001136  EF9F  F008         	goto	i2u308_48
  5150  00113A                     i2u308_40:
  5151  00113A  0100               	movlb	0	; () banked
  5152  00113C  6B65               	clrf	(??_encoders_update+1)& (0+255),b
  5153  00113E                     i2u308_48:
  5154  00113E  90D8               	bcf	status,0,c
  5155  001140  3565               	rlcf	(??_encoders_update+1)& (0+255),w,b
  5156  001142  1164               	iorwf	??_encoders_update& (0+255),w,b
  5157  001144  6F66               	movwf	encoders_update@enc_1_state& (0+255),b
  5158                           
  5159                           ;encoders.c: 51:     uint8_t enc_2_state = (uint8_t) ((PORTAbits.RA3 << 1) | PORTAbits.R
      +                          A2);
  5160  001146  B4CA               	btfsc	202,2,c	;volatile
  5161  001148  EFA8  F008         	goto	i2u309_41
  5162  00114C  EFAC  F008         	goto	i2u309_40
  5163  001150                     i2u309_41:
  5164  001150  6B64               	clrf	??_encoders_update& (0+255),b
  5165  001152  2B64               	incf	??_encoders_update& (0+255),f,b
  5166  001154  EFAE  F008         	goto	i2u309_48
  5167  001158                     i2u309_40:
  5168  001158  0100               	movlb	0	; () banked
  5169  00115A  6B64               	clrf	??_encoders_update& (0+255),b
  5170  00115C                     i2u309_48:
  5171  00115C  B6CA               	btfsc	202,3,c	;volatile
  5172  00115E  EFB3  F008         	goto	i2u310_41
  5173  001162  EFB7  F008         	goto	i2u310_40
  5174  001166                     i2u310_41:
  5175  001166  6B65               	clrf	(??_encoders_update+1)& (0+255),b
  5176  001168  2B65               	incf	(??_encoders_update+1)& (0+255),f,b
  5177  00116A  EFB9  F008         	goto	i2u310_48
  5178  00116E                     i2u310_40:
  5179  00116E  0100               	movlb	0	; () banked
  5180  001170  6B65               	clrf	(??_encoders_update+1)& (0+255),b
  5181  001172                     i2u310_48:
  5182  001172  90D8               	bcf	status,0,c
  5183  001174  3565               	rlcf	(??_encoders_update+1)& (0+255),w,b
  5184  001176  1164               	iorwf	??_encoders_update& (0+255),w,b
  5185  001178  6F67               	movwf	encoders_update@enc_2_state& (0+255),b
  5186  00117A                     
  5187                           ; BSR set to: 0
  5188                           ;encoders.c: 52:     enc_1_count += (uint16_t) count_delta(enc_1_state, enc_1_prev_state
      +                          );
  5189  00117A  C035  F01F         	movff	_enc_1_prev_state,count_delta@prev_state
  5190  00117E  5166               	movf	encoders_update@enc_1_state& (0+255),w,b
  5191  001180  ECC7  F00A         	call	_count_delta
  5192  001184  0100               	movlb	0	; () banked
  5193  001186  6F64               	movwf	??_encoders_update& (0+255),b
  5194  001188  5164               	movf	??_encoders_update& (0+255),w,b
  5195  00118A  2630               	addwf	_enc_1_count^0,f,c
  5196  00118C  0E00               	movlw	0
  5197  00118E  BF64               	btfsc	??_encoders_update& (0+255),7,b
  5198  001190  0EFF               	movlw	255
  5199  001192  2231               	addwfc	(_enc_1_count+1)^0,f,c
  5200  001194                     
  5201                           ; BSR set to: 0
  5202                           ;encoders.c: 53:     enc_2_count += (uint16_t) count_delta(enc_2_state, enc_2_prev_state
      +                          );
  5203  001194  C034  F01F         	movff	_enc_2_prev_state,count_delta@prev_state
  5204  001198  5167               	movf	encoders_update@enc_2_state& (0+255),w,b
  5205  00119A  ECC7  F00A         	call	_count_delta
  5206  00119E  0100               	movlb	0	; () banked
  5207  0011A0  6F64               	movwf	??_encoders_update& (0+255),b
  5208  0011A2  5164               	movf	??_encoders_update& (0+255),w,b
  5209  0011A4  262E               	addwf	_enc_2_count^0,f,c
  5210  0011A6  0E00               	movlw	0
  5211  0011A8  BF64               	btfsc	??_encoders_update& (0+255),7,b
  5212  0011AA  0EFF               	movlw	255
  5213  0011AC  222F               	addwfc	(_enc_2_count+1)^0,f,c
  5214  0011AE                     
  5215                           ; BSR set to: 0
  5216                           ;encoders.c: 54:     enc_1_prev_state = enc_1_state;
  5217  0011AE  C066  F035         	movff	encoders_update@enc_1_state,_enc_1_prev_state
  5218  0011B2                     
  5219                           ; BSR set to: 0
  5220                           ;encoders.c: 55:     enc_2_prev_state = enc_2_state;
  5221  0011B2  C067  F034         	movff	encoders_update@enc_2_state,_enc_2_prev_state
  5222  0011B6                     
  5223                           ; BSR set to: 0
  5224  0011B6  0012               	return		;funcret
  5225  0011B8                     __end_of_encoders_update:
  5226                           	callstack 0
  5227                           
  5228 ;; *************** function _count_delta *****************
  5229 ;; Defined at:
  5230 ;;		line 40 in file "encoders.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  state           1    wreg     const unsigned char 
  5233 ;;  prev_state      1   30[COMRAM] const unsigned char 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  state           1    2[BANK0 ] const unsigned char 
  5236 ;;  res             1    3[BANK0 ] char 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      char 
  5239 ;; Registers used:
  5240 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5246 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5247 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5248 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;Total ram usage:        5 bytes
  5251 ;; Hardware stack levels used: 1
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_encoders_update
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text29
  5260  00158E                     __ptext29:
  5261                           	callstack 0
  5262  00158E                     _count_delta:
  5263                           	callstack 25
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;incstack = 0
  5267                           ;count_delta@state stored from wreg
  5268  00158E  0100               	movlb	0	; () banked
  5269  001590  6F62               	movwf	count_delta@state& (0+255),b
  5270  001592                     
  5271                           ;encoders.c: 41:     int8_t res = count_delta_matrix[state << 2 | prev_state];
  5272  001592  501F               	movf	count_delta@prev_state^0,w,c
  5273  001594  C062  F060         	movff	count_delta@state,??_count_delta
  5274  001598  0100               	movlb	0	; () banked
  5275  00159A  6B61               	clrf	(??_count_delta+1)& (0+255),b
  5276  00159C  90D8               	bcf	status,0,c
  5277  00159E  3760               	rlcf	??_count_delta& (0+255),f,b
  5278  0015A0  3761               	rlcf	(??_count_delta+1)& (0+255),f,b
  5279  0015A2  90D8               	bcf	status,0,c
  5280  0015A4  3760               	rlcf	??_count_delta& (0+255),f,b
  5281  0015A6  3761               	rlcf	(??_count_delta+1)& (0+255),f,b
  5282  0015A8  1360               	iorwf	??_count_delta& (0+255),f,b
  5283  0015AA  0E00               	movlw	0
  5284  0015AC  1361               	iorwf	(??_count_delta+1)& (0+255),f,b
  5285  0015AE  0EA9               	movlw	low _count_delta_matrix
  5286  0015B0  2560               	addwf	??_count_delta& (0+255),w,b
  5287  0015B2  6ED9               	movwf	fsr2l,c
  5288  0015B4  0E00               	movlw	high _count_delta_matrix
  5289  0015B6  2161               	addwfc	(??_count_delta+1)& (0+255),w,b
  5290  0015B8  6EDA               	movwf	fsr2h,c
  5291  0015BA  50DF               	movf	indf2,w,c
  5292  0015BC  6F63               	movwf	count_delta@res& (0+255),b
  5293  0015BE                     
  5294                           ; BSR set to: 0
  5295                           ;encoders.c: 42:     if(res==2) {
  5296  0015BE  0E02               	movlw	2
  5297  0015C0  1963               	xorwf	count_delta@res& (0+255),w,b
  5298  0015C2  A4D8               	btfss	status,2,c
  5299  0015C4  EFE6  F00A         	goto	i2u257_41
  5300  0015C8  EFE8  F00A         	goto	i2u257_40
  5301  0015CC                     i2u257_41:
  5302  0015CC  EFEC  F00A         	goto	i2l2765
  5303  0015D0                     i2u257_40:
  5304  0015D0                     
  5305                           ; BSR set to: 0
  5306                           ;encoders.c: 43:         encoders_errors++;
  5307  0015D0  2BCD               	incf	_encoders_errors& (0+255),f,b
  5308  0015D2                     
  5309                           ; BSR set to: 0
  5310                           ;encoders.c: 44:         return 0;
  5311  0015D2  0E00               	movlw	0
  5312  0015D4  EFED  F00A         	goto	i2l115
  5313  0015D8                     i2l2765:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;encoders.c: 46:     return res;
  5317  0015D8  5163               	movf	count_delta@res& (0+255),w,b
  5318  0015DA                     i2l115:
  5319                           
  5320                           ; BSR set to: 0
  5321  0015DA  0012               	return		;funcret
  5322  0015DC                     __end_of_count_delta:
  5323                           	callstack 0
  5324                           
  5325 ;; *************** function _U1TX_int *****************
  5326 ;; Defined at:
  5327 ;;		line 61 in file "libpicutil/uart_debug.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;		None
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;		None
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;Total ram usage:        0 bytes
  5346 ;; Hardware stack levels used: 1
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		Interrupt level 2
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           	psect	text30
  5355  00166C                     __ptext30:
  5356                           	callstack 0
  5357  00166C                     _U1TX_int:
  5358                           	callstack 27
  5359  00166C                     
  5360                           ;libpicutil/uart_debug.c: 62:     if (tail == head) {
  5361  00166C  5033               	movf	_head^0,w,c	;volatile
  5362  00166E  1832               	xorwf	_tail^0,w,c	;volatile
  5363  001670  A4D8               	btfss	status,2,c
  5364  001672  EF3D  F00B         	goto	i2u219_41
  5365  001676  EF3F  F00B         	goto	i2u219_40
  5366  00167A                     i2u219_41:
  5367  00167A  EF43  F00B         	goto	i2l2485
  5368  00167E                     i2u219_40:
  5369  00167E                     
  5370                           ;libpicutil/uart_debug.c: 63:         PIE3bits.U1TXIE = 0;
  5371  00167E  0139               	movlb	57	; () banked
  5372  001680  9993               	bcf	147,4,b	;volatile
  5373                           
  5374                           ;libpicutil/uart_debug.c: 64:     } else {
  5375  001682  EF57  F00B         	goto	i2l392
  5376  001686                     i2l2485:
  5377                           
  5378                           ;libpicutil/uart_debug.c: 65:         U1TXB = tx_ring_buf[tail];
  5379  001686  0E00               	movlw	low _tx_ring_buf
  5380  001688  2432               	addwf	_tail^0,w,c	;volatile
  5381  00168A  6ED9               	movwf	fsr2l,c
  5382  00168C  6ADA               	clrf	fsr2h,c
  5383  00168E  0E01               	movlw	high _tx_ring_buf
  5384  001690  22DA               	addwfc	fsr2h,f,c
  5385  001692  50DF               	movf	indf2,w,c
  5386  001694  013D               	movlb	61	; () banked
  5387  001696  6FEA               	movwf	234,b	;volatile
  5388  001698                     
  5389                           ; BSR set to: 61
  5390                           ;libpicutil/uart_debug.c: 66:         tail++;
  5391  001698  2A32               	incf	_tail^0,f,c	;volatile
  5392  00169A                     
  5393                           ; BSR set to: 61
  5394                           ;libpicutil/uart_debug.c: 67:         if (tail >= (uint8_t)64) {
  5395  00169A  0E3F               	movlw	63
  5396  00169C  6432               	cpfsgt	_tail^0,c	;volatile
  5397  00169E  EF53  F00B         	goto	i2u220_41
  5398  0016A2  EF55  F00B         	goto	i2u220_40
  5399  0016A6                     i2u220_41:
  5400  0016A6  EF57  F00B         	goto	i2l392
  5401  0016AA                     i2u220_40:
  5402  0016AA                     
  5403                           ; BSR set to: 61
  5404                           ;libpicutil/uart_debug.c: 68:             tail = 0;
  5405  0016AA  0E00               	movlw	0
  5406  0016AC  6E32               	movwf	_tail^0,c	;volatile
  5407  0016AE                     i2l392:
  5408  0016AE  0011               	retfie		f
  5409  0016B0                     __end_of_U1TX_int:
  5410                           	callstack 0
  5411                           
  5412                           ;
  5413                           ; Interrupt Vector Table @ 0x8
  5414                           ;
  5415                           
  5416                           	psect	ivt0x8
  5417  000008                     __pivt0x8:
  5418                           	callstack 0
  5419  000008                     ivt0x8_base:
  5420                           	callstack 0
  5421                           
  5422                           ; Vector 0 : SWINT
  5423  000008  0029               	dw	ivt0x8_undefint shr (0+2)
  5424                           
  5425                           ; Vector 1 : HLVD
  5426  00000A  0029               	dw	ivt0x8_undefint shr (0+2)
  5427                           
  5428                           ; Vector 2 : OSF
  5429  00000C  0029               	dw	ivt0x8_undefint shr (0+2)
  5430                           
  5431                           ; Vector 3 : CSW
  5432  00000E  0029               	dw	ivt0x8_undefint shr (0+2)
  5433                           
  5434                           ; Vector 4 : NVM
  5435  000010  0029               	dw	ivt0x8_undefint shr (0+2)
  5436                           
  5437                           ; Vector 5 : SCAN
  5438  000012  0029               	dw	ivt0x8_undefint shr (0+2)
  5439                           
  5440                           ; Vector 6 : CRC
  5441  000014  0029               	dw	ivt0x8_undefint shr (0+2)
  5442                           
  5443                           ; Vector 7 : IOC
  5444  000016  0029               	dw	ivt0x8_undefint shr (0+2)
  5445                           
  5446                           ; Vector 8 : INT0
  5447  000018  0029               	dw	ivt0x8_undefint shr (0+2)
  5448                           
  5449                           ; Vector 9 : ZCD
  5450  00001A  0029               	dw	ivt0x8_undefint shr (0+2)
  5451                           
  5452                           ; Vector 10 : AD
  5453  00001C  0029               	dw	ivt0x8_undefint shr (0+2)
  5454                           
  5455                           ; Vector 11 : ADT
  5456  00001E  0029               	dw	ivt0x8_undefint shr (0+2)
  5457                           
  5458                           ; Vector 12 : CMP1
  5459  000020  0029               	dw	ivt0x8_undefint shr (0+2)
  5460                           
  5461                           ; Vector 13 : SMT1
  5462  000022  0029               	dw	ivt0x8_undefint shr (0+2)
  5463                           
  5464                           ; Vector 14 : SMT1PRA
  5465  000024  0029               	dw	ivt0x8_undefint shr (0+2)
  5466                           
  5467                           ; Vector 15 : SMT1PWA
  5468  000026  0029               	dw	ivt0x8_undefint shr (0+2)
  5469                           
  5470                           ; Vector 16 : DMA1SCNT
  5471  000028  0029               	dw	ivt0x8_undefint shr (0+2)
  5472                           
  5473                           ; Vector 17 : DMA1DCNT
  5474  00002A  0029               	dw	ivt0x8_undefint shr (0+2)
  5475                           
  5476                           ; Vector 18 : DMA1OR
  5477  00002C  0029               	dw	ivt0x8_undefint shr (0+2)
  5478                           
  5479                           ; Vector 19 : DMA1A
  5480  00002E  0029               	dw	ivt0x8_undefint shr (0+2)
  5481                           
  5482                           ; Vector 20 : SPI1RX
  5483  000030  0029               	dw	ivt0x8_undefint shr (0+2)
  5484                           
  5485                           ; Vector 21 : SPI1TX
  5486  000032  0029               	dw	ivt0x8_undefint shr (0+2)
  5487                           
  5488                           ; Vector 22 : SPI1
  5489  000034  0029               	dw	ivt0x8_undefint shr (0+2)
  5490                           
  5491                           ; Vector 23 : I2C1RX
  5492  000036  0029               	dw	ivt0x8_undefint shr (0+2)
  5493                           
  5494                           ; Vector 24 : I2C1TX
  5495  000038  0029               	dw	ivt0x8_undefint shr (0+2)
  5496                           
  5497                           ; Vector 25 : I2C1
  5498  00003A  0029               	dw	ivt0x8_undefint shr (0+2)
  5499                           
  5500                           ; Vector 26 : I2C1E
  5501  00003C  0029               	dw	ivt0x8_undefint shr (0+2)
  5502                           
  5503                           ; Vector 27 : U1RX
  5504  00003E  0029               	dw	ivt0x8_undefint shr (0+2)
  5505                           
  5506                           ; Vector 28 : U1TX
  5507  000040  059B               	dw	_U1TX_int shr (0+2)
  5508                           
  5509                           ; Vector 29 : U1E
  5510  000042  0029               	dw	ivt0x8_undefint shr (0+2)
  5511                           
  5512                           ; Vector 30 : U1
  5513  000044  0029               	dw	ivt0x8_undefint shr (0+2)
  5514                           
  5515                           ; Vector 31 : TMR0
  5516  000046  04ED               	dw	_TMR0_int shr (0+2)
  5517                           
  5518                           ; Vector 32 : TMR1
  5519  000048  0029               	dw	ivt0x8_undefint shr (0+2)
  5520                           
  5521                           ; Vector 33 : TMR1G
  5522  00004A  0029               	dw	ivt0x8_undefint shr (0+2)
  5523                           
  5524                           ; Vector 34 : TMR2
  5525  00004C  0029               	dw	ivt0x8_undefint shr (0+2)
  5526                           
  5527                           ; Vector 35 : CCP1
  5528  00004E  0029               	dw	ivt0x8_undefint shr (0+2)
  5529                           
  5530                           ; Vector 36 : NCO1
  5531  000050  0029               	dw	ivt0x8_undefint shr (0+2)
  5532                           
  5533                           ; Vector 37 : CWG1
  5534  000052  0029               	dw	ivt0x8_undefint shr (0+2)
  5535                           
  5536                           ; Vector 38 : CLC1
  5537  000054  0029               	dw	ivt0x8_undefint shr (0+2)
  5538                           
  5539                           ; Vector 39 : INT1
  5540  000056  0029               	dw	ivt0x8_undefint shr (0+2)
  5541                           
  5542                           ; Vector 40 : RXB0IF
  5543  000058  046E               	dw	_RXB0_int shr (0+2)
  5544                           
  5545                           ; Vector 41 : RXB1IF
  5546  00005A  0029               	dw	ivt0x8_undefint shr (0+2)
  5547                           
  5548                           ; Vector 42 : TXB0IF
  5549  00005C  0577               	dw	_TXB0_int shr (0+2)
  5550                           
  5551                           ; Vector 43 : TXB1IF
  5552  00005E  0029               	dw	ivt0x8_undefint shr (0+2)
  5553                           
  5554                           ; Vector 44 : TXB2IF
  5555  000060  0029               	dw	ivt0x8_undefint shr (0+2)
  5556                           
  5557                           ; Vector 45 : ERRIF
  5558  000062  0029               	dw	ivt0x8_undefint shr (0+2)
  5559                           
  5560                           ; Vector 46 : WAKIF
  5561  000064  0029               	dw	ivt0x8_undefint shr (0+2)
  5562                           
  5563                           ; Vector 47 : IRXIF
  5564  000066  0029               	dw	ivt0x8_undefint shr (0+2)
  5565                           
  5566                           ; Vector 48 : CMP2
  5567  000068  0029               	dw	ivt0x8_undefint shr (0+2)
  5568                           
  5569                           ; Vector 49 : SMT2
  5570  00006A  0029               	dw	ivt0x8_undefint shr (0+2)
  5571                           
  5572                           ; Vector 50 : SMT2PRA
  5573  00006C  0029               	dw	ivt0x8_undefint shr (0+2)
  5574                           
  5575                           ; Vector 51 : SMT2PWA
  5576  00006E  0029               	dw	ivt0x8_undefint shr (0+2)
  5577                           
  5578                           ; Vector 52 : DMA2SCNT
  5579  000070  0029               	dw	ivt0x8_undefint shr (0+2)
  5580                           
  5581                           ; Vector 53 : DMA2DCNT
  5582  000072  0029               	dw	ivt0x8_undefint shr (0+2)
  5583                           
  5584                           ; Vector 54 : DMA2OR
  5585  000074  0029               	dw	ivt0x8_undefint shr (0+2)
  5586                           
  5587                           ; Vector 55 : DMA2A
  5588  000076  0029               	dw	ivt0x8_undefint shr (0+2)
  5589                           
  5590                           ; Vector 56 : I2C2RX
  5591  000078  0029               	dw	ivt0x8_undefint shr (0+2)
  5592                           
  5593                           ; Vector 57 : I2C2TX
  5594  00007A  0029               	dw	ivt0x8_undefint shr (0+2)
  5595                           
  5596                           ; Vector 58 : I2C2
  5597  00007C  0029               	dw	ivt0x8_undefint shr (0+2)
  5598                           
  5599                           ; Vector 59 : I2C2E
  5600  00007E  0029               	dw	ivt0x8_undefint shr (0+2)
  5601                           
  5602                           ; Vector 60 : U2RX
  5603  000080  0029               	dw	ivt0x8_undefint shr (0+2)
  5604                           
  5605                           ; Vector 61 : U2TX
  5606  000082  0029               	dw	ivt0x8_undefint shr (0+2)
  5607                           
  5608                           ; Vector 62 : U2E
  5609  000084  0029               	dw	ivt0x8_undefint shr (0+2)
  5610                           
  5611                           ; Vector 63 : U2
  5612  000086  0029               	dw	ivt0x8_undefint shr (0+2)
  5613                           
  5614                           ; Vector 64 : TMR3
  5615  000088  0029               	dw	ivt0x8_undefint shr (0+2)
  5616                           
  5617                           ; Vector 65 : TMR3G
  5618  00008A  0029               	dw	ivt0x8_undefint shr (0+2)
  5619                           
  5620                           ; Vector 66 : TMR4
  5621  00008C  0029               	dw	ivt0x8_undefint shr (0+2)
  5622                           
  5623                           ; Vector 67 : CCP2
  5624  00008E  0029               	dw	ivt0x8_undefint shr (0+2)
  5625                           
  5626                           ; Vector 68 : CWG2
  5627  000090  0029               	dw	ivt0x8_undefint shr (0+2)
  5628                           
  5629                           ; Vector 69 : CLC2
  5630  000092  0029               	dw	ivt0x8_undefint shr (0+2)
  5631                           
  5632                           ; Vector 70 : INT2
  5633  000094  0029               	dw	ivt0x8_undefint shr (0+2)
  5634                           
  5635                           ; Vector 71 : TMR5
  5636  000096  0029               	dw	ivt0x8_undefint shr (0+2)
  5637                           
  5638                           ; Vector 72 : TMR5G
  5639  000098  0029               	dw	ivt0x8_undefint shr (0+2)
  5640                           
  5641                           ; Vector 73 : TMR6
  5642  00009A  0029               	dw	ivt0x8_undefint shr (0+2)
  5643                           
  5644                           ; Vector 74 : CCP3
  5645  00009C  0029               	dw	ivt0x8_undefint shr (0+2)
  5646                           
  5647                           ; Vector 75 : CWG3
  5648  00009E  0029               	dw	ivt0x8_undefint shr (0+2)
  5649                           
  5650                           ; Vector 76 : CLC3
  5651  0000A0  0029               	dw	ivt0x8_undefint shr (0+2)
  5652                           
  5653                           ; Vector 77 : CCP4
  5654  0000A2  0029               	dw	ivt0x8_undefint shr (0+2)
  5655                           
  5656                           ; Vector 78 : CLC4
  5657  0000A4  0029               	dw	ivt0x8_undefint shr (0+2)
  5658  0000A6                     ivt0x8_undefint:
  5659                           	callstack 0
  5660  0000A6  00FF               	reset	
  5661  0000                     
  5662                           	psect	text31
  5663  000000                     __ptext31:
  5664                           	callstack 0
  5665  000000                     
  5666                           	psect	rparam
  5667  0000                     
  5668                           	psect	idloc
  5669                           
  5670                           ;Config register IDLOC0 @ 0x200000
  5671                           ;	unspecified, using default values
  5672  200000                     	org	2097152
  5673  200000  0FFF               	dw	4095
  5674                           
  5675                           ;Config register IDLOC1 @ 0x200002
  5676                           ;	unspecified, using default values
  5677  200002                     	org	2097154
  5678  200002  0FFF               	dw	4095
  5679                           
  5680                           ;Config register IDLOC2 @ 0x200004
  5681                           ;	unspecified, using default values
  5682  200004                     	org	2097156
  5683  200004  0FFF               	dw	4095
  5684                           
  5685                           ;Config register IDLOC3 @ 0x200006
  5686                           ;	unspecified, using default values
  5687  200006                     	org	2097158
  5688  200006  0FFF               	dw	4095
  5689                           
  5690                           ;Config register IDLOC4 @ 0x200008
  5691                           ;	unspecified, using default values
  5692  200008                     	org	2097160
  5693  200008  0FFF               	dw	4095
  5694                           
  5695                           ;Config register IDLOC5 @ 0x20000A
  5696                           ;	unspecified, using default values
  5697  20000A                     	org	2097162
  5698  20000A  0FFF               	dw	4095
  5699                           
  5700                           ;Config register IDLOC6 @ 0x20000C
  5701                           ;	unspecified, using default values
  5702  20000C                     	org	2097164
  5703  20000C  0FFF               	dw	4095
  5704                           
  5705                           ;Config register IDLOC7 @ 0x20000E
  5706                           ;	unspecified, using default values
  5707  20000E                     	org	2097166
  5708  20000E  0FFF               	dw	4095
  5709                           
  5710                           	psect	config
  5711                           
  5712                           ;Config register CONFIG1L @ 0x300000
  5713                           ;	External Oscillator Selection
  5714                           ;	FEXTOSC = OFF, Oscillator not enabled
  5715                           ;	Reset Oscillator Selection
  5716                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  5717  300000                     	org	3145728
  5718  300000  8C                 	db	140
  5719                           
  5720                           ;Config register CONFIG1H @ 0x300001
  5721                           ;	Clock out Enable bit
  5722                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  5723                           ;	PRLOCKED One-Way Set Enable bit
  5724                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  5725                           ;	Clock Switch Enable bit
  5726                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5727                           ;	Fail-Safe Clock Monitor Enable bit
  5728                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5729  300001                     	org	3145729
  5730  300001  FF                 	db	255
  5731                           
  5732                           ;Config register CONFIG2L @ 0x300002
  5733                           ;	MCLR Enable bit
  5734                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  5735                           ;	Power-up timer selection bits
  5736                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  5737                           ;	Multi-vector enable bit
  5738                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  5739                           ;	IVTLOCK bit One-way set enable bit
  5740                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  5741                           ;	Low Power BOR Enable bit
  5742                           ;	LPBOREN = OFF, ULPBOR disabled
  5743                           ;	Brown-out Reset Enable bits
  5744                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  5745  300002                     	org	3145730
  5746  300002  FD                 	db	253
  5747                           
  5748                           ;Config register CONFIG2H @ 0x300003
  5749                           ;	Brown-out Reset Voltage Selection bits
  5750                           ;	BORV = VBOR_2P85, Brown-out Reset Voltage (VBOR) set to 2.8V
  5751                           ;	ZCD Disable bit
  5752                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5753                           ;	PPSLOCK bit One-Way Set Enable bit
  5754                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  5755                           ;	Stack Full/Underflow Reset Enable bit
  5756                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5757                           ;	Debugger Enable bit
  5758                           ;	DEBUG = OFF, Background debugger disabled
  5759                           ;	Extended Instruction Set Enable bit
  5760                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  5761  300003                     	org	3145731
  5762  300003  FC                 	db	252
  5763                           
  5764                           ;Config register CONFIG3L @ 0x300004
  5765                           ;	WDT Period selection bits
  5766                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5767                           ;	WDT operating mode
  5768                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  5769  300004                     	org	3145732
  5770  300004  9F                 	db	159
  5771                           
  5772                           ;Config register CONFIG3H @ 0x300005
  5773                           ;	WDT Window Select bits
  5774                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5775                           ;	WDT input clock selector
  5776                           ;	WDTCCS = SC, Software Control
  5777  300005                     	org	3145733
  5778  300005  FF                 	db	255
  5779                           
  5780                           ;Config register CONFIG4L @ 0x300006
  5781                           ;	Boot Block Size selection bits
  5782                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  5783                           ;	Boot Block enable bit
  5784                           ;	BBEN = OFF, Boot block disabled
  5785                           ;	Storage Area Flash enable bit
  5786                           ;	SAFEN = OFF, SAF disabled
  5787                           ;	Application Block write protection bit
  5788                           ;	WRTAPP = OFF, Application Block not write protected
  5789  300006                     	org	3145734
  5790  300006  FF                 	db	255
  5791                           
  5792                           ;Config register CONFIG4H @ 0x300007
  5793                           ;	Configuration Register Write Protection bit
  5794                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  5795                           ;	Boot Block Write Protection bit
  5796                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  5797                           ;	Data EEPROM Write Protection bit
  5798                           ;	WRTD = OFF, Data EEPROM not write-protected
  5799                           ;	SAF Write protection bit
  5800                           ;	WRTSAF = OFF, SAF not Write Protected
  5801                           ;	Low Voltage Programming Enable bit
  5802                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  5803  300007                     	org	3145735
  5804  300007  FF                 	db	255
  5805                           
  5806                           ;Config register CONFIG5L @ 0x300008
  5807                           ;	PFM and Data EEPROM Code Protection bit
  5808                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  5809  300008                     	org	3145736
  5810  300008  FF                 	db	255
  5811                           
  5812                           ;Config register CONFIG5H @ 0x300009
  5813                           ;	unspecified, using default values
  5814  300009                     	org	3145737
  5815  300009  FF                 	db	255
  5816                           tosu	equ	0x3FFF
  5817                           tosh	equ	0x3FFE
  5818                           tosl	equ	0x3FFD
  5819                           stkptr	equ	0x3FFC
  5820                           pclatu	equ	0x3FFB
  5821                           pclath	equ	0x3FFA
  5822                           pcl	equ	0x3FF9
  5823                           tblptru	equ	0x3FF8
  5824                           tblptrh	equ	0x3FF7
  5825                           tblptrl	equ	0x3FF6
  5826                           tablat	equ	0x3FF5
  5827                           prodh	equ	0x3FF4
  5828                           prodl	equ	0x3FF3
  5829                           indf0	equ	0x3FEF
  5830                           postinc0	equ	0x3FEE
  5831                           postdec0	equ	0x3FED
  5832                           preinc0	equ	0x3FEC
  5833                           plusw0	equ	0x3FEB
  5834                           fsr0h	equ	0x3FEA
  5835                           fsr0l	equ	0x3FE9
  5836                           wreg	equ	0x3FE8
  5837                           indf1	equ	0x3FE7
  5838                           postinc1	equ	0x3FE6
  5839                           postdec1	equ	0x3FE5
  5840                           preinc1	equ	0x3FE4
  5841                           plusw1	equ	0x3FE3
  5842                           fsr1h	equ	0x3FE2
  5843                           fsr1l	equ	0x3FE1
  5844                           bsr	equ	0x3FE0
  5845                           indf2	equ	0x3FDF
  5846                           postinc2	equ	0x3FDE
  5847                           postdec2	equ	0x3FDD
  5848                           preinc2	equ	0x3FDC
  5849                           plusw2	equ	0x3FDB
  5850                           fsr2h	equ	0x3FDA
  5851                           fsr2l	equ	0x3FD9
  5852                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        98
    BSS         195
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      64
    BANK0           160     73     121
    BANK1           256      0     216
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    can_rx_callback$0	PTR const struct . size(2) Largest target is 11
		 -> rx_msg(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 88
		 -> rx_msg(BANK0[11]), TXB0D0(SFR[1]), txq(BANK1[88]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 88
		 -> rx_msg(BANK0[11]), TXB0D0(SFR[1]), txq(BANK1[88]), 

    memcpy@s1	PTR const void  size(2) Largest target is 88
		 -> RXB0D0(SFR_9[1]), txq(BANK1[88]), hb(COMRAM[3]), fuel_press.status(BANK0[4]), 
		 -> ox_main.status(BANK0[4]), fuel_press(BANK0[9]), ox_main(BANK0[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 88
		 -> RXB0D0(SFR_9[1]), txq(BANK1[88]), hb(COMRAM[3]), fuel_press.status(BANK0[4]), 
		 -> ox_main.status(BANK0[4]), fuel_press(BANK0[9]), ox_main(BANK0[9]), 

    uart_tx@bytes	PTR unsigned char  size(2) Largest target is 64
		 -> msg(BANK1[64]), 

    can_tx@msg	PTR const struct . size(2) Largest target is 88
		 -> txq(BANK1[88]), 

    sp__memcpy	PTR void  size(2) Largest target is 88
		 -> rx_msg(BANK0[11]), TXB0D0(SFR[1]), txq(BANK1[88]), 

    can_txq_push@data	PTR const unsigned char  size(2) Largest target is 9
		 -> hb(COMRAM[3]), fuel_press.status(BANK0[4]), ox_main.status(BANK0[4]), fuel_press(BANK0[9]), 
		 -> ox_main(BANK0[9]), 

    solenoids_set@cmd	PTR struct . size(2) Largest target is 3
		 -> valve_cmd(COMRAM[3]), 

    motor_control@motor	PTR struct . size(2) Largest target is 9
		 -> fuel_press(BANK0[9]), ox_main(BANK0[9]), 

    on_can_rx@msg	PTR const struct . size(2) Largest target is 11
		 -> rx_msg(BANK0[11]), 

    can_rx_callback	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), on_can_rx(), 

    one_kHz_callback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), encoders_update(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _RXB0_int in COMRAM

    None.

Critical Paths under _TXB0_int in COMRAM

    _TXB0_int->_can_tx
    _can_tx->i2_memcpy

Critical Paths under _TMR0_int in COMRAM

    _encoders_update->_count_delta

Critical Paths under _U1TX_int in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_motor_control
    _motor_control->_encoders_get_pos
    _motor_set->_calc_speed
    _encoders_get_pos->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _can_txq_push->_memcpy

Critical Paths under _RXB0_int in BANK0

    None.

Critical Paths under _TXB0_int in BANK0

    None.

Critical Paths under _TMR0_int in BANK0

    _TMR0_int->_encoders_update
    _encoders_update->_count_delta

Critical Paths under _U1TX_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RXB0_int in BANK1

    None.

Critical Paths under _TXB0_int in BANK1

    None.

Critical Paths under _TMR0_int in BANK1

    None.

Critical Paths under _U1TX_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RXB0_int in BANK2

    None.

Critical Paths under _TXB0_int in BANK2

    None.

Critical Paths under _TMR0_int in BANK2

    None.

Critical Paths under _U1TX_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RXB0_int in BANK3

    None.

Critical Paths under _TXB0_int in BANK3

    None.

Critical Paths under _TMR0_int in BANK3

    None.

Critical Paths under _U1TX_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RXB0_int in BANK4

    None.

Critical Paths under _TXB0_int in BANK4

    None.

Critical Paths under _TMR0_int in BANK4

    None.

Critical Paths under _U1TX_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RXB0_int in BANK5

    None.

Critical Paths under _TXB0_int in BANK5

    None.

Critical Paths under _TMR0_int in BANK5

    None.

Critical Paths under _U1TX_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RXB0_int in BANK6

    None.

Critical Paths under _TXB0_int in BANK6

    None.

Critical Paths under _TMR0_int in BANK6

    None.

Critical Paths under _U1TX_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RXB0_int in BANK7

    None.

Critical Paths under _TXB0_int in BANK7

    None.

Critical Paths under _TMR0_int in BANK7

    None.

Critical Paths under _U1TX_int in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _RXB0_int in BANK8

    None.

Critical Paths under _TXB0_int in BANK8

    None.

Critical Paths under _TMR0_int in BANK8

    None.

Critical Paths under _U1TX_int in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _RXB0_int in BANK9

    None.

Critical Paths under _TXB0_int in BANK9

    None.

Critical Paths under _TMR0_int in BANK9

    None.

Critical Paths under _U1TX_int in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _RXB0_int in BANK10

    None.

Critical Paths under _TXB0_int in BANK10

    None.

Critical Paths under _TMR0_int in BANK10

    None.

Critical Paths under _U1TX_int in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _RXB0_int in BANK11

    None.

Critical Paths under _TXB0_int in BANK11

    None.

Critical Paths under _TMR0_int in BANK11

    None.

Critical Paths under _U1TX_int in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _RXB0_int in BANK12

    None.

Critical Paths under _TXB0_int in BANK12

    None.

Critical Paths under _TMR0_int in BANK12

    None.

Critical Paths under _U1TX_int in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _RXB0_int in BANK13

    None.

Critical Paths under _TXB0_int in BANK13

    None.

Critical Paths under _TMR0_int in BANK13

    None.

Critical Paths under _U1TX_int in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _RXB0_int in BANK14

    None.

Critical Paths under _TXB0_int in BANK14

    None.

Critical Paths under _TMR0_int in BANK14

    None.

Critical Paths under _U1TX_int in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _RXB0_int in BANK15

    None.

Critical Paths under _TXB0_int in BANK15

    None.

Critical Paths under _TMR0_int in BANK15

    None.

Critical Paths under _U1TX_int in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8800
                                             72 BANK0      1     1      0
                           _can_init
                       _can_txq_push
                      _encoders_init
                      _motor_control
                        _motors_init
                     _solenoids_init
                      _solenoids_set
                          _time_init
                        _time_millis
                          _time_secs
                          _uart_init
                            _uart_tx
 ---------------------------------------------------------------------------------
 (1) _uart_tx                                             11     7      4     372
                                             10 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _time_secs                                            4     2      2      34
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _time_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _solenoids_set                                        2     0      2     214
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _solenoids_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motors_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_control                                       12    10      2    6404
                                             60 BANK0     12    10      2
                                _abs
                         _calc_speed
                   _encoders_get_pos
                  _encoders_is_limit
                          _motor_set
                        _time_millis
 ---------------------------------------------------------------------------------
 (1) _time_millis                                          4     2      2      34
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _motor_set                                            6     5      1     592
                                             13 BANK0      6     5      1
                         _calc_speed (ARG)
 ---------------------------------------------------------------------------------
 (2) _encoders_is_limit                                    1     1      0      62
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _encoders_get_pos                                     1     1      0    3928
                                             59 BANK0      1     1      0
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     656
                                             10 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     517
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2693
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calc_speed                                           3     2      1     279
                                             10 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     183
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _encoders_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _can_txq_push                                        11     6      5    1742
                                             21 BANK0     11     6      5
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6     808
                                             10 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (1) _can_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _RXB0_int                                             4     4      0     440
                                             11 COMRAM     4     4      0
                   Absolute function *
                          _on_can_rx *
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (6) i2_memcpy                                            11     5      6     299
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _on_can_rx                                            4     2      2     141
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TXB0_int                                             0     0      0     485
                             _can_tx
 ---------------------------------------------------------------------------------
 (5) _can_tx                                               4     2      2     485
                                             26 COMRAM     4     2      2
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (6) i2_memcpy                                            11     5      6     299
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TMR0_int                                             2     2      0     437
                                              8 BANK0      2     2      0
                   Absolute function *
                    _encoders_update *
 ---------------------------------------------------------------------------------
 (5) _encoders_update                                      4     4      0     437
                                              4 BANK0      4     4      0
                        _count_delta
 ---------------------------------------------------------------------------------
 (6) _count_delta                                          5     4      1     307
                                             30 COMRAM     1     0      1
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _U1TX_int                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_init
   _can_txq_push
     _memcpy
   _encoders_init
   _motor_control
     _abs
     _calc_speed
     _encoders_get_pos
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _encoders_is_limit
     _motor_set
       _calc_speed (ARG)
     _time_millis
   _motors_init
   _solenoids_init
   _solenoids_set
   _time_init
   _time_millis
   _time_secs
   _uart_init
   _uart_tx

 _RXB0_int (ROOT)
   Absolute function(Fake) *
   _on_can_rx *
   i2_memcpy *

 _TXB0_int (ROOT)
   _can_tx
     i2_memcpy

 _TMR0_int (ROOT)
   Absolute function(Fake) *
   _encoders_update *
     _count_delta

 _U1TX_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      D8       8       84.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      79       5       75.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      40       1       67.4%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     191       6        0.0%
DATA                 0      0     191       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Aug 05 08:32:51 2021

      __end_of_can_txq_push 0E32                          _hb 0037                          _ms 0024  
             _solenoids_set 141A             can_txq_push@len 0077                fp__on_can_rx 0000  
                       l122 14D6                         l211 082E                         l300 0E30  
                       l109 17D6                         l127 0F00                         l226 17CA  
                       l340 17B6                         l229 147A                         l175 166A  
                       l343 1786                         l193 13B0                         l337 179E  
                       l292 12FC                         l189 0D5E                         l381 1062  
                       l295 1338                         l296 133E                         l384 1066  
                       l377 176E                         l692 0C7C                         _abs 16B0  
                       _msg 0198                         _txq 0140              _solenoids_init 17B8  
                       prod 003FF3            can_txq_push@data 0078                         tosl 003FFD  
                       wreg 003FE8                ___flmul@aexp 0085                ___flmul@bexp 008A  
              ___flmul@sign 0084                ___flmul@temp 008F                ___flmul@prod 008B  
              ___fltol@exp1 009A                        l1013 04FA                        l1016 038C  
                      l1009 0172                        l1026 04BC                        l1018 0404  
                      l1050 088A                        l1019 03F2                        ?_abs 006A  
                      l1053 09E6                        l1070 16E8                        l1064 097E  
                      l2201 131C                        l1073 16F0                        l1057 0922  
                      l2203 1322                        l2211 1632                        l3011 09F8  
                      l2221 1644                        l2213 1634                        l2205 17B8  
                      l3021 0A18                        l3013 09FC                        l1079 1532  
                      l2207 17CC                        l2231 165E                        l2223 164C  
                      l2215 163A                        l3031 0A7A                        l3023 0A2E  
                      l3015 0A08                        l3007 09E8                        l2233 1662  
                      l2225 1650                        l2217 163E                        l2209 1626  
                      l3041 0AEC                        l3025 0A52                        l3033 0A88  
                      l3017 0A10                        l3009 09F0                        l2235 1666  
                      l2227 1654                        l2219 1642                        l2171 179C  
                      l3051 0B54                        l3043 0B10                        l3035 0AAC  
                      l3027 0A5E                        l3019 0A14                        l2229 1656  
                      l2181 176A                        l2173 1754                        l3045 0B1C  
                      l3037 0AB8                        l3029 0A6C                        l2191 12D8  
                      l2183 12CC                        l2167 1788                        l2175 1758  
                      l3047 0B44                        l3039 0AD2                        l2193 12E6  
                      l2185 12D0                        l2601 0296                        l2169 1798  
                      l2177 1766                        l3049 0B48                        l2195 1300  
                      l2187 12D4                        l2611 0346                        l2603 02B6  
                      l2179 1768                        l2197 1310                        l2189 12D6  
                      l2621 039C                        l2613 0354                        l2605 02C6  
                      l2541 00DA                        l2533 00AC                        l2701 0C5C  
                      l2199 131A                        l2623 03AA                        l2615 0372  
                      l2607 02E6                        l2551 0116                        l2543 00EA  
                      l2535 00BA                        l2703 0C6C                        l2711 0854  
                      l2633 0414                        l2641 045C                        l2625 03AE  
                      l2617 037C                        l2609 0310                        l2561 014C  
                      l2553 011C                        l2545 00FA                        l2537 00C8  
                      l2721 08CC                        l2713 089A                        l2801 0C82  
                      l2651 04D0                        l2643 0476                        l2635 0420  
                      l2627 03BC                        l2619 038A                        l2563 015C  
                      l2555 012A                        l2547 0100                        l2539 00CA  
                      l2731 0954                        l2723 08D8                        l2715 08B0  
                      l2707 0834                        l2811 0CC2                        l2803 0C98  
                      l2653 04DE                        l2645 048A                        l2637 042E  
                      l2629 03EA                        l2581 01E6                        l2573 01A6  
                      l2565 0162                        l2557 012C                        l2549 0110  
                      l2741 0992                        l2733 0960                        l2725 090A  
                      l2709 0846                        l2821 0CFA                        l2805 0CA8  
                      l2813 0CD0                        l2901 1044                        l2655 04E0  
                      l2647 04A4                        l2639 0458                        l2591 0238  
                      l2583 0202                        l2575 01B6                        l2567 0182  
                      l2559 013C                        l2671 0BCC                        l2663 0B76  
                      l2743 09B6                        l2735 096E                        l2727 090C  
                      l2719 08C4                        l2831 0D44                        l2815 0CE0  
                      l2823 0D14                        l2807 0CAE                        l2911 0574  
                      l2903 1046                        l2649 04C0                        l2657 04E6  
                      l2593 0248                        l2585 020E                        l2577 01C0  
                      l2569 0192                        l2673 0BCE                        l2665 0B8E  
                      l2745 09C6                        l2737 098C                        l2729 0918  
                      l2833 0D56                        l2825 0D26                        l2817 0CE6  
                      l2809 0CC0                        l2753 17A0                        l2921 05C4  
                      l2913 0578                        l2905 04FC                        l2851 1394  
                      l2843 1366                        l2659 04EA                        l2595 0258  
                      l2587 021A                        l2579 01DA                        l2675 0BDE  
                      l2747 09D4                        l2739 098E                        l2771 1492  
                      l2827 0D36                        l2819 0CF8                        l2931 0636  
                      l2923 05E2                        l2915 0592                        l2907 0528  
                      l2861 13AE                        l2845 137A                        l2837 1344  
                      l2597 0268                        l2589 0228                        l2685 0C08  
                      l2677 0BE2                        l2669 0BA2                        l2749 09D6  
                      l2781 14D4                        l2829 0D3A                        l2941 06CC  
                      l2933 0654                        l2925 05FE                        l2917 05A8  
                      l2909 0548                        l2871 14EC                        l2855 139A  
                      l2839 1360                        l2599 0286                        l2695 0C30  
                      l2687 0C12                        l2679 0BF0                        l2791 0E9A  
                      l2775 14AA                        l2951 073A                        l2943 06E8  
                      l2935 0672                        l2927 0602                        l2919 05AC  
                      l2873 14FC                        l2865 16B0                        l2857 13A8  
                      l2849 1380                        l2697 0C3C                        l2689 0C1C  
                      l2793 0EAC                        l2785 0E36                        l2777 14BC  
                      l2769 1480                        l2961 07B2                        l2953 074C  
                      l2945 06FE                        l2937 06AA                        l2929 061A  
                      l2881 0FB8                        l2875 1500                        l2971 0D60  
                      l2867 16CC                        l2699 0C4C                        l2787 0E48  
                      l2963 07EE                        l2955 0750                        l2947 0702  
                      l2939 06B0                        l2883 0FBC                        l2877 1512  
                      l2869 14D8                        l2981 0DF2                        l2973 0D64  
                      l2797 0EFE                        l2965 0804                        l2957 0768  
                      l2949 071A                        l2893 1010                        l2885 0FC2  
                      l2879 1516                        l2991 0E1C                        l2983 0DF6  
                      l2967 0820                        l2959 0798                        l2895 102E  
                      l2993 0E2C                        l2985 0E06                        l2977 0D9E  
                      l2969 141A                        l2897 1030                        l2889 0FD8  
                      l2987 0E0A                        l2979 0DD0                        l2995 1770  
                      l2899 1040                        l2989 0E0E               calc_speed@err 006C  
             calc_speed@pos 006B                        u2210 00C8                        u2211 00C4  
                      u2300 038A                        u2220 00DA                        u2301 0386  
                      u2221 00D6                        u3005 1448                        u3030 0D9A  
                      u2310 03AA                        u2230 00EA                        u3110 0A52  
                      u3031 0D96                        u2311 03A6                        u2231 00E6  
                      u3015 1460                        u3007 144A                        u3111 0A4E  
                      u3040 0E06                        u2320 03BC                        u2240 012A  
                      u2400 0B8E                        u3120 0AAC                        u3041 0E02  
                      u2321 03B8                        u2241 0126                        u2401 0B8A  
                      u3025 1478                        u3017 1462                        u3121 0AA8  
                      u3050 0E1C                        u2330 03EA                        u2250 013C  
                      u2410 0BC2                        u3130 0B10                        u3051 0E18  
                      u2331 03E6                        u2251 0138                        u3027 147A  
                      u3131 0B0C                        u3060 0E2C                        u2340 0400  
                      u2260 014C                        u2420 0BF0                        u2500 0906  
                      u3140 0B2C                        u3061 0E28                        u2341 03FC  
                      u2261 0148                        u2421 0BEC                        u2501 0902  
                      u3141 0B26                        u2350 0414                        u2270 0182  
                      u2430 0C04                        u2510 0950                        u2351 0410  
                      u2271 017E                        u2431 0C00                        u2415 0BB8  
                      u2511 094C                        u2360 042E                        u2280 0192  
                      u2440 0C2C                        u2520 096E                        u2600 14BC  
                      u2361 042A                        u2281 018E                        u2441 0C28  
                      u2521 096A                        u2601 14B8                        u2370 0476  
                      u2290 0330                        u2450 0C4C                        u2530 097E  
                      u2610 14CC                        u3146 0B2E                        u2371 0472  
                      u2451 0C48                        u2531 097A                        u2611 14C6  
                      u2380 04A4                        u2460 0C5C                        u2540 098C  
                      u2620 0E48                        u2700 0D56                        u2381 04A0  
                      u2461 0C58                        u2541 0988                        u2621 0E44  
                      u2701 0D52                        u2710 1360                        u2390 04DE  
                      u2550 09C6                        u2470 0846                        u2630 0EAC  
                      u2711 135C                        u2391 04DA                        u2295 0326  
                      u2551 09C2                        u2471 0842                        u2631 0EA8  
                      u1680 12FC                        u2720 137A                        u2560 09D4  
                      u2480 0854                        u2616 14CE                        u2640 0C98  
                      u2800 1062                        u1681 12F8                        u2721 1376  
                      u2561 09D0                        u2481 0850                        u2641 0C94  
                      u2801 105E                        u1690 1338                        u2730 1394  
                      u2490 08B0                        u2650 0CA8                        u2810 0592  
                      u1691 1334                        u2731 1390                        u2491 08AC  
                      u2651 0CA4                        u2811 058E                        u2740 13A8  
                      u2580 1492                        u2660 0CC0                        u2900 06FE  
                      u2820 05A8                        u2741 13A4                        u2581 148E  
                      u2661 0CBC                        u2901 06FA                        u2821 05A4  
                      u2750 16CC                        u2590 14A2                        u2670 0CE0  
                      u2751 16C8                        u2591 149C                        u2671 0CDC  
                      u2760 1532                        u2680 0CF8                        u2920 073A  
                      u2840 05E2                        u2761 152E                        u2681 0CF4  
                      u2921 0736                        u2841 05DE                        u2690 0D36  
                      u2930 074C                        u2850 05FE                        u2770 0FD4  
                      u2691 0D32                        u2931 0748                        u2915 0716  
                      u2851 05FA                        u2835 05C0                        u2771 0FD0  
                      u2596 14A4                        u2916 071A                        u2836 05C4  
                      u2780 100C                        u2781 1008                        u2950 077C  
                      u2870 0636                        u2790 1040                        u2951 0774  
                      u2871 0632                        u2791 103C                        u2880 06CC  
                      u2945 0764                        u2881 06C8                        u2865 0616  
                      u2970 07B2                        u2946 0768                        u2890 06E8  
                      u2866 061A                        u2971 07AE                        u2891 06E4  
                      u2980 0820                        u2981 081C                        u2968 0780  
                      u2995 1430                        u2997 1432                        i2l86 0FB6  
                      _WPUA 003A41                        abs@a 006A                        _head 0033  
              ?_count_delta 001F                        _main 09E8                        _tail 0032  
                      _secs 0020                        fsr1h 003FE2                        fsr2h 003FDA  
                      indf1 003FE7                        indf2 003FDF                        fsr1l 003FE1  
                      fsr2l 003FD9                        prodh 003FF4                        prodl 003FF3  
                      start 00A8                 _tx_ring_buf 0100                ___param_bank 000000  
                     ??_abs 006C              ?_solenoids_set 006A               ___fltol@sign1 0099  
                     ?_main 0001      __end_of_solenoids_init 17CC             __end_of___flmul 04FC  
           __end_of___fltol 0C7E              _last_10Hz_time 002A            __end_of_U1TX_int 16B0  
                     _T2CLK 003FAE                       _U1TXB 003DEA                       i2l115 15DA  
                     i2l118 11B6                       i2l311 124C                       i2l305 110E  
                     i2l317 1624                       i2l350 1418                       i2l392 16AE  
           _last_200Hz_time 002C               _last_2Hz_time 0028                       _TRISB 003FC3  
                i2memcpy@d1 0010                  i2memcpy@s1 0012            __end_of_RXB0_int 124E  
           ??_encoders_init 0020            __end_of_TMR0_int 141A            __end_of_TXB0_int 1626  
                     pclath 003FFA   __size_of_encoders_get_pos 00D0                       tablat 003FF5  
           __end_of_uart_tx 1068                       status 003FD8              count_delta@res 0063  
          __end_ofi2_memcpy 158E             __initialization 124E                __end_of_main 0B76  
     encoders_get_pos@which 009B                      ??_main 00A8             ?_solenoids_init 0001  
             __activetblptr 000002                      _CCPR1H 003F7D                      _CCPR2H 003F79  
                    _CCPR1L 003F7C                      _CCPR2L 003F78                      _ANSELA 003A40  
                    _ANSELB 003A50                      _U1BRGH 003DF6                      _U1BRGL 003DF5  
                    _RB0PPS 003A08                      _RB2PPS 003A0A                      _RC0PPS 003A10  
                    _RC7PPS 003A17                      i2l3001 1194                      i2l3003 11AE  
                    i2l3005 11B2                      i2l1079 158C                      i2l2161 155C  
                    i2l3107 0F9A                      i2l2163 156E                      i2l2155 1534  
                    i2l3061 13E8                      i2l3053 13B4                      i2l3109 0FA8  
                    i2l2157 1548                      i2l2165 1572                      i2l3063 13EC  
                    i2l3055 13B8                      i2l2159 1558                      i2l3065 13FE  
                    i2l3057 13BC                      i2l2361 0F64                      i2l2353 0F02  
                    i2l2441 11B8                      i2l3059 13E0                      i2l2355 0F06  
                    i2l2451 124A                      i2l2443 11BC                      i2l2461 160C  
                    i2l2453 15DC                      i2l2357 0F24                      i2l2365 0F6C  
                    i2l2445 11FC                      i2l2391 10DC                      i2l2463 1610  
                    i2l2455 15E0                      i2l2359 0F46                      i2l2447 1216  
                    i2l2481 166C                      i2l2393 110A                      i2l2385 1068  
                    i2l2465 1620                      i2l2449 1228                      i2l2491 16AA  
                    i2l2483 167E                      i2l2387 10BE                      i2l2459 15F8  
                    i2l2485 1686                      i2l2389 10C0                      i2l2487 1698  
                    i2l2489 169A                      i2l2761 15D2                      i2l2755 1592  
                    i2l2765 15D8                      i2l2757 15BE                      i2l2759 15D0  
                    i2l2997 1110                      i2l2999 117A                      _RXB0D0 003F86  
                    _TXB0D0 0037E6            __end_of_can_init 1340            __end_of___xxtofl 09E8  
     __size_of_can_txq_push 00D2                 i2memcpy@tmp 001A             ??_solenoids_set 0020  
                    _can_tx 1068                   ??___flmul 0080                   ??___fltol 0095  
                    _memcpy 14D8                      clear_0 1298                      clear_1 12A4  
                    clear_2 12B0                      isa$std 000001                      _rx_msg 00CE  
              ?_time_millis 006A                ?_motors_init 0001                      tblptrh 003FF7  
                    tblptrl 003FF6                      tblptru 003FF8                   ??_uart_tx 006E  
              _can_txq_push 0D60                ___xxtofl@arg 0074                ___xxtofl@exp 0073  
              ___xxtofl@val 006A                  __accesstop 0060     __end_of__initialization 12C2  
             ___rparam_used 000001                  ___fltol@f1 0091                   ?_U1TX_int 0001  
      __size_of_count_delta 004E              __pcstackCOMRAM 0001    __size_of_encoders_update 00A8  
        fp__encoders_update 0000                __pidataBANK0 1732                __pidataBANK1 16F2  
            ivt0x8_undefint 00A6                   ?_RXB0_int 0001                   ?_TMR0_int 0001  
                 ?_TXB0_int 0001                   ?i2_memcpy 0010                  _calc_speed 1340  
                __pbssBANK0 00CB                  __pbssBANK1 0100            _encoders_get_pos 0E32  
                __pnvCOMRAM 003D                     IVTBASEH 003FD6                     IVTBASEL 003FD5  
                   IVTBASEU 003FD7                  ??_U1TX_int 0020          __size_of_on_can_rx 00B6  
                   ?_can_tx 001B                  _hb_rx_flag 0036       __end_of_motor_control 0830  
                ??_RXB0_int 000C                  ??_TMR0_int 0068                     ?_memcpy 006A  
                ??_TXB0_int 001F          __size_of_motor_set 00E2          __size_of_time_init 0018  
        __size_of_time_secs 0018          __size_of_uart_init 001C                   ?_can_init 0001  
                 ?___xxtofl 006A                  ??i2_memcpy 0016       count_delta@prev_state 001F  
          solenoids_set@cmd 006A          calc_speed@goal_pos 006A                     __Hparam 0000  
                   __Lparam 0000                  _fuel_press 00B9            ??_solenoids_init 0020  
          _enc_1_prev_state 0035                     ___flmul 00AC                     ___fltol 0B76  
           __size_of_can_tx 00A8                     __pcinit 124E             __size_of_memcpy 005C  
                   __ramtop 1000                     __ptext0 09E8                     __ptext1 0FB8  
                   __ptext2 1754                     __ptext3 1770                     __ptext4 1788  
                   __ptext5 141A                     __ptext6 17B8                     __ptext7 1626  
                   __ptext8 04FC                     __ptext9 17A0           ??_encoders_update 0064  
                ??_can_init 0020                   _T2CONbits 003FAC                __size_of_abs 0042  
                ??___xxtofl 006E                 ?_calc_speed 006A        __size_of_time_millis 0018  
         __end_of_on_can_rx 0FB8                     _ox_main 00C2                     _uart_tx 0FB8  
      __size_of_motors_init 0046            _enc_2_prev_state 0034        end_of_initialization 12C2  
     __end_of_encoders_init 17D8                     memcpy@d 0071                     memcpy@n 006E  
                   memcpy@s 0073               __Lmediumconst 0000           __end_of_motor_set 0D60  
         __end_of_time_init 17A0           __end_of_time_secs 1788           __end_of_uart_init 1770  
                   postdec1 003FE5                     postdec2 003FDD                     postinc0 003FEE  
                   postinc2 003FDE            count_delta@state 0062                   _PORTAbits 003FCA  
             ___xxtofl@sign 0072                   _TRISAbits 003FC2                   _TRISBbits 003FC3  
                 _TRISCbits 003FC4              _last_second_ms 0022              can_txq_push@id 0075  
               ___flmul@grs 0086                 _CCP1CONbits 003F7E                 _CCP2CONbits 003F7A  
       __size_of_calc_speed 0072           __size_of_U1TX_int 0044       __end_of_solenoids_set 147C  
              on_can_rx@msg 0001    __end_of_encoders_get_pos 0F02              __end_of_can_tx 1110  
                 i2memcpy@d 0016                   i2memcpy@n 0014                   i2memcpy@s 0018  
         __size_of_RXB0_int 0096              __end_of_memcpy 1534           __size_of_TMR0_int 0066  
         __size_of_TXB0_int 004A         start_initialization 124E                 __end_of_abs 16F2  
         __size_ofi2_memcpy 005A                  ivt0x8_base 0008                 _CANSTATbits 003F8E  
             ??_count_delta 0060                    ??_can_tx 001D                 __pdataBANK0 00A9  
               __pdataBANK1 0198                    ??_memcpy 0020          motor_control@motor 009C  
                 ___flmul@a 007C                   ___flmul@b 0078                 __pbssCOMRAM 0020  
             __pcstackBANK0 0060                 _BRGCON1bits 003703                 _enc_1_count 0030  
         __size_of_can_init 0074                 _BRGCON2bits 003704                 _BRGCON3bits 003705  
         _encoders_is_limit 147C                 _enc_2_count 002E           __size_of___xxtofl 01B8  
        ?_encoders_is_limit 0001            _one_kHz_callback 003F             _encoders_errors 00CD  
       ??_encoders_is_limit 0020             _encoders_update 1110          _count_delta_matrix 00A9  
       __end_of_count_delta 15DC                    ?___flmul 0078                    ?___fltol 0091  
 __end_of_encoders_is_limit 14D8                ??_calc_speed 0020                   can_tx@msg 001B  
                  _CANRXPPS 003AED                    ?_uart_tx 006A                   _on_can_rx 0F02  
    __size_of_motor_control 0334                    _LATBbits 003FBB                    _LATCbits 003FBC  
                  _PIE3bits 003993                    _PIE5bits 003995                    _U1TX_int 166C  
                  i2u200_40 0F24                    i2u200_41 0F20                    i2u201_40 0F64  
                  i2u201_41 0F60                    i2u211_45 11C6                    i2u220_40 16AA  
                  i2u212_40 1228                    i2u220_41 16A6                    i2u212_41 1224  
                  i2u310_40 116E                    i2u214_40 15F4                    i2u213_48 1236  
                  i2u310_41 1166                    i2u214_41 15F0                    i2u213_49 124A  
                  i2u206_45 10B0                    i2u310_48 1172                    i2u215_40 1620  
                  i2u215_41 161C                    i2u219_40 167E                    i2u307_40 1124  
                  i2u315_40 13E0                    i2u219_41 167A                    i2u307_41 111A  
                  i2u315_41 13DC                    i2u308_40 113A                    i2u307_48 1128  
                  i2u316_40 13FE                    i2u308_41 1132                    i2u316_41 13FA  
                  i2u309_40 1158                    i2u308_48 113E                    i2u309_41 1150  
                  i2u309_48 115C                    i2u317_48 1404                    i2u317_49 1418  
                  i2u167_40 158C                    i2u167_41 1588                    i2u257_40 15D0  
                  i2u257_41 15CC                    _PIR3bits 0039A3                    _PIR5bits 0039A5  
   motor_control@delta_time 00A4                    _RXB0SIDH 003F81                    _RXB0SIDL 003F82  
           time_secs@result 006C                   _valve_cmd 003A                   _motor_set 0C7E  
                 _time_init 1788                   _time_secs 1770                   _uart_init 1754  
        __end_of_calc_speed 13B2                    _TXB0SIDH 0037E1                    _TXB0SIDL 0037E2  
                  _RXB0_int 11B8                    _TMR0_int 13B4                    _TXB0_int 15DC  
             ??_time_millis 0020               ??_motors_init 0020                    i2_memcpy 1534  
               _INTCON0bits 003FD2                   copy_data0 1262                   copy_data1 1284  
                _CANCONbits 003F8F               ?_can_txq_push 0075                  ?_on_can_rx 0001  
   __end_of_encoders_update 11B8                 _count_delta 158E                    __Hrparam 0000  
                 memcpy@tmp 0070                    __Lrparam 0000                  ?_motor_set 006D  
                ?_time_init 0001                  ?_time_secs 006A                  ?_uart_init 0001  
          __size_of___flmul 0450               _motor_control 04FC            __size_of___fltol 0108  
            motor_set@speed 006D              motor_set@which 0072      __size_of_encoders_init 000C  
         ?_encoders_get_pos 0001                  _ANSELAbits 003A40                  _ANSELBbits 003A50  
                _ANSELCbits 003A60          ??_encoders_get_pos 0020                    _can_init 12CC  
__size_of_encoders_is_limit 005C                    ___xxtofl 0830                  _T0CON0bits 003FB8  
                _T0CON1bits 003FB9     __size_of_solenoids_init 0014                    __pivt0x8 0008  
                  __ptext10 0C7E                    __ptext11 147C                    __ptext20 14D8  
                  __ptext12 0E32                    __ptext21 12CC                    __ptext13 0830  
                  __ptext30 166C                    __ptext22 11B8                    __ptext14 0B76  
                  __ptext31 0000                    __ptext23 1534                    __ptext15 00AC  
                  __ptext24 0F02                    __ptext16 1340                    __ptext25 15DC  
                  __ptext17 16B0                    __ptext26 1068                    __ptext18 17CC  
                  __ptext27 13B4                    __ptext19 0D60                    __ptext28 1110  
                  __ptext29 158E            __size_of_uart_tx 00B0         __end_of_time_millis 17B8  
            ??_can_txq_push 007A                  _U1CON0bits 003DF2                  _U1CON1bits 003DF3  
       __end_of_motors_init 166C             _can_rx_callback 003D               __size_of_main 018E  
              _TXB0SIDLbits 0037E2      motor_control@delta_pos 00A6                    isa$xinst 000000  
            ?_motor_control 009C                    _txq_head 00CC                 _RXB0DLCbits 003F85  
                  _txq_tail 00CB                 _RXB0CONbits 003F80                    memcpy@d1 006A  
                  memcpy@s1 006C             _last_hb_rx_time 0026           time_millis@result 006C  
encoders_update@enc_1_state 0066  encoders_update@enc_2_state 0067                    intlevel2 0000  
               ??_on_can_rx 0003               _encoders_init 17CC      __size_of_solenoids_set 0062  
          ?_encoders_update 0001                 _TXB0DLCbits 0037E5                 _TXB0CONbits 0037E0  
            uart_tx@n_bytes 006C                    uart_tx@i 0074                 ??_motor_set 006E  
               ??_time_init 0020                 ??_time_secs 0020                 ??_uart_init 0020  
    encoders_is_limit@which 006A                motor_set@pwm 0070                 _time_millis 17A0  
               _motors_init 1626              ?_encoders_init 0001                uart_tx@bytes 006A  
         _motor_control$713 00A0           _motor_control$714 00A1           _motor_control$716 00A2  
         _motor_control$717 00A3             ??_motor_control 009E  
